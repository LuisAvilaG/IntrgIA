{
  "version": 3,
  "sources": ["../../genkit/src/index.ts", "../../@genkit-ai/googleai/src/common.ts", "../../@google/generative-ai/dist/index.js", "../../genkit/src/embedder.ts", "../../@genkit-ai/googleai/src/embedder.ts", "../../genkit/src/model.ts", "../../genkit/src/middleware.ts", "../../@google/generative-ai/dist/server/index.js", "../../@genkit-ai/googleai/src/context-caching/constants.ts", "../../@genkit-ai/googleai/src/context-caching/types.ts", "../../@genkit-ai/googleai/src/context-caching/utils.ts", "../../@genkit-ai/googleai/src/context-caching/index.ts", "../../@genkit-ai/googleai/src/gemini.ts", "../../@genkit-ai/googleai/src/predict.ts", "../../@genkit-ai/googleai/src/imagen.ts", "../../@genkit-ai/googleai/src/list-models.ts", "../../@genkit-ai/googleai/src/veo.ts", "../../@genkit-ai/core/src/logging.ts", "../../@genkit-ai/ai/src/model.ts", "../../@genkit-ai/core/src/index.ts", "../../@genkit-ai/core/src/schema.ts", "../../zod-to-json-schema/dist/esm/Options.js", "../../zod-to-json-schema/dist/esm/Refs.js", "../../zod-to-json-schema/dist/esm/errorMessages.js", "../../zod-to-json-schema/dist/esm/getRelativePath.js", "../../zod-to-json-schema/dist/esm/parsers/any.js", "../../zod-to-json-schema/dist/esm/parsers/array.js", "../../zod-to-json-schema/dist/esm/parsers/bigint.js", "../../zod-to-json-schema/dist/esm/parsers/boolean.js", "../../zod-to-json-schema/dist/esm/parsers/branded.js", "../../zod-to-json-schema/dist/esm/parsers/catch.js", "../../zod-to-json-schema/dist/esm/parsers/date.js", "../../zod-to-json-schema/dist/esm/parsers/default.js", "../../zod-to-json-schema/dist/esm/parsers/effects.js", "../../zod-to-json-schema/dist/esm/parsers/enum.js", "../../zod-to-json-schema/dist/esm/parsers/intersection.js", "../../zod-to-json-schema/dist/esm/parsers/literal.js", "../../zod-to-json-schema/dist/esm/parsers/string.js", "../../zod-to-json-schema/dist/esm/parsers/record.js", "../../zod-to-json-schema/dist/esm/parsers/map.js", "../../zod-to-json-schema/dist/esm/parsers/nativeEnum.js", "../../zod-to-json-schema/dist/esm/parsers/never.js", "../../zod-to-json-schema/dist/esm/parsers/null.js", "../../zod-to-json-schema/dist/esm/parsers/union.js", "../../zod-to-json-schema/dist/esm/parsers/nullable.js", "../../zod-to-json-schema/dist/esm/parsers/number.js", "../../zod-to-json-schema/dist/esm/parsers/object.js", "../../zod-to-json-schema/dist/esm/parsers/optional.js", "../../zod-to-json-schema/dist/esm/parsers/pipeline.js", "../../zod-to-json-schema/dist/esm/parsers/promise.js", "../../zod-to-json-schema/dist/esm/parsers/set.js", "../../zod-to-json-schema/dist/esm/parsers/tuple.js", "../../zod-to-json-schema/dist/esm/parsers/undefined.js", "../../zod-to-json-schema/dist/esm/parsers/unknown.js", "../../zod-to-json-schema/dist/esm/parsers/readonly.js", "../../zod-to-json-schema/dist/esm/selectParser.js", "../../zod-to-json-schema/dist/esm/parseDef.js", "../../zod-to-json-schema/dist/esm/zodToJsonSchema.js", "../../zod-to-json-schema/dist/esm/index.js", "../../@genkit-ai/ai/src/embedder.ts", "../../@genkit-ai/core/src/tracing.ts", "../../@genkit-ai/ai/src/evaluator.ts", "../../@genkit-ai/ai/src/reranker.ts", "../../@genkit-ai/ai/src/retriever.ts", "../../genkit/src/plugin.ts", "../../@genkit-ai/googleai/src/index.ts"],
  "sourcesContent": ["/**\n * @license\n *\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Main genkit import.\n *\n * ```ts\n * import { genkit } from 'genkit';\n * ```\n *\n * @module /\n */\nexport * from './common.js';\nexport { Genkit, genkit, type GenkitOptions } from './genkit.js';\n", "/**\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getClientHeader as defaultGetClientHeader } from 'genkit';\nimport process from 'process';\n\nexport function getApiKeyFromEnvVar(): string | undefined {\n  return (\n    process.env.GEMINI_API_KEY ||\n    process.env.GOOGLE_API_KEY ||\n    process.env.GOOGLE_GENAI_API_KEY\n  );\n}\n\nexport function getGenkitClientHeader() {\n  if (process.env.MONOSPACE_ENV == 'true') {\n    return defaultGetClientHeader() + ' firebase-studio-vm';\n  }\n  return defaultGetClientHeader();\n}\n", "'use strict';\n\n/**\n * Contains the list of OpenAPI data types\n * as defined by https://swagger.io/docs/specification/data-models/data-types/\n * @public\n */\nexports.SchemaType = void 0;\n(function (SchemaType) {\n    /** String type. */\n    SchemaType[\"STRING\"] = \"string\";\n    /** Number type. */\n    SchemaType[\"NUMBER\"] = \"number\";\n    /** Integer type. */\n    SchemaType[\"INTEGER\"] = \"integer\";\n    /** Boolean type. */\n    SchemaType[\"BOOLEAN\"] = \"boolean\";\n    /** Array type. */\n    SchemaType[\"ARRAY\"] = \"array\";\n    /** Object type. */\n    SchemaType[\"OBJECT\"] = \"object\";\n})(exports.SchemaType || (exports.SchemaType = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @public\n */\nexports.ExecutableCodeLanguage = void 0;\n(function (ExecutableCodeLanguage) {\n    ExecutableCodeLanguage[\"LANGUAGE_UNSPECIFIED\"] = \"language_unspecified\";\n    ExecutableCodeLanguage[\"PYTHON\"] = \"python\";\n})(exports.ExecutableCodeLanguage || (exports.ExecutableCodeLanguage = {}));\n/**\n * Possible outcomes of code execution.\n * @public\n */\nexports.Outcome = void 0;\n(function (Outcome) {\n    /**\n     * Unspecified status. This value should not be used.\n     */\n    Outcome[\"OUTCOME_UNSPECIFIED\"] = \"outcome_unspecified\";\n    /**\n     * Code execution completed successfully.\n     */\n    Outcome[\"OUTCOME_OK\"] = \"outcome_ok\";\n    /**\n     * Code execution finished but with a failure. `stderr` should contain the\n     * reason.\n     */\n    Outcome[\"OUTCOME_FAILED\"] = \"outcome_failed\";\n    /**\n     * Code execution ran for too long, and was cancelled. There may or may not\n     * be a partial output present.\n     */\n    Outcome[\"OUTCOME_DEADLINE_EXCEEDED\"] = \"outcome_deadline_exceeded\";\n})(exports.Outcome || (exports.Outcome = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Possible roles.\n * @public\n */\nconst POSSIBLE_ROLES = [\"user\", \"model\", \"function\", \"system\"];\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nexports.HarmCategory = void 0;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n    HarmCategory[\"HARM_CATEGORY_CIVIC_INTEGRITY\"] = \"HARM_CATEGORY_CIVIC_INTEGRITY\";\n})(exports.HarmCategory || (exports.HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nexports.HarmBlockThreshold = void 0;\n(function (HarmBlockThreshold) {\n    /** Threshold is unspecified. */\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    /** Content with NEGLIGIBLE will be allowed. */\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    /** Content with NEGLIGIBLE and LOW will be allowed. */\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    /** Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed. */\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    /** All content will be allowed. */\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(exports.HarmBlockThreshold || (exports.HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nexports.HarmProbability = void 0;\n(function (HarmProbability) {\n    /** Probability is unspecified. */\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    /** Content has a negligible chance of being unsafe. */\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    /** Content has a low chance of being unsafe. */\n    HarmProbability[\"LOW\"] = \"LOW\";\n    /** Content has a medium chance of being unsafe. */\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    /** Content has a high chance of being unsafe. */\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(exports.HarmProbability || (exports.HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nexports.BlockReason = void 0;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(exports.BlockReason || (exports.BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nexports.FinishReason = void 0;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // The candidate content was flagged for using an unsupported language.\n    FinishReason[\"LANGUAGE\"] = \"LANGUAGE\";\n    // Token generation stopped because the content contains forbidden terms.\n    FinishReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n    // Token generation stopped for potentially containing prohibited content.\n    FinishReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n    // Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII).\n    FinishReason[\"SPII\"] = \"SPII\";\n    // The function call generated by the model is invalid.\n    FinishReason[\"MALFORMED_FUNCTION_CALL\"] = \"MALFORMED_FUNCTION_CALL\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(exports.FinishReason || (exports.FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nexports.TaskType = void 0;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(exports.TaskType || (exports.TaskType = {}));\n/**\n * @public\n */\nexports.FunctionCallingMode = void 0;\n(function (FunctionCallingMode) {\n    // Unspecified function calling mode. This value should not be used.\n    FunctionCallingMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Default model behavior, model decides to predict either a function call\n    // or a natural language repspose.\n    FunctionCallingMode[\"AUTO\"] = \"AUTO\";\n    // Model is constrained to always predicting a function call only.\n    // If \"allowed_function_names\" are set, the predicted function call will be\n    // limited to any one of \"allowed_function_names\", else the predicted\n    // function call will be any one of the provided \"function_declarations\".\n    FunctionCallingMode[\"ANY\"] = \"ANY\";\n    // Model will not predict any function call. Model behavior is same as when\n    // not passing any function declarations.\n    FunctionCallingMode[\"NONE\"] = \"NONE\";\n})(exports.FunctionCallingMode || (exports.FunctionCallingMode = {}));\n/**\n * The mode of the predictor to be used in dynamic retrieval.\n * @public\n */\nexports.DynamicRetrievalMode = void 0;\n(function (DynamicRetrievalMode) {\n    // Unspecified function calling mode. This value should not be used.\n    DynamicRetrievalMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Run retrieval only when system decides it is necessary.\n    DynamicRetrievalMode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(exports.DynamicRetrievalMode || (exports.DynamicRetrievalMode = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Basic error type for this SDK.\n * @public\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\n/**\n * Errors in the contents of a response from the model. This includes parsing\n * errors, or responses including a safety block reason.\n * @public\n */\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n/**\n * Error class covering HTTP errors when calling the server. Includes HTTP\n * status, statusText, and optional details, if provided in the server response.\n * @public\n */\nclass GoogleGenerativeAIFetchError extends GoogleGenerativeAIError {\n    constructor(message, status, statusText, errorDetails) {\n        super(message);\n        this.status = status;\n        this.statusText = statusText;\n        this.errorDetails = errorDetails;\n    }\n}\n/**\n * Errors in the contents of a request originating from user input.\n * @public\n */\nclass GoogleGenerativeAIRequestInputError extends GoogleGenerativeAIError {\n}\n/**\n * Error thrown when a request is aborted, either due to a timeout or\n * intentional cancellation by the user.\n * @public\n */\nclass GoogleGenerativeAIAbortError extends GoogleGenerativeAIError {\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst DEFAULT_API_VERSION = \"v1beta\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.24.1\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream, requestOptions) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n        this.requestOptions = requestOptions;\n    }\n    toString() {\n        var _a, _b;\n        const apiVersion = ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.apiVersion) || DEFAULT_API_VERSION;\n        const baseUrl = ((_b = this.requestOptions) === null || _b === void 0 ? void 0 : _b.baseUrl) || DEFAULT_BASE_URL;\n        let url = `${baseUrl}/${apiVersion}/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders(requestOptions) {\n    const clientHeaders = [];\n    if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.apiClient) {\n        clientHeaders.push(requestOptions.apiClient);\n    }\n    clientHeaders.push(`${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`);\n    return clientHeaders.join(\" \");\n}\nasync function getHeaders(url) {\n    var _a;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"x-goog-api-client\", getClientHeaders(url.requestOptions));\n    headers.append(\"x-goog-api-key\", url.apiKey);\n    let customHeaders = (_a = url.requestOptions) === null || _a === void 0 ? void 0 : _a.customHeaders;\n    if (customHeaders) {\n        if (!(customHeaders instanceof Headers)) {\n            try {\n                customHeaders = new Headers(customHeaders);\n            }\n            catch (e) {\n                throw new GoogleGenerativeAIRequestInputError(`unable to convert customHeaders value ${JSON.stringify(customHeaders)} to Headers: ${e.message}`);\n            }\n        }\n        for (const [headerName, headerValue] of customHeaders.entries()) {\n            if (headerName === \"x-goog-api-key\") {\n                throw new GoogleGenerativeAIRequestInputError(`Cannot set reserved header name ${headerName}`);\n            }\n            else if (headerName === \"x-goog-api-client\") {\n                throw new GoogleGenerativeAIRequestInputError(`Header name ${headerName} can only be set using the apiClient field`);\n            }\n            headers.append(headerName, headerValue);\n        }\n    }\n    return headers;\n}\nasync function constructModelRequest(model, task, apiKey, stream, body, requestOptions) {\n    const url = new RequestUrl(model, task, apiKey, stream, requestOptions);\n    return {\n        url: url.toString(),\n        fetchOptions: Object.assign(Object.assign({}, buildFetchOptions(requestOptions)), { method: \"POST\", headers: await getHeaders(url), body }),\n    };\n}\nasync function makeModelRequest(model, task, apiKey, stream, body, requestOptions = {}, \n// Allows this to be stubbed for tests\nfetchFn = fetch) {\n    const { url, fetchOptions } = await constructModelRequest(model, task, apiKey, stream, body, requestOptions);\n    return makeRequest(url, fetchOptions, fetchFn);\n}\nasync function makeRequest(url, fetchOptions, fetchFn = fetch) {\n    let response;\n    try {\n        response = await fetchFn(url, fetchOptions);\n    }\n    catch (e) {\n        handleResponseError(e, url);\n    }\n    if (!response.ok) {\n        await handleResponseNotOk(response, url);\n    }\n    return response;\n}\nfunction handleResponseError(e, url) {\n    let err = e;\n    if (err.name === \"AbortError\") {\n        err = new GoogleGenerativeAIAbortError(`Request aborted when fetching ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    else if (!(e instanceof GoogleGenerativeAIFetchError ||\n        e instanceof GoogleGenerativeAIRequestInputError)) {\n        err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    throw err;\n}\nasync function handleResponseNotOk(response, url) {\n    let message = \"\";\n    let errorDetails;\n    try {\n        const json = await response.json();\n        message = json.error.message;\n        if (json.error.details) {\n            message += ` ${JSON.stringify(json.error.details)}`;\n            errorDetails = json.error.details;\n        }\n    }\n    catch (e) {\n        // ignored\n    }\n    throw new GoogleGenerativeAIFetchError(`Error fetching from ${url.toString()}: [${response.status} ${response.statusText}] ${message}`, response.status, response.statusText, errorDetails);\n}\n/**\n * Generates the request options to be passed to the fetch API.\n * @param requestOptions - The user-defined request options.\n * @returns The generated request options.\n */\nfunction buildFetchOptions(requestOptions) {\n    const fetchOptions = {};\n    if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) !== undefined || (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n        const controller = new AbortController();\n        if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n            setTimeout(() => controller.abort(), requestOptions.timeout);\n        }\n        if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) {\n            requestOptions.signal.addEventListener(\"abort\", () => {\n                controller.abort();\n            });\n        }\n        fetchOptions.signal = controller.signal;\n    }\n    return fetchOptions;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    /**\n     * TODO: remove at next major version\n     */\n    response.functionCall = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            console.warn(`response.functionCall() is deprecated. ` +\n                `Use response.functionCalls() instead.`);\n            return getFunctionCalls(response)[0];\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    response.functionCalls = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getFunctionCalls(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    return response;\n}\n/**\n * Returns all text found in all parts of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    const textStrings = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.text) {\n                textStrings.push(part.text);\n            }\n            if (part.executableCode) {\n                textStrings.push(\"\\n```\" +\n                    part.executableCode.language +\n                    \"\\n\" +\n                    part.executableCode.code +\n                    \"\\n```\\n\");\n            }\n            if (part.codeExecutionResult) {\n                textStrings.push(\"\\n```\\n\" + part.codeExecutionResult.output + \"\\n```\\n\");\n            }\n        }\n    }\n    if (textStrings.length > 0) {\n        return textStrings.join(\"\");\n    }\n    else {\n        return \"\";\n    }\n}\n/**\n * Returns functionCall of first candidate.\n */\nfunction getFunctionCalls(response) {\n    var _a, _b, _c, _d;\n    const functionCalls = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.functionCall) {\n                functionCalls.push(part.functionCall);\n            }\n        }\n    }\n    if (functionCalls.length > 0) {\n        return functionCalls;\n    }\n    else {\n        return undefined;\n    }\n}\nconst badFinishReasons = [\n    exports.FinishReason.RECITATION,\n    exports.FinishReason.SAFETY,\n    exports.FinishReason.LANGUAGE,\n];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader\n                    .read()\n                    .then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                })\n                    .catch((e) => {\n                    let err = e;\n                    err.stack = e.stack;\n                    if (err.name === \"AbortError\") {\n                        err = new GoogleGenerativeAIAbortError(\"Request aborted when reading from the stream\");\n                    }\n                    else {\n                        err = new GoogleGenerativeAIError(\"Error reading from the stream\");\n                    }\n                    throw err;\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            let candidateIndex = 0;\n            for (const candidate of response.candidates) {\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[candidateIndex]) {\n                    aggregatedResponse.candidates[candidateIndex] = {\n                        index: candidateIndex,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[candidateIndex].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[candidateIndex].groundingMetadata =\n                    candidate.groundingMetadata;\n                aggregatedResponse.candidates[candidateIndex].finishReason =\n                    candidate.finishReason;\n                aggregatedResponse.candidates[candidateIndex].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[candidateIndex].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[candidateIndex].content) {\n                        aggregatedResponse.candidates[candidateIndex].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [],\n                        };\n                    }\n                    const newPart = {};\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            newPart.text = part.text;\n                        }\n                        if (part.functionCall) {\n                            newPart.functionCall = part.functionCall;\n                        }\n                        if (part.executableCode) {\n                            newPart.executableCode = part.executableCode;\n                        }\n                        if (part.codeExecutionResult) {\n                            newPart.codeExecutionResult = part.codeExecutionResult;\n                        }\n                        if (Object.keys(newPart).length === 0) {\n                            newPart.text = \"\";\n                        }\n                        aggregatedResponse.candidates[candidateIndex].content.parts.push(newPart);\n                    }\n                }\n            }\n            candidateIndex++;\n        }\n        if (response.usageMetadata) {\n            aggregatedResponse.usageMetadata = response.usageMetadata;\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true, JSON.stringify(params), requestOptions);\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false, JSON.stringify(params), requestOptions);\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatSystemInstruction(input) {\n    // null or undefined\n    if (input == null) {\n        return undefined;\n    }\n    else if (typeof input === \"string\") {\n        return { role: \"system\", parts: [{ text: input }] };\n    }\n    else if (input.text) {\n        return { role: \"system\", parts: [input] };\n    }\n    else if (input.parts) {\n        if (!input.role) {\n            return { role: \"system\", parts: input.parts };\n        }\n        else {\n            return input;\n        }\n    }\n}\nfunction formatNewContent(request) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return assignRoleToPartsAndValidateSendMessageRequest(newParts);\n}\n/**\n * When multiple Part types (i.e. FunctionResponsePart and TextPart) are\n * passed in a single Part array, we may need to assign different roles to each\n * part. Currently only FunctionResponsePart requires a role other than 'user'.\n * @private\n * @param parts Array of parts to pass to the model\n * @returns Array of content items\n */\nfunction assignRoleToPartsAndValidateSendMessageRequest(parts) {\n    const userContent = { role: \"user\", parts: [] };\n    const functionContent = { role: \"function\", parts: [] };\n    let hasUserContent = false;\n    let hasFunctionContent = false;\n    for (const part of parts) {\n        if (\"functionResponse\" in part) {\n            functionContent.parts.push(part);\n            hasFunctionContent = true;\n        }\n        else {\n            userContent.parts.push(part);\n            hasUserContent = true;\n        }\n    }\n    if (hasUserContent && hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"Within a single message, FunctionResponse cannot be mixed with other type of part in the request for sending chat message.\");\n    }\n    if (!hasUserContent && !hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"No content is provided for sending chat message.\");\n    }\n    if (hasUserContent) {\n        return userContent;\n    }\n    return functionContent;\n}\nfunction formatCountTokensInput(params, modelParams) {\n    var _a;\n    let formattedGenerateContentRequest = {\n        model: modelParams === null || modelParams === void 0 ? void 0 : modelParams.model,\n        generationConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.generationConfig,\n        safetySettings: modelParams === null || modelParams === void 0 ? void 0 : modelParams.safetySettings,\n        tools: modelParams === null || modelParams === void 0 ? void 0 : modelParams.tools,\n        toolConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.toolConfig,\n        systemInstruction: modelParams === null || modelParams === void 0 ? void 0 : modelParams.systemInstruction,\n        cachedContent: (_a = modelParams === null || modelParams === void 0 ? void 0 : modelParams.cachedContent) === null || _a === void 0 ? void 0 : _a.name,\n        contents: [],\n    };\n    const containsGenerateContentRequest = params.generateContentRequest != null;\n    if (params.contents) {\n        if (containsGenerateContentRequest) {\n            throw new GoogleGenerativeAIRequestInputError(\"CountTokensRequest must have one of contents or generateContentRequest, not both.\");\n        }\n        formattedGenerateContentRequest.contents = params.contents;\n    }\n    else if (containsGenerateContentRequest) {\n        formattedGenerateContentRequest = Object.assign(Object.assign({}, formattedGenerateContentRequest), params.generateContentRequest);\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedGenerateContentRequest.contents = [content];\n    }\n    return { generateContentRequest: formattedGenerateContentRequest };\n}\nfunction formatGenerateContentInput(params) {\n    let formattedRequest;\n    if (params.contents) {\n        formattedRequest = params;\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedRequest = { contents: [content] };\n    }\n    if (params.systemInstruction) {\n        formattedRequest.systemInstruction = formatSystemInstruction(params.systemInstruction);\n    }\n    return formattedRequest;\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params);\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// https://ai.google.dev/api/rest/v1beta/Content#part\nconst VALID_PART_FIELDS = [\n    \"text\",\n    \"inlineData\",\n    \"functionCall\",\n    \"functionResponse\",\n    \"executableCode\",\n    \"codeExecutionResult\",\n];\nconst VALID_PARTS_PER_ROLE = {\n    user: [\"text\", \"inlineData\"],\n    function: [\"functionResponse\"],\n    model: [\"text\", \"functionCall\", \"executableCode\", \"codeExecutionResult\"],\n    // System instructions shouldn't be in history anyway.\n    system: [\"text\"],\n};\nfunction validateChatHistory(history) {\n    let prevContent = false;\n    for (const currContent of history) {\n        const { role, parts } = currContent;\n        if (!prevContent && role !== \"user\") {\n            throw new GoogleGenerativeAIError(`First content should be with role 'user', got ${role}`);\n        }\n        if (!POSSIBLE_ROLES.includes(role)) {\n            throw new GoogleGenerativeAIError(`Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(POSSIBLE_ROLES)}`);\n        }\n        if (!Array.isArray(parts)) {\n            throw new GoogleGenerativeAIError(\"Content should have 'parts' property with an array of Parts\");\n        }\n        if (parts.length === 0) {\n            throw new GoogleGenerativeAIError(\"Each Content should have at least one part\");\n        }\n        const countFields = {\n            text: 0,\n            inlineData: 0,\n            functionCall: 0,\n            functionResponse: 0,\n            fileData: 0,\n            executableCode: 0,\n            codeExecutionResult: 0,\n        };\n        for (const part of parts) {\n            for (const key of VALID_PART_FIELDS) {\n                if (key in part) {\n                    countFields[key] += 1;\n                }\n            }\n        }\n        const validParts = VALID_PARTS_PER_ROLE[role];\n        for (const key of VALID_PART_FIELDS) {\n            if (!validParts.includes(key) && countFields[key] > 0) {\n                throw new GoogleGenerativeAIError(`Content with role '${role}' can't contain '${key}' part`);\n            }\n        }\n        prevContent = true;\n    }\n}\n/**\n * Returns true if the response is valid (could be appended to the history), flase otherwise.\n */\nfunction isValidResponse(response) {\n    var _a;\n    if (response.candidates === undefined || response.candidates.length === 0) {\n        return false;\n    }\n    const content = (_a = response.candidates[0]) === null || _a === void 0 ? void 0 : _a.content;\n    if (content === undefined) {\n        return false;\n    }\n    if (content.parts === undefined || content.parts.length === 0) {\n        return false;\n    }\n    for (const part of content.parts) {\n        if (part === undefined || Object.keys(part).length === 0) {\n            return false;\n        }\n        if (part.text !== undefined && part.text === \"\") {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params, _requestOptions = {}) {\n        this.model = model;\n        this.params = params;\n        this._requestOptions = _requestOptions;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            validateChatHistory(params.history);\n            this._history = params.history;\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessage(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions))\n            .then((result) => {\n            var _a;\n            if (isValidResponse(result.response)) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        })\n            .catch((e) => {\n            // Resets _sendPromise to avoid subsequent calls failing and throw error.\n            this._sendPromise = Promise.resolve();\n            throw e;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessageStream(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (isValidResponse(response)) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params, singleRequestOptions) {\n    const response = await makeModelRequest(model, Task.COUNT_TOKENS, apiKey, false, JSON.stringify(params), singleRequestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.EMBED_CONTENT, apiKey, false, JSON.stringify(params), requestOptions);\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params, requestOptions) {\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model });\n    });\n    const response = await makeModelRequest(model, Task.BATCH_EMBED_CONTENTS, apiKey, false, JSON.stringify({ requests: requestsWithModel }), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams, _requestOptions = {}) {\n        this.apiKey = apiKey;\n        this._requestOptions = _requestOptions;\n        if (modelParams.model.includes(\"/\")) {\n            // Models may be named \"models/model-name\" or \"tunedModels/model-name\"\n            this.model = modelParams.model;\n        }\n        else {\n            // If path is not included, assume it's a non-tuned model.\n            this.model = `models/${modelParams.model}`;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n        this.tools = modelParams.tools;\n        this.toolConfig = modelParams.toolConfig;\n        this.systemInstruction = formatSystemInstruction(modelParams.systemInstruction);\n        this.cachedContent = modelParams.cachedContent;\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContent(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Makes a single streaming call to the model and returns an object\n     * containing an iterable stream that iterates over all chunks in the\n     * streaming response as well as a promise that returns the final\n     * aggregated response.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContentStream(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        var _a;\n        return new ChatSession(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, startChatParams), this._requestOptions);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async countTokens(request, requestOptions = {}) {\n        const formattedParams = formatCountTokensInput(request, {\n            model: this.model,\n            generationConfig: this.generationConfig,\n            safetySettings: this.safetySettings,\n            tools: this.tools,\n            toolConfig: this.toolConfig,\n            systemInstruction: this.systemInstruction,\n            cachedContent: this.cachedContent,\n        });\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return countTokens(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds the provided content.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async embedContent(request, requestOptions = {}) {\n        const formattedParams = formatEmbedContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return embedContent(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async batchEmbedContents(batchEmbedContentRequest, requestOptions = {}) {\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest, generativeModelRequestOptions);\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams, requestOptions) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams, requestOptions);\n    }\n    /**\n     * Creates a {@link GenerativeModel} instance from provided content cache.\n     */\n    getGenerativeModelFromCachedContent(cachedContent, modelParams, requestOptions) {\n        if (!cachedContent.name) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `name` field.\");\n        }\n        if (!cachedContent.model) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `model` field.\");\n        }\n        /**\n         * Not checking tools and toolConfig for now as it would require a deep\n         * equality comparison and isn't likely to be a common case.\n         */\n        const disallowedDuplicates = [\"model\", \"systemInstruction\"];\n        for (const key of disallowedDuplicates) {\n            if ((modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) &&\n                cachedContent[key] &&\n                (modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) !== cachedContent[key]) {\n                if (key === \"model\") {\n                    const modelParamsComp = modelParams.model.startsWith(\"models/\")\n                        ? modelParams.model.replace(\"models/\", \"\")\n                        : modelParams.model;\n                    const cachedContentComp = cachedContent.model.startsWith(\"models/\")\n                        ? cachedContent.model.replace(\"models/\", \"\")\n                        : cachedContent.model;\n                    if (modelParamsComp === cachedContentComp) {\n                        continue;\n                    }\n                }\n                throw new GoogleGenerativeAIRequestInputError(`Different value for \"${key}\" specified in modelParams` +\n                    ` (${modelParams[key]}) and cachedContent (${cachedContent[key]})`);\n            }\n        }\n        const modelParamsFromCache = Object.assign(Object.assign({}, modelParams), { model: cachedContent.model, tools: cachedContent.tools, toolConfig: cachedContent.toolConfig, systemInstruction: cachedContent.systemInstruction, cachedContent });\n        return new GenerativeModel(this.apiKey, modelParamsFromCache, requestOptions);\n    }\n}\n\nexports.ChatSession = ChatSession;\nexports.GenerativeModel = GenerativeModel;\nexports.GoogleGenerativeAI = GoogleGenerativeAI;\nexports.GoogleGenerativeAIAbortError = GoogleGenerativeAIAbortError;\nexports.GoogleGenerativeAIError = GoogleGenerativeAIError;\nexports.GoogleGenerativeAIFetchError = GoogleGenerativeAIFetchError;\nexports.GoogleGenerativeAIRequestInputError = GoogleGenerativeAIRequestInputError;\nexports.GoogleGenerativeAIResponseError = GoogleGenerativeAIResponseError;\nexports.POSSIBLE_ROLES = POSSIBLE_ROLES;\n//# sourceMappingURL=index.js.map\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  EmbedderInfoSchema,\n  embedderRef,\n  type EmbedderAction,\n  type EmbedderArgument,\n  type EmbedderInfo,\n  type EmbedderParams,\n  type EmbedderReference,\n  type Embedding,\n  type EmbeddingBatch,\n} from '@genkit-ai/ai/embedder';\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GoogleGenerativeAI,\n  type EmbedContentRequest,\n} from '@google/generative-ai';\nimport {\n  GenkitError,\n  z,\n  type EmbedderAction,\n  type EmbedderReference,\n  type Genkit,\n} from 'genkit';\nimport { embedderRef } from 'genkit/embedder';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport type { PluginOptions } from './index.js';\n\nexport const TaskTypeSchema = z.enum([\n  'RETRIEVAL_DOCUMENT',\n  'RETRIEVAL_QUERY',\n  'SEMANTIC_SIMILARITY',\n  'CLASSIFICATION',\n  'CLUSTERING',\n]);\nexport type TaskType = z.infer<typeof TaskTypeSchema>;\n\nexport const GeminiEmbeddingConfigSchema = z.object({\n  /** Override the API key provided at plugin initialization. */\n  apiKey: z.string().optional(),\n  /**\n   * The `task_type` parameter is defined as the intended downstream application to help the model\n   * produce better quality embeddings.\n   **/\n  taskType: TaskTypeSchema.optional(),\n  title: z.string().optional(),\n  version: z.string().optional(),\n  /**\n   * The `outputDimensionality` parameter allows you to specify the dimensionality of the embedding output.\n   * By default, the model generates embeddings with 768 dimensions. Models such as\n   * `text-embedding-004`, `text-embedding-005`, and `text-multilingual-embedding-002`\n   * allow the output dimensionality to be adjusted between 1 and 768.\n   * By selecting a smaller output dimensionality, users can save memory and storage space, leading to more efficient computations.\n   **/\n  outputDimensionality: z.number().min(1).max(768).optional(),\n});\n\nexport type GeminiEmbeddingConfig = z.infer<typeof GeminiEmbeddingConfigSchema>;\n\nexport const textEmbeddingGecko001 = embedderRef({\n  name: 'googleai/embedding-001',\n  configSchema: GeminiEmbeddingConfigSchema,\n  info: {\n    dimensions: 768,\n    label: 'Google Gen AI - Text Embedding Gecko (Legacy)',\n    supports: {\n      input: ['text'],\n    },\n  },\n});\n\nexport const textEmbedding004 = embedderRef({\n  name: 'googleai/text-embedding-004',\n  configSchema: GeminiEmbeddingConfigSchema,\n  info: {\n    dimensions: 768,\n    label: 'Google Gen AI - Text Embedding 001',\n    supports: {\n      input: ['text'],\n    },\n  },\n});\n\nexport const geminiEmbedding001 = embedderRef({\n  name: 'googleai/gemini-embedding-001',\n  configSchema: GeminiEmbeddingConfigSchema,\n  info: {\n    dimensions: 768,\n    label: 'Google Gen AI - Gemini Embedding 001',\n    supports: {\n      input: ['text'],\n    },\n  },\n});\n\nexport const SUPPORTED_MODELS = {\n  'embedding-001': textEmbeddingGecko001,\n  'text-embedding-004': textEmbedding004,\n  'gemini-embedding-001': geminiEmbedding001,\n};\n\nexport function defineGoogleAIEmbedder(\n  ai: Genkit,\n  name: string,\n  pluginOptions: PluginOptions\n): EmbedderAction<any> {\n  let apiKey: string | undefined;\n  // DO NOT throw if {apiKey: false} was supplied to options.\n  if (pluginOptions.apiKey !== false) {\n    apiKey = pluginOptions?.apiKey || getApiKeyFromEnvVar();\n    if (!apiKey)\n      throw new Error(\n        'Please pass in the API key or set either GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai'\n      );\n  }\n  const embedder: EmbedderReference =\n    SUPPORTED_MODELS[name] ??\n    embedderRef({\n      name: name,\n      configSchema: GeminiEmbeddingConfigSchema,\n      info: {\n        dimensions: 768,\n        label: `Google AI - ${name}`,\n        supports: {\n          input: ['text', 'image', 'video'],\n        },\n      },\n    });\n  const apiModelName = embedder.name.startsWith('googleai/')\n    ? embedder.name.substring('googleai/'.length)\n    : embedder.name;\n  return ai.defineEmbedder(\n    {\n      name: embedder.name,\n      configSchema: GeminiEmbeddingConfigSchema,\n      info: embedder.info!,\n    },\n    async (input, options) => {\n      if (pluginOptions.apiKey === false && !options?.apiKey) {\n        throw new GenkitError({\n          status: 'INVALID_ARGUMENT',\n          message:\n            'GoogleAI plugin was initialized with {apiKey: false} but no apiKey configuration was passed at call time.',\n        });\n      }\n      const client = new GoogleGenerativeAI(\n        options?.apiKey || apiKey!\n      ).getGenerativeModel({\n        model:\n          options?.version ||\n          embedder.config?.version ||\n          embedder.version ||\n          apiModelName,\n      });\n      const embeddings = await Promise.all(\n        input.map(async (doc) => {\n          const response = await client.embedContent({\n            taskType: options?.taskType,\n            title: options?.title,\n            content: {\n              role: '',\n              parts: [{ text: doc.text }],\n            },\n            outputDimensionality: options?.outputDimensionality,\n          } as EmbedContentRequest);\n          const values = response.embedding.values;\n          return { embedding: values };\n        })\n      );\n      return { embeddings };\n    }\n  );\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  CandidateErrorSchema,\n  CandidateSchema,\n  CustomPartSchema,\n  DataPartSchema,\n  GenerateRequestSchema,\n  GenerateResponseChunkSchema,\n  GenerateResponseSchema,\n  GenerationCommonConfigDescriptions,\n  GenerationCommonConfigSchema,\n  GenerationUsageSchema,\n  MediaPartSchema,\n  MessageSchema,\n  ModelInfoSchema,\n  ModelRequestSchema,\n  ModelResponseSchema,\n  PartSchema,\n  RoleSchema,\n  TextPartSchema,\n  ToolDefinitionSchema,\n  ToolRequestPartSchema,\n  ToolResponsePartSchema,\n  getBasicUsageStats,\n  modelRef,\n  simulateConstrainedGeneration,\n  type BackgroundModelAction,\n  type CandidateData,\n  type CandidateError,\n  type CustomPart,\n  type DataPart,\n  type DefineBackgroundModelOptions,\n  type DefineModelOptions,\n  type GenerateRequest,\n  type GenerateRequestData,\n  type GenerateResponseChunkData,\n  type GenerateResponseData,\n  type GenerationCommonConfig,\n  type GenerationUsage,\n  type MediaPart,\n  type MessageData,\n  type ModelAction,\n  type ModelArgument,\n  type ModelInfo,\n  type ModelMiddleware,\n  type ModelReference,\n  type ModelRequest,\n  type ModelResponseChunkData,\n  type ModelResponseData,\n  type OutputConfig,\n  type Part,\n  type Role,\n  type TextPart,\n  type ToolDefinition,\n  type ToolRequestPart,\n  type ToolResponsePart,\n} from '@genkit-ai/ai/model';\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {\n  augmentWithContext,\n  downloadRequestMedia,\n  simulateSystemPrompt,\n  validateSupport,\n  type AugmentWithContextOptions,\n} from '@genkit-ai/ai/model/middleware';\n", "'use strict';\n\nvar fs = require('fs');\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Basic error type for this SDK.\n * @public\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\n/**\n * Error class covering HTTP errors when calling the server. Includes HTTP\n * status, statusText, and optional details, if provided in the server response.\n * @public\n */\nclass GoogleGenerativeAIFetchError extends GoogleGenerativeAIError {\n    constructor(message, status, statusText, errorDetails) {\n        super(message);\n        this.status = status;\n        this.statusText = statusText;\n        this.errorDetails = errorDetails;\n    }\n}\n/**\n * Errors in the contents of a request originating from user input.\n * @public\n */\nclass GoogleGenerativeAIRequestInputError extends GoogleGenerativeAIError {\n}\n/**\n * Error thrown when a request is aborted, either due to a timeout or\n * intentional cancellation by the user.\n * @public\n */\nclass GoogleGenerativeAIAbortError extends GoogleGenerativeAIError {\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst DEFAULT_API_VERSION = \"v1beta\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.24.1\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders(requestOptions) {\n    const clientHeaders = [];\n    if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.apiClient) {\n        clientHeaders.push(requestOptions.apiClient);\n    }\n    clientHeaders.push(`${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`);\n    return clientHeaders.join(\" \");\n}\nasync function makeRequest(url, fetchOptions, fetchFn = fetch) {\n    let response;\n    try {\n        response = await fetchFn(url, fetchOptions);\n    }\n    catch (e) {\n        handleResponseError(e, url);\n    }\n    if (!response.ok) {\n        await handleResponseNotOk(response, url);\n    }\n    return response;\n}\nfunction handleResponseError(e, url) {\n    let err = e;\n    if (err.name === \"AbortError\") {\n        err = new GoogleGenerativeAIAbortError(`Request aborted when fetching ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    else if (!(e instanceof GoogleGenerativeAIFetchError ||\n        e instanceof GoogleGenerativeAIRequestInputError)) {\n        err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    throw err;\n}\nasync function handleResponseNotOk(response, url) {\n    let message = \"\";\n    let errorDetails;\n    try {\n        const json = await response.json();\n        message = json.error.message;\n        if (json.error.details) {\n            message += ` ${JSON.stringify(json.error.details)}`;\n            errorDetails = json.error.details;\n        }\n    }\n    catch (e) {\n        // ignored\n    }\n    throw new GoogleGenerativeAIFetchError(`Error fetching from ${url.toString()}: [${response.status} ${response.statusText}] ${message}`, response.status, response.statusText, errorDetails);\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar RpcTask;\n(function (RpcTask) {\n    RpcTask[\"UPLOAD\"] = \"upload\";\n    RpcTask[\"LIST\"] = \"list\";\n    RpcTask[\"GET\"] = \"get\";\n    RpcTask[\"DELETE\"] = \"delete\";\n    RpcTask[\"UPDATE\"] = \"update\";\n    RpcTask[\"CREATE\"] = \"create\";\n})(RpcTask || (RpcTask = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst taskToMethod = {\n    [RpcTask.UPLOAD]: \"POST\",\n    [RpcTask.LIST]: \"GET\",\n    [RpcTask.GET]: \"GET\",\n    [RpcTask.DELETE]: \"DELETE\",\n    [RpcTask.UPDATE]: \"PATCH\",\n    [RpcTask.CREATE]: \"POST\",\n};\nclass ServerRequestUrl {\n    constructor(task, apiKey, requestOptions) {\n        this.task = task;\n        this.apiKey = apiKey;\n        this.requestOptions = requestOptions;\n    }\n    appendPath(path) {\n        this._url.pathname = this._url.pathname + `/${path}`;\n    }\n    appendParam(key, value) {\n        this._url.searchParams.append(key, value);\n    }\n    toString() {\n        return this._url.toString();\n    }\n}\nclass CachedContentUrl extends ServerRequestUrl {\n    constructor(task, apiKey, requestOptions) {\n        var _a, _b;\n        super(task, apiKey, requestOptions);\n        this.task = task;\n        this.apiKey = apiKey;\n        this.requestOptions = requestOptions;\n        const apiVersion = ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.apiVersion) || DEFAULT_API_VERSION;\n        const baseUrl = ((_b = this.requestOptions) === null || _b === void 0 ? void 0 : _b.baseUrl) || DEFAULT_BASE_URL;\n        let initialUrl = baseUrl;\n        initialUrl += `/${apiVersion}/cachedContents`;\n        this._url = new URL(initialUrl);\n    }\n}\nclass FilesRequestUrl extends ServerRequestUrl {\n    constructor(task, apiKey, requestOptions) {\n        var _a, _b;\n        super(task, apiKey, requestOptions);\n        this.task = task;\n        this.apiKey = apiKey;\n        this.requestOptions = requestOptions;\n        const apiVersion = ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.apiVersion) || DEFAULT_API_VERSION;\n        const baseUrl = ((_b = this.requestOptions) === null || _b === void 0 ? void 0 : _b.baseUrl) || DEFAULT_BASE_URL;\n        let initialUrl = baseUrl;\n        if (this.task === RpcTask.UPLOAD) {\n            initialUrl += `/upload`;\n        }\n        initialUrl += `/${apiVersion}/files`;\n        this._url = new URL(initialUrl);\n    }\n}\nfunction getHeaders(url) {\n    var _a;\n    const headers = new Headers();\n    headers.append(\"x-goog-api-client\", getClientHeaders(url.requestOptions));\n    headers.append(\"x-goog-api-key\", url.apiKey);\n    let customHeaders = (_a = url.requestOptions) === null || _a === void 0 ? void 0 : _a.customHeaders;\n    if (customHeaders) {\n        if (!(customHeaders instanceof Headers)) {\n            try {\n                customHeaders = new Headers(customHeaders);\n            }\n            catch (e) {\n                throw new GoogleGenerativeAIRequestInputError(`unable to convert customHeaders value ${JSON.stringify(customHeaders)} to Headers: ${e.message}`);\n            }\n        }\n        for (const [headerName, headerValue] of customHeaders.entries()) {\n            if (headerName === \"x-goog-api-key\") {\n                throw new GoogleGenerativeAIRequestInputError(`Cannot set reserved header name ${headerName}`);\n            }\n            else if (headerName === \"x-goog-api-client\") {\n                throw new GoogleGenerativeAIRequestInputError(`Header name ${headerName} can only be set using the apiClient field`);\n            }\n            headers.append(headerName, headerValue);\n        }\n    }\n    return headers;\n}\nasync function makeServerRequest(url, headers, body, fetchFn = fetch) {\n    const requestInit = {\n        method: taskToMethod[url.task],\n        headers,\n    };\n    if (body) {\n        requestInit.body = body;\n    }\n    const signal = getSignal(url.requestOptions);\n    if (signal) {\n        requestInit.signal = signal;\n    }\n    return makeRequest(url.toString(), requestInit, fetchFn);\n}\n/**\n * Create an AbortSignal based on the timeout and signal in the\n * RequestOptions.\n */\nfunction getSignal(requestOptions) {\n    if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) !== undefined || (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n        const controller = new AbortController();\n        if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n            setTimeout(() => controller.abort(), requestOptions.timeout);\n        }\n        if (requestOptions.signal) {\n            requestOptions.signal.addEventListener(\"abort\", () => {\n                controller.abort();\n            });\n        }\n        return controller.signal;\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for managing GoogleAI file uploads.\n * @public\n */\nclass GoogleAIFileManager {\n    constructor(apiKey, _requestOptions = {}) {\n        this.apiKey = apiKey;\n        this._requestOptions = _requestOptions;\n    }\n    /**\n     * Upload a file.\n     */\n    async uploadFile(fileData, fileMetadata) {\n        const file = fileData instanceof Buffer ? fileData : fs.readFileSync(fileData);\n        const url = new FilesRequestUrl(RpcTask.UPLOAD, this.apiKey, this._requestOptions);\n        const uploadHeaders = getHeaders(url);\n        const boundary = generateBoundary();\n        uploadHeaders.append(\"X-Goog-Upload-Protocol\", \"multipart\");\n        uploadHeaders.append(\"Content-Type\", `multipart/related; boundary=${boundary}`);\n        const uploadMetadata = getUploadMetadata(fileMetadata);\n        // Multipart formatting code taken from @firebase/storage\n        const metadataString = JSON.stringify({ file: uploadMetadata });\n        const preBlobPart = \"--\" +\n            boundary +\n            \"\\r\\n\" +\n            \"Content-Type: application/json; charset=utf-8\\r\\n\\r\\n\" +\n            metadataString +\n            \"\\r\\n--\" +\n            boundary +\n            \"\\r\\n\" +\n            \"Content-Type: \" +\n            fileMetadata.mimeType +\n            \"\\r\\n\\r\\n\";\n        const postBlobPart = \"\\r\\n--\" + boundary + \"--\";\n        const blob = new Blob([preBlobPart, file, postBlobPart]);\n        const response = await makeServerRequest(url, uploadHeaders, blob);\n        return response.json();\n    }\n    /**\n     * List all uploaded files.\n     *\n     * Any fields set in the optional {@link SingleRequestOptions} parameter will take\n     * precedence over the {@link RequestOptions} values provided at the time of the\n     * {@link GoogleAIFileManager} initialization.\n     */\n    async listFiles(listParams, requestOptions = {}) {\n        const filesRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        const url = new FilesRequestUrl(RpcTask.LIST, this.apiKey, filesRequestOptions);\n        if (listParams === null || listParams === void 0 ? void 0 : listParams.pageSize) {\n            url.appendParam(\"pageSize\", listParams.pageSize.toString());\n        }\n        if (listParams === null || listParams === void 0 ? void 0 : listParams.pageToken) {\n            url.appendParam(\"pageToken\", listParams.pageToken);\n        }\n        const uploadHeaders = getHeaders(url);\n        const response = await makeServerRequest(url, uploadHeaders);\n        return response.json();\n    }\n    /**\n     * Get metadata for file with given ID.\n     *\n     * Any fields set in the optional {@link SingleRequestOptions} parameter will take\n     * precedence over the {@link RequestOptions} values provided at the time of the\n     * {@link GoogleAIFileManager} initialization.\n     */\n    async getFile(fileId, requestOptions = {}) {\n        const filesRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        const url = new FilesRequestUrl(RpcTask.GET, this.apiKey, filesRequestOptions);\n        url.appendPath(parseFileId(fileId));\n        const uploadHeaders = getHeaders(url);\n        const response = await makeServerRequest(url, uploadHeaders);\n        return response.json();\n    }\n    /**\n     * Delete file with given ID.\n     */\n    async deleteFile(fileId) {\n        const url = new FilesRequestUrl(RpcTask.DELETE, this.apiKey, this._requestOptions);\n        url.appendPath(parseFileId(fileId));\n        const uploadHeaders = getHeaders(url);\n        await makeServerRequest(url, uploadHeaders);\n    }\n}\n/**\n * If fileId is prepended with \"files/\", remove prefix\n */\nfunction parseFileId(fileId) {\n    if (fileId.startsWith(\"files/\")) {\n        return fileId.split(\"files/\")[1];\n    }\n    if (!fileId) {\n        throw new GoogleGenerativeAIError(`Invalid fileId ${fileId}. ` +\n            `Must be in the format \"files/filename\" or \"filename\"`);\n    }\n    return fileId;\n}\nfunction generateBoundary() {\n    let str = \"\";\n    for (let i = 0; i < 2; i++) {\n        str = str + Math.random().toString().slice(2);\n    }\n    return str;\n}\nfunction getUploadMetadata(inputMetadata) {\n    if (!inputMetadata.mimeType) {\n        throw new GoogleGenerativeAIRequestInputError(\"Must provide a mimeType.\");\n    }\n    const uploadMetadata = {\n        mimeType: inputMetadata.mimeType,\n        displayName: inputMetadata.displayName,\n    };\n    if (inputMetadata.name) {\n        uploadMetadata.name = inputMetadata.name.includes(\"/\")\n            ? inputMetadata.name\n            : `files/${inputMetadata.name}`;\n    }\n    return uploadMetadata;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatSystemInstruction(input) {\n    // null or undefined\n    if (input == null) {\n        return undefined;\n    }\n    else if (typeof input === \"string\") {\n        return { role: \"system\", parts: [{ text: input }] };\n    }\n    else if (input.text) {\n        return { role: \"system\", parts: [input] };\n    }\n    else if (input.parts) {\n        if (!input.role) {\n            return { role: \"system\", parts: input.parts };\n        }\n        else {\n            return input;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for managing GoogleAI content caches.\n * @public\n */\nclass GoogleAICacheManager {\n    constructor(apiKey, _requestOptions) {\n        this.apiKey = apiKey;\n        this._requestOptions = _requestOptions;\n    }\n    /**\n     * Upload a new content cache\n     */\n    async create(createOptions) {\n        const newCachedContent = Object.assign({}, createOptions);\n        if (createOptions.ttlSeconds) {\n            if (createOptions.expireTime) {\n                throw new GoogleGenerativeAIRequestInputError(\"You cannot specify both `ttlSeconds` and `expireTime` when creating\" +\n                    \" a content cache. You must choose one.\");\n            }\n            newCachedContent.ttl = createOptions.ttlSeconds.toString() + \"s\";\n            delete newCachedContent.ttlSeconds;\n        }\n        if (createOptions.systemInstruction) {\n            newCachedContent.systemInstruction = formatSystemInstruction(createOptions.systemInstruction);\n        }\n        if (!newCachedContent.model) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `model` field.\");\n        }\n        if (!newCachedContent.model.includes(\"/\")) {\n            // If path is not included, assume it's a non-tuned model.\n            newCachedContent.model = `models/${newCachedContent.model}`;\n        }\n        const url = new CachedContentUrl(RpcTask.CREATE, this.apiKey, this._requestOptions);\n        const headers = getHeaders(url);\n        const response = await makeServerRequest(url, headers, JSON.stringify(newCachedContent));\n        return response.json();\n    }\n    /**\n     * List all uploaded content caches\n     */\n    async list(listParams) {\n        const url = new CachedContentUrl(RpcTask.LIST, this.apiKey, this._requestOptions);\n        if (listParams === null || listParams === void 0 ? void 0 : listParams.pageSize) {\n            url.appendParam(\"pageSize\", listParams.pageSize.toString());\n        }\n        if (listParams === null || listParams === void 0 ? void 0 : listParams.pageToken) {\n            url.appendParam(\"pageToken\", listParams.pageToken);\n        }\n        const headers = getHeaders(url);\n        const response = await makeServerRequest(url, headers);\n        return response.json();\n    }\n    /**\n     * Get a content cache\n     */\n    async get(name) {\n        const url = new CachedContentUrl(RpcTask.GET, this.apiKey, this._requestOptions);\n        url.appendPath(parseCacheName(name));\n        const headers = getHeaders(url);\n        const response = await makeServerRequest(url, headers);\n        return response.json();\n    }\n    /**\n     * Update an existing content cache\n     */\n    async update(name, updateParams) {\n        const url = new CachedContentUrl(RpcTask.UPDATE, this.apiKey, this._requestOptions);\n        url.appendPath(parseCacheName(name));\n        const headers = getHeaders(url);\n        const formattedCachedContent = Object.assign({}, updateParams.cachedContent);\n        if (updateParams.cachedContent.ttlSeconds) {\n            formattedCachedContent.ttl =\n                updateParams.cachedContent.ttlSeconds.toString() + \"s\";\n            delete formattedCachedContent.ttlSeconds;\n        }\n        if (updateParams.updateMask) {\n            url.appendParam(\"update_mask\", updateParams.updateMask.map((prop) => camelToSnake(prop)).join(\",\"));\n        }\n        const response = await makeServerRequest(url, headers, JSON.stringify(formattedCachedContent));\n        return response.json();\n    }\n    /**\n     * Delete content cache with given name\n     */\n    async delete(name) {\n        const url = new CachedContentUrl(RpcTask.DELETE, this.apiKey, this._requestOptions);\n        url.appendPath(parseCacheName(name));\n        const headers = getHeaders(url);\n        await makeServerRequest(url, headers);\n    }\n}\n/**\n * If cache name is prepended with \"cachedContents/\", remove prefix\n */\nfunction parseCacheName(name) {\n    if (name.startsWith(\"cachedContents/\")) {\n        return name.split(\"cachedContents/\")[1];\n    }\n    if (!name) {\n        throw new GoogleGenerativeAIError(`Invalid name ${name}. ` +\n            `Must be in the format \"cachedContents/name\" or \"name\"`);\n    }\n    return name;\n}\nfunction camelToSnake(str) {\n    return str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`);\n}\n\n/**\n * Processing state of the `File`.\n * @public\n */\nexports.FileState = void 0;\n(function (FileState) {\n    // The default value. This value is used if the state is omitted.\n    FileState[\"STATE_UNSPECIFIED\"] = \"STATE_UNSPECIFIED\";\n    // File is being processed and cannot be used for inference yet.\n    FileState[\"PROCESSING\"] = \"PROCESSING\";\n    // File is processed and available for inference.\n    FileState[\"ACTIVE\"] = \"ACTIVE\";\n    // File failed processing.\n    FileState[\"FAILED\"] = \"FAILED\";\n})(exports.FileState || (exports.FileState = {}));\n\n/**\n * Contains the list of OpenAPI data types\n * as defined by https://swagger.io/docs/specification/data-models/data-types/\n * @public\n */\nexports.SchemaType = void 0;\n(function (SchemaType) {\n    /** String type. */\n    SchemaType[\"STRING\"] = \"string\";\n    /** Number type. */\n    SchemaType[\"NUMBER\"] = \"number\";\n    /** Integer type. */\n    SchemaType[\"INTEGER\"] = \"integer\";\n    /** Boolean type. */\n    SchemaType[\"BOOLEAN\"] = \"boolean\";\n    /** Array type. */\n    SchemaType[\"ARRAY\"] = \"array\";\n    /** Object type. */\n    SchemaType[\"OBJECT\"] = \"object\";\n})(exports.SchemaType || (exports.SchemaType = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @public\n */\nexports.ExecutableCodeLanguage = void 0;\n(function (ExecutableCodeLanguage) {\n    ExecutableCodeLanguage[\"LANGUAGE_UNSPECIFIED\"] = \"language_unspecified\";\n    ExecutableCodeLanguage[\"PYTHON\"] = \"python\";\n})(exports.ExecutableCodeLanguage || (exports.ExecutableCodeLanguage = {}));\n/**\n * Possible outcomes of code execution.\n * @public\n */\nexports.Outcome = void 0;\n(function (Outcome) {\n    /**\n     * Unspecified status. This value should not be used.\n     */\n    Outcome[\"OUTCOME_UNSPECIFIED\"] = \"outcome_unspecified\";\n    /**\n     * Code execution completed successfully.\n     */\n    Outcome[\"OUTCOME_OK\"] = \"outcome_ok\";\n    /**\n     * Code execution finished but with a failure. `stderr` should contain the\n     * reason.\n     */\n    Outcome[\"OUTCOME_FAILED\"] = \"outcome_failed\";\n    /**\n     * Code execution ran for too long, and was cancelled. There may or may not\n     * be a partial output present.\n     */\n    Outcome[\"OUTCOME_DEADLINE_EXCEEDED\"] = \"outcome_deadline_exceeded\";\n})(exports.Outcome || (exports.Outcome = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Possible roles.\n * @public\n */\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nvar HarmCategory;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n    HarmCategory[\"HARM_CATEGORY_CIVIC_INTEGRITY\"] = \"HARM_CATEGORY_CIVIC_INTEGRITY\";\n})(HarmCategory || (HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    /** Threshold is unspecified. */\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    /** Content with NEGLIGIBLE will be allowed. */\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    /** Content with NEGLIGIBLE and LOW will be allowed. */\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    /** Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed. */\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    /** All content will be allowed. */\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nvar HarmProbability;\n(function (HarmProbability) {\n    /** Probability is unspecified. */\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    /** Content has a negligible chance of being unsafe. */\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    /** Content has a low chance of being unsafe. */\n    HarmProbability[\"LOW\"] = \"LOW\";\n    /** Content has a medium chance of being unsafe. */\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    /** Content has a high chance of being unsafe. */\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nvar BlockReason;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(BlockReason || (BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nvar FinishReason;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // The candidate content was flagged for using an unsupported language.\n    FinishReason[\"LANGUAGE\"] = \"LANGUAGE\";\n    // Token generation stopped because the content contains forbidden terms.\n    FinishReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n    // Token generation stopped for potentially containing prohibited content.\n    FinishReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n    // Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII).\n    FinishReason[\"SPII\"] = \"SPII\";\n    // The function call generated by the model is invalid.\n    FinishReason[\"MALFORMED_FUNCTION_CALL\"] = \"MALFORMED_FUNCTION_CALL\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(FinishReason || (FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nvar TaskType;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(TaskType || (TaskType = {}));\n/**\n * @public\n */\nexports.FunctionCallingMode = void 0;\n(function (FunctionCallingMode) {\n    // Unspecified function calling mode. This value should not be used.\n    FunctionCallingMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Default model behavior, model decides to predict either a function call\n    // or a natural language repspose.\n    FunctionCallingMode[\"AUTO\"] = \"AUTO\";\n    // Model is constrained to always predicting a function call only.\n    // If \"allowed_function_names\" are set, the predicted function call will be\n    // limited to any one of \"allowed_function_names\", else the predicted\n    // function call will be any one of the provided \"function_declarations\".\n    FunctionCallingMode[\"ANY\"] = \"ANY\";\n    // Model will not predict any function call. Model behavior is same as when\n    // not passing any function declarations.\n    FunctionCallingMode[\"NONE\"] = \"NONE\";\n})(exports.FunctionCallingMode || (exports.FunctionCallingMode = {}));\n/**\n * The mode of the predictor to be used in dynamic retrieval.\n * @public\n */\nvar DynamicRetrievalMode;\n(function (DynamicRetrievalMode) {\n    // Unspecified function calling mode. This value should not be used.\n    DynamicRetrievalMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Run retrieval only when system decides it is necessary.\n    DynamicRetrievalMode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(DynamicRetrievalMode || (DynamicRetrievalMode = {}));\n\nexports.GoogleAICacheManager = GoogleAICacheManager;\nexports.GoogleAIFileManager = GoogleAIFileManager;\n//# sourceMappingURL=index.js.map\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const CONTEXT_CACHE_SUPPORTED_MODELS = [\n  'gemini-1.5-flash-001',\n  'gemini-1.5-pro-001',\n];\n\nexport const INVALID_ARGUMENT_MESSAGES = {\n  modelVersion: `Model version is required for context caching, supported only in ${CONTEXT_CACHE_SUPPORTED_MODELS.join(',')} models.`,\n  tools: 'Context caching cannot be used simultaneously with tools.',\n  codeExecution:\n    'Context caching cannot be used simultaneously with code execution.',\n};\n\nexport const DEFAULT_TTL = 300;\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { z } from 'genkit';\n\nexport const cacheConfigSchema = z.union([\n  z.boolean(),\n  z.object({ ttlSeconds: z.number().optional() }).passthrough(),\n]);\n\nexport type CacheConfig = z.infer<typeof cacheConfigSchema>;\n\nexport const cacheConfigDetailsSchema = z.object({\n  cacheConfig: cacheConfigSchema,\n  endOfCachedContents: z.number(),\n});\n\nexport type CacheConfigDetails = z.infer<typeof cacheConfigDetailsSchema>;\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CachedContent, StartChatParams } from '@google/generative-ai';\nimport type { GoogleAICacheManager } from '@google/generative-ai/server';\nimport crypto from 'crypto';\nimport { GenkitError, type MessageData, type z } from 'genkit';\nimport type { GenerateRequest } from 'genkit/model';\nimport {\n  CONTEXT_CACHE_SUPPORTED_MODELS,\n  DEFAULT_TTL,\n  INVALID_ARGUMENT_MESSAGES,\n} from './constants';\nimport {\n  cacheConfigSchema,\n  type CacheConfig,\n  type CacheConfigDetails,\n} from './types';\n\n/**\n * Generates a SHA-256 hash to use as a cache key.\n * @param request CachedContent - request object to hash\n * @returns string - the generated cache key\n */\nexport function generateCacheKey(request: CachedContent): string {\n  return crypto\n    .createHash('sha256')\n    .update(JSON.stringify(request))\n    .digest('hex');\n}\n\n/**\n * Retrieves the content needed for the cache based on the chat history and config details.\n */\nexport function getContentForCache(\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams,\n  modelVersion: string,\n  cacheConfigDetails: CacheConfigDetails\n): {\n  cachedContent: CachedContent;\n  chatRequest: StartChatParams;\n  cacheConfig?: CacheConfig;\n} {\n  // Ensure modelVersion is provided\n  if (!modelVersion) {\n    throw new Error('No model version provided for context caching');\n  }\n\n  // Ensure chatRequest has a history\n  if (!chatRequest.history?.length) {\n    throw new Error('No history provided for context caching');\n  }\n\n  // Validate the history length between request and chatRequest\n  validateHistoryLength(request, chatRequest);\n\n  // Extract relevant cached content based on cacheConfigDetails\n  const { endOfCachedContents, cacheConfig } = cacheConfigDetails;\n  const cachedContent: CachedContent = {\n    model: modelVersion,\n    contents: chatRequest.history.slice(0, endOfCachedContents + 1),\n  };\n\n  // Update the chatRequest history to only include non-cached parts\n  chatRequest.history = chatRequest.history.slice(endOfCachedContents + 1);\n\n  return { cachedContent, chatRequest, cacheConfig };\n}\n\n/**\n * Validates that the request and chat request history lengths align.\n * @throws GenkitError if lengths are mismatched\n */\nfunction validateHistoryLength(\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams\n) {\n  if (chatRequest.history?.length !== request.messages.length - 1) {\n    throw new GenkitError({\n      status: 'INTERNAL',\n      message:\n        'Genkit request history and Gemini chat request history length do not match',\n    });\n  }\n}\n\n/**\n * Looks up context cache using a cache manager and returns the found item, if any.\n */\n/**\n * Looks up context cache using a cache manager and returns the found item, if any.\n */\nexport async function lookupContextCache(\n  cacheManager: GoogleAICacheManager,\n  cacheKey: string,\n  maxPages = 100,\n  pageSize = 100\n): Promise<CachedContent | null> {\n  let currentPage = 0;\n  let pageToken: string | undefined;\n\n  try {\n    while (currentPage < maxPages) {\n      const { cachedContents, nextPageToken } = await cacheManager.list({\n        pageSize,\n        pageToken,\n      });\n\n      // Check for the cached content by key\n      const found = cachedContents?.find(\n        (content) => content.displayName === cacheKey\n      );\n\n      if (found) return found; // Return found content\n\n      // Stop if there's no next page\n      if (!nextPageToken) break;\n\n      pageToken = nextPageToken;\n      currentPage++;\n    }\n  } catch (error) {\n    const message =\n      error instanceof Error ? error.message : 'Unknown Network Error';\n\n    throw new GenkitError({\n      status: 'INTERNAL',\n      message: `Error looking up context cache: ${message}`,\n    });\n  }\n\n  return null; // Return null if not found or on error\n}\n\n/**\n * Extracts the cache configuration from the request if available.\n */\nexport const extractCacheConfig = (\n  request: GenerateRequest<z.ZodTypeAny>\n): {\n  cacheConfig: { ttlSeconds?: number } | boolean;\n  endOfCachedContents: number;\n} | null => {\n  const endOfCachedContents = findLastIndex<MessageData>(\n    request.messages,\n    (message) => !!message.metadata?.cache\n  );\n\n  return endOfCachedContents === -1\n    ? null\n    : {\n        endOfCachedContents,\n        cacheConfig: cacheConfigSchema.parse(\n          request.messages[endOfCachedContents].metadata?.cache\n        ),\n      };\n};\n\n/**\n * Validates context caching request for compatibility with model and request configurations.\n */\nexport function validateContextCacheRequest(\n  request: GenerateRequest<z.ZodTypeAny>,\n  modelVersion: string\n): boolean {\n  if (!modelVersion || !CONTEXT_CACHE_SUPPORTED_MODELS.includes(modelVersion)) {\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: INVALID_ARGUMENT_MESSAGES.modelVersion,\n    });\n  }\n  if (request.tools?.length)\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: INVALID_ARGUMENT_MESSAGES.tools,\n    });\n  if (request.config?.codeExecution)\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: INVALID_ARGUMENT_MESSAGES.codeExecution,\n    });\n\n  return true;\n}\n\n/**\n * Polyfill function for Array.prototype.findLastIndex for ES2015 compatibility.\n */\nexport function findLastIndex<T>(\n  array: T[],\n  callback: (element: T, index: number, array: T[]) => boolean\n): number {\n  for (let i = array.length - 1; i >= 0; i--) {\n    if (callback(array[i], i, array)) return i;\n  }\n  return -1;\n}\n\n/**\n * Calculates the TTL (Time-To-Live) for the cache based on cacheConfigDetails.\n * @param cacheConfig - The caching configuration details.\n * @returns The TTL in seconds.\n */\nexport function calculateTTL(cacheConfig: CacheConfigDetails): number {\n  if (cacheConfig.cacheConfig === true) {\n    return DEFAULT_TTL;\n  }\n  if (cacheConfig.cacheConfig === false) {\n    return 0;\n  }\n  return cacheConfig.cacheConfig.ttlSeconds || DEFAULT_TTL;\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CachedContent, StartChatParams } from '@google/generative-ai';\nimport {\n  GoogleAICacheManager,\n  type CachedContentCreateParams,\n} from '@google/generative-ai/server';\nimport { GenkitError, type GenerateRequest, type z } from 'genkit';\nimport { logger } from 'genkit/logging';\nimport type { CacheConfigDetails } from './types.js';\nimport {\n  calculateTTL,\n  generateCacheKey,\n  getContentForCache,\n  lookupContextCache,\n  validateContextCacheRequest,\n} from './utils.js';\n\n/**\n * Handles context caching and transforms the chatRequest\n * @param apiKey\n * @param request\n * @param chatRequest\n * @param modelVersion\n * @returns\n */\nexport async function handleContextCache(\n  apiKey: string,\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams,\n  modelVersion: string,\n  cacheConfigDetails: CacheConfigDetails\n): Promise<{ cache: CachedContent; newChatRequest: StartChatParams }> {\n  const cacheManager = new GoogleAICacheManager(apiKey);\n\n  const { cachedContent, chatRequest: newChatRequest } = getContentForCache(\n    request,\n    chatRequest,\n    modelVersion,\n    cacheConfigDetails\n  );\n  cachedContent.model = modelVersion;\n  const cacheKey = generateCacheKey(cachedContent);\n\n  cachedContent.displayName = cacheKey;\n\n  let cache = await lookupContextCache(cacheManager, cacheKey);\n  logger.debug(`Cache hit: ${cache ? 'true' : 'false'}`);\n\n  if (!cache) {\n    try {\n      logger.debug('No cache found, creating one.');\n      const createParams: CachedContentCreateParams = {\n        ...cachedContent,\n        ttlSeconds: calculateTTL(cacheConfigDetails),\n      };\n      cache = await cacheManager.create(createParams);\n      logger.debug(`Created new cache entry with key: ${cacheKey}`);\n    } catch (cacheError) {\n      logger.error(\n        `Failed to create cache with key ${cacheKey}: ${cacheError}`\n      );\n      throw new GenkitError({\n        status: 'INTERNAL',\n        message: `Failed to create cache: ${cacheError}`,\n      });\n    }\n  }\n\n  if (!cache) {\n    throw new GenkitError({\n      status: 'INTERNAL',\n      message: 'Failed to use context cache feature',\n    });\n  }\n\n  return { cache, newChatRequest };\n}\n\n/**\n * Handles cache validation, creation, and usage, transforming the chatRequest if necessary.\n * @param apiKey The API key for accessing Google AI Gemini.\n * @param request The generate request passed to the model.\n * @param chatRequest The current chat request configuration.\n * @param modelVersion The version of the model being used.\n * @param cacheConfigDetails Configuration details for caching.\n * @returns A transformed chat request and cache data (if applicable).\n */\nexport async function handleCacheIfNeeded(\n  apiKey: string,\n  request: GenerateRequest<z.ZodTypeAny>,\n  chatRequest: StartChatParams,\n  modelVersion: string,\n  cacheConfigDetails: CacheConfigDetails | null\n): Promise<{ chatRequest: StartChatParams; cache: CachedContent | null }> {\n  // Skip caching if no configuration or if validation fails\n  if (\n    !cacheConfigDetails ||\n    !validateContextCacheRequest(request, modelVersion)\n  ) {\n    return { chatRequest, cache: null };\n  }\n\n  const { cache, newChatRequest } = await handleContextCache(\n    apiKey,\n    request,\n    chatRequest,\n    modelVersion,\n    cacheConfigDetails\n  );\n  return { chatRequest: newChatRequest, cache };\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FunctionCallingMode,\n  GenerateContentCandidate,\n  GoogleGenerativeAI,\n  SchemaType,\n  type FileDataPart,\n  type FunctionCallPart,\n  type FunctionDeclaration,\n  type FunctionResponsePart,\n  type GenerateContentCandidate as GeminiCandidate,\n  type Content as GeminiMessage,\n  type Part as GeminiPart,\n  type GenerateContentResponse,\n  type GenerationConfig,\n  type GenerativeModel,\n  type GoogleSearchRetrievalTool,\n  type InlineDataPart,\n  type RequestOptions,\n  type Schema,\n  type StartChatParams,\n  type Tool,\n  type ToolConfig,\n  type UsageMetadata,\n} from '@google/generative-ai';\nimport { GenkitError, z, type Genkit, type JSONSchema } from 'genkit';\nimport {\n  GenerationCommonConfigDescriptions,\n  GenerationCommonConfigSchema,\n  getBasicUsageStats,\n  modelRef,\n  type CandidateData,\n  type MediaPart,\n  type MessageData,\n  type ModelAction,\n  type ModelInfo,\n  type ModelMiddleware,\n  type ModelReference,\n  type Part,\n  type ToolDefinitionSchema,\n  type ToolRequestPart,\n  type ToolResponsePart,\n} from 'genkit/model';\nimport { downloadRequestMedia } from 'genkit/model/middleware';\nimport { runInNewSpan } from 'genkit/tracing';\nimport { getApiKeyFromEnvVar, getGenkitClientHeader } from './common';\nimport { handleCacheIfNeeded } from './context-caching';\nimport { extractCacheConfig } from './context-caching/utils';\n\n// Extra type guard to keep the compiler happy and avoid a cast to any. The\n// legacy Gemini SDK is no longer maintained, and doesn't have updated types.\n// However, the REST API returns the data we want.\ntype ExtendedUsageMetadata = UsageMetadata & {\n  thoughtsTokenCount?: number;\n};\n\n/**\n * See https://ai.google.dev/gemini-api/docs/safety-settings#safety-filters.\n */\nconst SafetySettingsSchema = z.object({\n  category: z.enum([\n    'HARM_CATEGORY_UNSPECIFIED',\n    'HARM_CATEGORY_HATE_SPEECH',\n    'HARM_CATEGORY_SEXUALLY_EXPLICIT',\n    'HARM_CATEGORY_HARASSMENT',\n    'HARM_CATEGORY_DANGEROUS_CONTENT',\n    'HARM_CATEGORY_CIVIC_INTEGRITY',\n  ]),\n  threshold: z.enum([\n    'BLOCK_LOW_AND_ABOVE',\n    'BLOCK_MEDIUM_AND_ABOVE',\n    'BLOCK_ONLY_HIGH',\n    'BLOCK_NONE',\n  ]),\n});\n\nconst VoiceConfigSchema = z\n  .object({\n    prebuiltVoiceConfig: z\n      .object({\n        // TODO: Make this an array of objects so we can also specify the description\n        // for each voiceName.\n        voiceName: z\n          .union([\n            z.enum([\n              'Zephyr',\n              'Puck',\n              'Charon',\n              'Kore',\n              'Fenrir',\n              'Leda',\n              'Orus',\n              'Aoede',\n              'Callirrhoe',\n              'Autonoe',\n              'Enceladus',\n              'Iapetus',\n              'Umbriel',\n              'Algieba',\n              'Despina',\n              'Erinome',\n              'Algenib',\n              'Rasalgethi',\n              'Laomedeia',\n              'Achernar',\n              'Alnilam',\n              'Schedar',\n              'Gacrux',\n              'Pulcherrima',\n              'Achird',\n              'Zubenelgenubi',\n              'Vindemiatrix',\n              'Sadachbia',\n              'Sadaltager',\n              'Sulafat',\n            ]),\n            // To allow any new string values\n            z.string(),\n          ])\n          .describe('Name of the preset voice to use')\n          .optional(),\n      })\n      .describe('Configuration for the prebuilt speaker to use')\n      .passthrough()\n      .optional(),\n  })\n  .describe('Configuration for the voice to use')\n  .passthrough();\n\nexport const GeminiConfigSchema = GenerationCommonConfigSchema.extend({\n  temperature: z\n    .number()\n    .min(0)\n    .max(2)\n    .describe(\n      GenerationCommonConfigDescriptions.temperature +\n        ' The default value is 1.0.'\n    )\n    .optional(),\n  topP: z\n    .number()\n    .min(0)\n    .max(1)\n    .describe(\n      GenerationCommonConfigDescriptions.topP + ' The default value is 0.95.'\n    )\n    .optional(),\n  apiKey: z\n    .string()\n    .describe('Overrides the plugin-configured API key, if specified.')\n    .optional(),\n  safetySettings: z\n    .array(SafetySettingsSchema)\n    .describe(\n      'Adjust how likely you are to see responses that could be harmful. ' +\n        'Content is blocked based on the probability that it is harmful.'\n    )\n    .optional(),\n  codeExecution: z\n    .union([z.boolean(), z.object({}).strict()])\n    .describe('Enables the model to generate and run code.')\n    .optional(),\n  contextCache: z\n    .boolean()\n    .describe(\n      'Context caching allows you to save and reuse precomputed input ' +\n        'tokens that you wish to use repeatedly.'\n    )\n    .optional(),\n  functionCallingConfig: z\n    .object({\n      mode: z.enum(['MODE_UNSPECIFIED', 'AUTO', 'ANY', 'NONE']).optional(),\n      allowedFunctionNames: z.array(z.string()).optional(),\n    })\n    .describe(\n      'Controls how the model uses the provided tools (function declarations). ' +\n        'With AUTO (Default) mode, the model decides whether to generate a ' +\n        'natural language response or suggest a function call based on the ' +\n        'prompt and context. With ANY, the model is constrained to always ' +\n        'predict a function call and guarantee function schema adherence. ' +\n        'With NONE, the model is prohibited from making function calls.'\n    )\n    .optional(),\n  responseModalities: z\n    .array(z.enum(['TEXT', 'IMAGE', 'AUDIO']))\n    .describe(\n      'The modalities to be used in response. Only supported for ' +\n        \"'gemini-2.0-flash-exp' model at present.\"\n    )\n    .optional(),\n  googleSearchRetrieval: z\n    .union([z.boolean(), z.object({}).passthrough()])\n    .describe(\n      'Retrieve public web data for grounding, powered by Google Search.'\n    )\n    .optional(),\n  thinkingConfig: z\n    .object({\n      includeThoughts: z\n        .boolean()\n        .describe(\n          'Indicates whether to include thoughts in the response.' +\n            'If true, thoughts are returned only when available.'\n        )\n        .optional(),\n      thinkingBudget: z\n        .number()\n        .min(0)\n        .max(24576)\n        .describe(\n          'The thinking budget parameter gives the model guidance on the ' +\n            'number of thinking tokens it can use when generating a response. ' +\n            'A greater number of tokens is typically associated with more detailed ' +\n            'thinking, which is needed for solving more complex tasks. ' +\n            'Setting the thinking budget to 0 disables thinking.'\n        )\n        .optional(),\n    })\n    .optional(),\n}).passthrough();\nexport type GeminiConfig = z.infer<typeof GeminiConfigSchema>;\n\nexport const GeminiGemmaConfigSchema = GeminiConfigSchema.extend({\n  temperature: z\n    .number()\n    .min(0.0)\n    .max(1.0)\n    .describe(\n      GenerationCommonConfigDescriptions.temperature +\n        ' The default value is 1.0.'\n    )\n    .optional(),\n}).passthrough();\n\nexport const GeminiTtsConfigSchema = GeminiConfigSchema.extend({\n  speechConfig: z\n    .object({\n      voiceConfig: VoiceConfigSchema.optional(),\n      multiSpeakerVoiceConfig: z\n        .object({\n          speakerVoiceConfigs: z\n            .array(\n              z\n                .object({\n                  speaker: z.string().describe('Name of the speaker to use'),\n                  voiceConfig: VoiceConfigSchema,\n                })\n                .describe(\n                  'Configuration for a single speaker in a multi speaker setup'\n                )\n                .passthrough()\n            )\n            .describe('Configuration for all the enabled speaker voices'),\n        })\n        .describe('Configuration for multi-speaker setup')\n        .passthrough()\n        .optional(),\n    })\n    .describe('Speech generation config')\n    .passthrough()\n    .optional(),\n}).passthrough();\n\nexport const gemini10Pro = modelRef({\n  name: 'googleai/gemini-1.0-pro',\n  info: {\n    label: 'Google AI - Gemini Pro',\n    versions: ['gemini-pro', 'gemini-1.0-pro-latest', 'gemini-1.0-pro-001'],\n    supports: {\n      multiturn: true,\n      media: false,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini15Pro = modelRef({\n  name: 'googleai/gemini-1.5-pro',\n  info: {\n    label: 'Google AI - Gemini 1.5 Pro',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n    versions: [\n      'gemini-1.5-pro-latest',\n      'gemini-1.5-pro-001',\n      'gemini-1.5-pro-002',\n    ],\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini15Flash = modelRef({\n  name: 'googleai/gemini-1.5-flash',\n  info: {\n    label: 'Google AI - Gemini 1.5 Flash',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n      // @ts-ignore\n      contextCache: true,\n    },\n    versions: [\n      'gemini-1.5-flash-latest',\n      'gemini-1.5-flash-001',\n      'gemini-1.5-flash-002',\n    ],\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini15Flash8b = modelRef({\n  name: 'googleai/gemini-1.5-flash-8b',\n  info: {\n    label: 'Google AI - Gemini 1.5 Flash',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n    versions: ['gemini-1.5-flash-8b-latest', 'gemini-1.5-flash-8b-001'],\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20Flash = modelRef({\n  name: 'googleai/gemini-2.0-flash',\n  info: {\n    label: 'Google AI - Gemini 2.0 Flash',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20FlashExp = modelRef({\n  name: 'googleai/gemini-2.0-flash-exp',\n  info: {\n    label: 'Google AI - Gemini 2.0 Flash (Experimental)',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20FlashLite = modelRef({\n  name: 'googleai/gemini-2.0-flash-lite',\n  info: {\n    label: 'Google AI - Gemini 2.0 Flash Lite',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini20ProExp0205 = modelRef({\n  name: 'googleai/gemini-2.0-pro-exp-02-05',\n  info: {\n    label: 'Google AI - Gemini 2.0 Pro Exp 02-05',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25FlashPreview0417 = modelRef({\n  name: 'googleai/gemini-2.5-flash-preview-04-17',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash Preview 04-17',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25FlashPreviewTts = modelRef({\n  name: 'googleai/gemini-2.5-flash-preview-tts',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash Preview TTS',\n    versions: [],\n    supports: {\n      multiturn: false,\n      media: false,\n      tools: false,\n      toolChoice: false,\n      systemRole: false,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiTtsConfigSchema,\n});\n\nexport const gemini25ProExp0325 = modelRef({\n  name: 'googleai/gemini-2.5-pro-exp-03-25',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro Exp 03-25',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25ProPreview0325 = modelRef({\n  name: 'googleai/gemini-2.5-pro-preview-03-25',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro Preview 03-25',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25ProPreviewTts = modelRef({\n  name: 'googleai/gemini-2.5-pro-preview-tts',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro Preview TTS',\n    versions: [],\n    supports: {\n      multiturn: false,\n      media: false,\n      tools: false,\n      toolChoice: false,\n      systemRole: false,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiTtsConfigSchema,\n});\n\nexport const gemini25Pro = modelRef({\n  name: 'googleai/gemini-2.5-pro',\n  info: {\n    label: 'Google AI - Gemini 2.5 Pro',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25Flash = modelRef({\n  name: 'googleai/gemini-2.5-flash',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemini25FlashLite = modelRef({\n  name: 'googleai/gemini-2.5-flash-lite',\n  info: {\n    label: 'Google AI - Gemini 2.5 Flash Lite',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiConfigSchema,\n});\n\nexport const gemma312bit = modelRef({\n  name: 'googleai/gemma-3-12b-it',\n  info: {\n    label: 'Google AI - Gemma 3 12B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma31bit = modelRef({\n  name: 'googleai/gemma-3-1b-it',\n  info: {\n    label: 'Google AI - Gemma 3 1B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma327bit = modelRef({\n  name: 'googleai/gemma-3-27b-it',\n  info: {\n    label: 'Google AI - Gemma 3 27B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma34bit = modelRef({\n  name: 'googleai/gemma-3-4b-it',\n  info: {\n    label: 'Google AI - Gemma 3 4B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const gemma3ne4bit = modelRef({\n  name: 'googleai/gemma-3n-e4b-it',\n  info: {\n    label: 'Google AI - Gemma 3n E4B',\n    versions: [],\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n  configSchema: GeminiGemmaConfigSchema,\n});\n\nexport const SUPPORTED_GEMINI_MODELS = {\n  'gemini-1.5-pro': gemini15Pro,\n  'gemini-1.5-flash': gemini15Flash,\n  'gemini-1.5-flash-8b': gemini15Flash8b,\n  'gemini-2.0-pro-exp-02-05': gemini20ProExp0205,\n  'gemini-2.0-flash': gemini20Flash,\n  'gemini-2.0-flash-lite': gemini20FlashLite,\n  'gemini-2.0-flash-exp': gemini20FlashExp,\n  'gemini-2.5-pro-exp-03-25': gemini25ProExp0325,\n  'gemini-2.5-pro-preview-03-25': gemini25ProPreview0325,\n  'gemini-2.5-pro-preview-tts': gemini25ProPreviewTts,\n  'gemini-2.5-flash-preview-04-17': gemini25FlashPreview0417,\n  'gemini-2.5-flash-preview-tts': gemini25FlashPreviewTts,\n  'gemini-2.5-flash': gemini25Flash,\n  'gemini-2.5-flash-lite': gemini25FlashLite,\n  'gemini-2.5-pro': gemini25Pro,\n  'gemma-3-12b-it': gemma312bit,\n  'gemma-3-1b-it': gemma31bit,\n  'gemma-3-27b-it': gemma327bit,\n  'gemma-3-4b-it': gemma34bit,\n  'gemma-3n-e4b-it': gemma3ne4bit,\n};\n\nexport const GENERIC_GEMINI_MODEL = modelRef({\n  name: 'googleai/gemini',\n  configSchema: GeminiConfigSchema,\n  info: {\n    label: 'Google Gemini',\n    supports: {\n      multiturn: true,\n      media: true,\n      tools: true,\n      toolChoice: true,\n      systemRole: true,\n      constrained: 'no-tools',\n    },\n  },\n});\n\nfunction longestMatchingPrefix(version: string, potentialMatches: string[]) {\n  return potentialMatches\n    .filter((p) => version.startsWith(p))\n    .reduce(\n      (longest, current) =>\n        current.length > longest.length ? current : longest,\n      ''\n    );\n}\n\n/**\n * Known model names, to allow code completion for convenience. Allows other model names.\n */\nexport type GeminiVersionString =\n  | keyof typeof SUPPORTED_GEMINI_MODELS\n  | (string & {});\n\n/**\n * Returns a reference to a model that can be used in generate calls.\n *\n * ```js\n * await ai.generate({\n *   prompt: 'hi',\n *   model: gemini('gemini-1.5-flash')\n * });\n * ```\n */\nexport function gemini(\n  version: GeminiVersionString,\n  options: GeminiConfig = {}\n): ModelReference<typeof GeminiConfigSchema> {\n  const nearestModel = nearestGeminiModelRef(version);\n  return modelRef({\n    name: `googleai/${version}`,\n    config: options,\n    configSchema: GeminiConfigSchema,\n    info: {\n      ...nearestModel.info,\n      // If exact suffix match for a known model, use its label, otherwise create a new label\n      label: nearestModel.name.endsWith(version)\n        ? nearestModel.info?.label\n        : `Google AI - ${version}`,\n    },\n  });\n}\n\nfunction nearestGeminiModelRef(\n  version: GeminiVersionString,\n  options: GeminiConfig = {}\n): ModelReference<typeof GeminiConfigSchema> {\n  const matchingKey = longestMatchingPrefix(\n    version,\n    Object.keys(SUPPORTED_GEMINI_MODELS)\n  );\n  if (matchingKey) {\n    return SUPPORTED_GEMINI_MODELS[matchingKey].withConfig({\n      ...options,\n      version,\n    });\n  }\n\n  return GENERIC_GEMINI_MODEL.withConfig({ ...options, version });\n}\n\nfunction toGeminiRole(\n  role: MessageData['role'],\n  model?: ModelReference<z.ZodTypeAny>\n): string {\n  switch (role) {\n    case 'user':\n      return 'user';\n    case 'model':\n      return 'model';\n    case 'system':\n      if (model?.info?.supports?.systemRole) {\n        // We should have already pulled out the supported system messages,\n        // anything remaining is unsupported; throw an error.\n        throw new Error(\n          'system role is only supported for a single message in the first position'\n        );\n      } else {\n        throw new Error('system role is not supported');\n      }\n    case 'tool':\n      return 'function';\n    default:\n      return 'user';\n  }\n}\n\nfunction convertSchemaProperty(property) {\n  if (!property || !property.type) {\n    return undefined;\n  }\n  const baseSchema = {} as Schema;\n  if (property.description) {\n    baseSchema.description = property.description;\n  }\n  if (property.enum) {\n    baseSchema.type = SchemaType.STRING;\n    // supported in API but not in SDK\n    (baseSchema as any).enum = property.enum;\n  }\n  if (property.nullable) {\n    baseSchema.nullable = property.nullable;\n  }\n  let propertyType;\n  // nullable schema can ALSO be defined as, for example, type=['string','null']\n  if (Array.isArray(property.type)) {\n    const types = property.type as string[];\n    if (types.includes('null')) {\n      baseSchema.nullable = true;\n    }\n    // grab the type that's not `null`\n    propertyType = types.find((t) => t !== 'null');\n  } else {\n    propertyType = property.type;\n  }\n  if (propertyType === 'object') {\n    const nestedProperties = {};\n    Object.keys(property.properties ?? {}).forEach((key) => {\n      nestedProperties[key] = convertSchemaProperty(property.properties[key]);\n    });\n    return {\n      ...baseSchema,\n      type: SchemaType.OBJECT,\n      properties: nestedProperties,\n      required: property.required,\n    };\n  } else if (propertyType === 'array') {\n    return {\n      ...baseSchema,\n      type: SchemaType.ARRAY,\n      items: convertSchemaProperty(property.items),\n    };\n  } else {\n    const schemaType = SchemaType[propertyType.toUpperCase()] as SchemaType;\n    if (!schemaType) {\n      throw new GenkitError({\n        status: 'INVALID_ARGUMENT',\n        message: `Unsupported property type ${propertyType.toUpperCase()}`,\n      });\n    }\n    return {\n      ...baseSchema,\n      type: schemaType,\n    };\n  }\n}\n\n/** @hidden */\nexport function toGeminiTool(\n  tool: z.infer<typeof ToolDefinitionSchema>\n): FunctionDeclaration {\n  const declaration: FunctionDeclaration = {\n    name: tool.name.replace(/\\//g, '__'), // Gemini throws on '/' in tool name\n    description: tool.description,\n    parameters: convertSchemaProperty(tool.inputSchema),\n  };\n  return declaration;\n}\n\nfunction toInlineData(part: MediaPart): InlineDataPart {\n  const dataUrl = part.media.url;\n  const b64Data = dataUrl.substring(dataUrl.indexOf(',')! + 1);\n  const contentType =\n    part.media.contentType ||\n    dataUrl.substring(dataUrl.indexOf(':')! + 1, dataUrl.indexOf(';'));\n  return { inlineData: { mimeType: contentType, data: b64Data } };\n}\n\nfunction toFileData(part: MediaPart): FileDataPart {\n  if (!part.media.contentType)\n    throw new Error(\n      'Must supply a `contentType` when sending File URIs to Gemini.'\n    );\n  return {\n    fileData: { mimeType: part.media.contentType, fileUri: part.media.url },\n  };\n}\n\nfunction fromInlineData(inlinePart: InlineDataPart): MediaPart {\n  // Check if the required properties exist\n  if (\n    !inlinePart.inlineData ||\n    !inlinePart.inlineData.hasOwnProperty('mimeType') ||\n    !inlinePart.inlineData.hasOwnProperty('data')\n  ) {\n    throw new Error('Invalid InlineDataPart: missing required properties');\n  }\n  const { mimeType, data } = inlinePart.inlineData;\n  // Combine data and mimeType into a data URL\n  const dataUrl = `data:${mimeType};base64,${data}`;\n  return {\n    media: {\n      url: dataUrl,\n      contentType: mimeType,\n    },\n  };\n}\n\nfunction toFunctionCall(part: ToolRequestPart): FunctionCallPart {\n  if (!part?.toolRequest?.input) {\n    throw Error('Invalid ToolRequestPart: input was missing.');\n  }\n  return {\n    functionCall: {\n      name: part.toolRequest.name,\n      args: part.toolRequest.input,\n    },\n  };\n}\n\nfunction fromFunctionCall(\n  part: FunctionCallPart,\n  ref: string\n): ToolRequestPart {\n  if (!part.functionCall) {\n    throw Error('Invalid FunctionCallPart');\n  }\n  return {\n    toolRequest: {\n      name: part.functionCall.name,\n      input: part.functionCall.args,\n      ref,\n    },\n  };\n}\n\nfunction toFunctionResponse(part: ToolResponsePart): FunctionResponsePart {\n  if (!part?.toolResponse?.output) {\n    throw Error('Invalid ToolResponsePart: output was missing.');\n  }\n  return {\n    functionResponse: {\n      name: part.toolResponse.name,\n      response: {\n        name: part.toolResponse.name,\n        content: part.toolResponse.output,\n      },\n    },\n  };\n}\n\nfunction fromFunctionResponse(part: FunctionResponsePart): ToolResponsePart {\n  if (!part.functionResponse) {\n    throw new Error('Invalid FunctionResponsePart.');\n  }\n  return {\n    toolResponse: {\n      name: part.functionResponse.name.replace(/__/g, '/'), // restore slashes\n      output: part.functionResponse.response,\n    },\n  };\n}\n\nfunction fromExecutableCode(part: GeminiPart): Part {\n  if (!part.executableCode) {\n    throw new Error('Invalid GeminiPart: missing executableCode');\n  }\n  return {\n    custom: {\n      executableCode: {\n        language: part.executableCode.language,\n        code: part.executableCode.code,\n      },\n    },\n  };\n}\n\nfunction fromCodeExecutionResult(part: GeminiPart): Part {\n  if (!part.codeExecutionResult) {\n    throw new Error('Invalid GeminiPart: missing codeExecutionResult');\n  }\n  return {\n    custom: {\n      codeExecutionResult: {\n        outcome: part.codeExecutionResult.outcome,\n        output: part.codeExecutionResult.output,\n      },\n    },\n  };\n}\n\nfunction fromThought(part: {\n  thought: boolean;\n  text?: string;\n  thoughtSignature?: string;\n}): Part {\n  return {\n    reasoning: part.text || '',\n    metadata: { thoughtSignature: (part as any).thoughtSignature },\n  };\n}\n\nfunction toCustomPart(part: Part): GeminiPart {\n  if (!part.custom) {\n    throw new Error('Invalid GeminiPart: missing custom');\n  }\n  if (part.custom.codeExecutionResult) {\n    return { codeExecutionResult: part.custom.codeExecutionResult };\n  }\n  if (part.custom.executableCode) {\n    return { executableCode: part.custom.executableCode };\n  }\n  throw new Error('Unsupported Custom Part type');\n}\n\nfunction toThought(part: Part) {\n  const outPart: any = { thought: true };\n  if (part.metadata?.thoughtSignature)\n    outPart.thoughtSignature = part.metadata.thoughtSignature;\n  if (part.reasoning?.length) outPart.text = part.reasoning;\n  return outPart;\n}\n\nfunction toGeminiPart(part: Part): GeminiPart {\n  if (part.text !== undefined) return { text: part.text || ' ' };\n  if (part.media) {\n    if (part.media.url.startsWith('data:')) return toInlineData(part);\n    return toFileData(part);\n  }\n  if (part.toolRequest) return toFunctionCall(part);\n  if (part.toolResponse) return toFunctionResponse(part);\n  if (part.custom) return toCustomPart(part);\n  if (typeof part.reasoning === 'string') return toThought(part);\n  throw new Error('Unsupported Part type' + JSON.stringify(part));\n}\n\nfunction fromGeminiPart(\n  part: GeminiPart,\n  jsonMode: boolean,\n  ref: string\n): Part {\n  if ('thought' in part) return fromThought(part as any);\n  if (typeof part.text === 'string') return { text: part.text };\n  if (part.inlineData) return fromInlineData(part);\n  if (part.functionCall) return fromFunctionCall(part, ref);\n  if (part.functionResponse) return fromFunctionResponse(part);\n  if (part.executableCode) return fromExecutableCode(part);\n  if (part.codeExecutionResult) return fromCodeExecutionResult(part);\n  throw new Error('Unsupported GeminiPart type: ' + JSON.stringify(part));\n}\n\nexport function toGeminiMessage(\n  message: MessageData,\n  model?: ModelReference<z.ZodTypeAny>\n): GeminiMessage {\n  let sortedParts = message.content;\n  if (message.role === 'tool') {\n    sortedParts = [...message.content].sort((a, b) => {\n      const aRef = a.toolResponse?.ref;\n      const bRef = b.toolResponse?.ref;\n      if (!aRef && !bRef) return 0;\n      if (!aRef) return 1;\n      if (!bRef) return -1;\n      return Number.parseInt(aRef, 10) - Number.parseInt(bRef, 10);\n    });\n  }\n  return {\n    role: toGeminiRole(message.role, model),\n    parts: sortedParts.map(toGeminiPart),\n  };\n}\n\nexport function toGeminiSystemInstruction(message: MessageData): GeminiMessage {\n  return {\n    role: 'user',\n    parts: message.content.map(toGeminiPart),\n  };\n}\n\nfunction fromGeminiFinishReason(\n  reason: GeminiCandidate['finishReason']\n): CandidateData['finishReason'] {\n  if (!reason) return 'unknown';\n  switch (reason) {\n    case 'STOP':\n      return 'stop';\n    case 'MAX_TOKENS':\n      return 'length';\n    case 'SAFETY': // blocked for safety\n    case 'RECITATION': // blocked for reciting training data\n      return 'blocked';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function fromGeminiCandidate(\n  candidate: GeminiCandidate,\n  jsonMode = false\n): CandidateData {\n  const parts = candidate.content?.parts || [];\n  const genkitCandidate: CandidateData = {\n    index: candidate.index || 0,\n    message: {\n      role: 'model',\n      content: parts.map((part, index) =>\n        fromGeminiPart(part, jsonMode, index.toString())\n      ),\n    },\n    finishReason: fromGeminiFinishReason(candidate.finishReason),\n    finishMessage: candidate.finishMessage,\n    custom: {\n      safetyRatings: candidate.safetyRatings,\n      citationMetadata: candidate.citationMetadata,\n    },\n  };\n\n  return genkitCandidate;\n}\nexport function cleanSchema(schema: JSONSchema): JSONSchema {\n  const out = structuredClone(schema);\n  for (const key in out) {\n    if (key === '$schema' || key === 'additionalProperties') {\n      delete out[key];\n      continue;\n    }\n    if (typeof out[key] === 'object') {\n      out[key] = cleanSchema(out[key]);\n    }\n    // Zod nullish() and picoschema optional fields will produce type `[\"string\", \"null\"]`\n    // which is not supported by the model API. Convert them to just `\"string\"`.\n    if (key === 'type' && Array.isArray(out[key])) {\n      // find the first that's not `null`.\n      out[key] = out[key].find((t) => t !== 'null');\n    }\n  }\n  return out;\n}\n\n/**\n * Defines a new GoogleAI model.\n */\nexport function defineGoogleAIModel({\n  ai,\n  name,\n  apiKey: apiKeyOption,\n  apiVersion,\n  baseUrl,\n  info,\n  defaultConfig,\n  debugTraces,\n}: {\n  ai: Genkit;\n  name: string;\n  apiKey?: string | false;\n  apiVersion?: string;\n  baseUrl?: string;\n  info?: ModelInfo;\n  defaultConfig?: GeminiConfig;\n  debugTraces?: boolean;\n}): ModelAction {\n  let apiKey: string | undefined;\n  // DO NOT infer API key from environment variable if plugin was configured with `{apiKey: false}`.\n  if (apiKeyOption !== false) {\n    apiKey = apiKeyOption || getApiKeyFromEnvVar();\n    if (!apiKey) {\n      throw new GenkitError({\n        status: 'FAILED_PRECONDITION',\n        message:\n          'Please pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai',\n      });\n    }\n  }\n\n  const apiModelName = name.startsWith('googleai/')\n    ? name.substring('googleai/'.length)\n    : name;\n\n  const model: ModelReference<z.ZodTypeAny> =\n    SUPPORTED_GEMINI_MODELS[apiModelName] ??\n    modelRef({\n      name: `googleai/${apiModelName}`,\n      info: {\n        label: `Google AI - ${apiModelName}`,\n        supports: {\n          multiturn: true,\n          media: true,\n          tools: true,\n          systemRole: true,\n          output: ['text', 'json'],\n        },\n        ...info,\n      },\n      configSchema: GeminiConfigSchema,\n    });\n\n  const middleware: ModelMiddleware[] = [];\n  if (model.info?.supports?.media) {\n    // the gemini api doesn't support downloading media from http(s)\n    middleware.push(\n      downloadRequestMedia({\n        maxBytes: 1024 * 1024 * 10,\n        // don't downlaod files that have been uploaded using the Files API\n        filter: (part) => {\n          try {\n            const url = new URL(part.media.url);\n            if (\n              // Gemini can handle these URLs\n              [\n                'generativelanguage.googleapis.com',\n                'www.youtube.com',\n                'youtube.com',\n                'youtu.be',\n              ].includes(url.hostname)\n            )\n              return false;\n          } catch {}\n          return true;\n        },\n      })\n    );\n  }\n\n  return ai.defineModel(\n    {\n      apiVersion: 'v2',\n      name: model.name,\n      ...model.info,\n      configSchema: model.configSchema,\n      use: middleware,\n    },\n    async (request, { streamingRequested, sendChunk, abortSignal }) => {\n      const options: RequestOptions = { apiClient: getGenkitClientHeader() };\n      if (apiVersion) {\n        options.apiVersion = apiVersion;\n      }\n      if (apiVersion) {\n        options.baseUrl = baseUrl;\n      }\n      const requestConfig: z.infer<typeof GeminiConfigSchema> = {\n        ...defaultConfig,\n        ...request.config,\n      };\n\n      // Make a copy so that modifying the request will not produce side-effects\n      const messages = [...request.messages];\n      if (messages.length === 0) throw new Error('No messages provided.');\n\n      // Gemini does not support messages with role system and instead expects\n      // systemInstructions to be provided as a separate input. The first\n      // message detected with role=system will be used for systemInstructions.\n      let systemInstruction: GeminiMessage | undefined = undefined;\n      if (model.info?.supports?.systemRole) {\n        const systemMessage = messages.find((m) => m.role === 'system');\n        if (systemMessage) {\n          messages.splice(messages.indexOf(systemMessage), 1);\n          systemInstruction = toGeminiSystemInstruction(systemMessage);\n        }\n      }\n\n      const tools: Tool[] = [];\n      if (request.tools?.length) {\n        tools.push({\n          functionDeclarations: request.tools.map(toGeminiTool),\n        });\n      }\n\n      const {\n        apiKey: apiKeyFromConfig,\n        safetySettings: safetySettingsFromConfig,\n        codeExecution: codeExecutionFromConfig,\n        version: versionFromConfig,\n        functionCallingConfig,\n        googleSearchRetrieval,\n        tools: toolsFromConfig,\n        ...restOfConfigOptions\n      } = requestConfig;\n\n      if (codeExecutionFromConfig) {\n        tools.push({\n          codeExecution:\n            request.config.codeExecution === true\n              ? {}\n              : request.config.codeExecution,\n        });\n      }\n\n      if (toolsFromConfig) {\n        tools.push(...(toolsFromConfig as any[]));\n      }\n\n      if (googleSearchRetrieval) {\n        tools.push({\n          googleSearch:\n            googleSearchRetrieval === true ? {} : googleSearchRetrieval,\n        } as GoogleSearchRetrievalTool);\n      }\n\n      let toolConfig: ToolConfig | undefined;\n      if (functionCallingConfig) {\n        toolConfig = {\n          functionCallingConfig: {\n            allowedFunctionNames: functionCallingConfig.allowedFunctionNames,\n            mode: toFunctionModeEnum(functionCallingConfig.mode),\n          },\n        };\n      } else if (request.toolChoice) {\n        toolConfig = {\n          functionCallingConfig: {\n            mode: toGeminiFunctionModeEnum(request.toolChoice),\n          },\n        };\n      }\n\n      // Cannot use tools with JSON mode\n      const jsonMode =\n        request.output?.format === 'json' ||\n        (request.output?.contentType === 'application/json' &&\n          tools.length === 0);\n\n      const generationConfig: GenerationConfig = {\n        ...restOfConfigOptions,\n        candidateCount: request.candidates || undefined,\n        responseMimeType: jsonMode ? 'application/json' : undefined,\n      };\n\n      if (request.output?.constrained && jsonMode) {\n        generationConfig.responseSchema = cleanSchema(request.output.schema);\n      }\n\n      const msg = toGeminiMessage(messages[messages.length - 1], model);\n\n      const fromJSONModeScopedGeminiCandidate = (\n        candidate: GeminiCandidate\n      ) => {\n        return fromGeminiCandidate(candidate, jsonMode);\n      };\n\n      const chatRequest: StartChatParams = {\n        systemInstruction,\n        generationConfig,\n        tools: tools.length ? tools : undefined,\n        toolConfig,\n        history: messages\n          .slice(0, -1)\n          .map((message) => toGeminiMessage(message, model)),\n        safetySettings: safetySettingsFromConfig,\n      } as StartChatParams;\n      const modelVersion = (versionFromConfig ||\n        model.version ||\n        apiModelName) as string;\n      const cacheConfigDetails = extractCacheConfig(request);\n\n      const { chatRequest: updatedChatRequest, cache } =\n        await handleCacheIfNeeded(\n          apiKey!,\n          request,\n          chatRequest,\n          modelVersion,\n          cacheConfigDetails\n        );\n\n      if (!apiKeyFromConfig && !apiKey) {\n        throw new GenkitError({\n          status: 'INVALID_ARGUMENT',\n          message:\n            'GoogleAI plugin was initialized with {apiKey: false} but no apiKey configuration was passed at call time.',\n        });\n      }\n      const client = new GoogleGenerativeAI(apiKeyFromConfig || apiKey!);\n      let genModel: GenerativeModel;\n\n      if (cache) {\n        genModel = client.getGenerativeModelFromCachedContent(\n          cache,\n          {\n            model: modelVersion,\n          },\n          options\n        );\n      } else {\n        genModel = client.getGenerativeModel(\n          {\n            model: modelVersion,\n          },\n          options\n        );\n      }\n\n      const callGemini = async () => {\n        let response: GenerateContentResponse;\n\n        if (streamingRequested) {\n          const result = await genModel\n            .startChat(updatedChatRequest)\n            .sendMessageStream(msg.parts, { ...options, signal: abortSignal });\n\n          const chunks = [] as GenerateContentResponse[];\n          for await (const item of result.stream) {\n            chunks.push(item as GenerateContentResponse);\n            (item as GenerateContentResponse).candidates?.forEach(\n              (candidate) => {\n                const c = fromJSONModeScopedGeminiCandidate(candidate);\n                sendChunk({\n                  index: c.index,\n                  content: c.message.content,\n                });\n              }\n            );\n          }\n\n          response = aggregateResponses(chunks);\n        } else {\n          const result = await genModel\n            .startChat(updatedChatRequest)\n            .sendMessage(msg.parts, { ...options, signal: abortSignal });\n\n          response = result.response;\n        }\n\n        const candidates = response.candidates || [];\n        if (response.candidates?.['undefined']) {\n          candidates.push(response.candidates['undefined']);\n        }\n        if (!candidates.length) {\n          throw new GenkitError({\n            status: 'FAILED_PRECONDITION',\n            message: 'No valid candidates returned.',\n          });\n        }\n\n        const candidateData =\n          candidates.map(fromJSONModeScopedGeminiCandidate) || [];\n\n        const usageMetadata = response.usageMetadata as ExtendedUsageMetadata;\n\n        return {\n          candidates: candidateData,\n          custom: response,\n          usage: {\n            ...getBasicUsageStats(request.messages, candidateData),\n            inputTokens: usageMetadata?.promptTokenCount,\n            outputTokens: usageMetadata?.candidatesTokenCount,\n            thoughtsTokens: usageMetadata?.thoughtsTokenCount,\n            totalTokens: usageMetadata?.totalTokenCount,\n            cachedContentTokens: usageMetadata?.cachedContentTokenCount,\n          },\n        };\n      };\n\n      // If debugTraces is enable, we wrap the actual model call with a span, add raw\n      // API params as for input.\n      return debugTraces\n        ? await runInNewSpan(\n            ai.registry,\n            {\n              metadata: {\n                name: streamingRequested ? 'sendMessageStream' : 'sendMessage',\n              },\n            },\n            async (metadata) => {\n              metadata.input = {\n                sdk: '@google/generative-ai',\n                cache: cache,\n                model: genModel.model,\n                chatOptions: updatedChatRequest,\n                parts: msg.parts,\n                options,\n              };\n              const response = await callGemini();\n              metadata.output = response.custom;\n              return response;\n            }\n          )\n        : await callGemini();\n    }\n  );\n}\n\n/** Converts mode from the config, which follows Gemini naming convention. */\nfunction toFunctionModeEnum(\n  configEnum: string | undefined\n): FunctionCallingMode | undefined {\n  if (configEnum === undefined) {\n    return undefined;\n  }\n  switch (configEnum) {\n    case 'MODE_UNSPECIFIED': {\n      return FunctionCallingMode.MODE_UNSPECIFIED;\n    }\n    case 'ANY': {\n      return FunctionCallingMode.ANY;\n    }\n    case 'AUTO': {\n      return FunctionCallingMode.AUTO;\n    }\n    case 'NONE': {\n      return FunctionCallingMode.NONE;\n    }\n    default:\n      throw new Error(`unsupported function calling mode: ${configEnum}`);\n  }\n}\n\n/** Converts mode from genkit tool choice. */\nfunction toGeminiFunctionModeEnum(\n  genkitMode: 'auto' | 'required' | 'none'\n): FunctionCallingMode | undefined {\n  if (genkitMode === undefined) {\n    return undefined;\n  }\n  switch (genkitMode) {\n    case 'required': {\n      return FunctionCallingMode.ANY;\n    }\n    case 'auto': {\n      return FunctionCallingMode.AUTO;\n    }\n    case 'none': {\n      return FunctionCallingMode.NONE;\n    }\n    default:\n      throw new Error(`unsupported function calling mode: ${genkitMode}`);\n  }\n}\n\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single GenerateContentResponse.\n *\n * This code is copy-pasted from https://github.com/google-gemini/deprecated-generative-ai-js/blob/8b14949a5e8f1f3dfc35c394ebf5b19e68f92a22/src/requests/stream-reader.ts#L153\n * with a small (but critical) bug fix.\n */\nexport function aggregateResponses(\n  responses: GenerateContentResponse[]\n): GenerateContentResponse {\n  const lastResponse = responses[responses.length - 1];\n  const aggregatedResponse: GenerateContentResponse = {\n    promptFeedback: lastResponse?.promptFeedback,\n  };\n  for (const response of responses) {\n    if (response.candidates) {\n      let candidateIndex = 0;\n      for (const candidate of response.candidates) {\n        if (!aggregatedResponse.candidates) {\n          aggregatedResponse.candidates = [];\n        }\n        if (!aggregatedResponse.candidates[candidateIndex]) {\n          aggregatedResponse.candidates[candidateIndex] = {\n            index: candidateIndex,\n          } as GenerateContentCandidate;\n        }\n        // Keep overwriting, the last one will be final\n        aggregatedResponse.candidates[candidateIndex].citationMetadata =\n          candidate.citationMetadata;\n        aggregatedResponse.candidates[candidateIndex].groundingMetadata =\n          candidate.groundingMetadata;\n        aggregatedResponse.candidates[candidateIndex].finishReason =\n          candidate.finishReason;\n        aggregatedResponse.candidates[candidateIndex].finishMessage =\n          candidate.finishMessage;\n        aggregatedResponse.candidates[candidateIndex].safetyRatings =\n          candidate.safetyRatings;\n\n        /**\n         * Candidates should always have content and parts, but this handles\n         * possible malformed responses.\n         */\n        if (candidate.content && candidate.content.parts) {\n          if (!aggregatedResponse.candidates[candidateIndex].content) {\n            aggregatedResponse.candidates[candidateIndex].content = {\n              role: candidate.content.role || 'user',\n              parts: [],\n            };\n          }\n          for (const part of candidate.content.parts) {\n            const newPart: Partial<GeminiPart> = {};\n            if (part.text) {\n              newPart.text = part.text;\n            }\n            if ((part as any).thought) {\n              (newPart as any).thought = (part as any).thought;\n            }\n            if ((part as any).thoughtSignature) {\n              (newPart as any).thoughtSignature = (\n                part as any\n              ).thoughtSignature;\n            }\n            if (part.functionCall) {\n              newPart.functionCall = part.functionCall;\n            }\n            if (part.executableCode) {\n              newPart.executableCode = part.executableCode;\n            }\n            if (part.codeExecutionResult) {\n              newPart.codeExecutionResult = part.codeExecutionResult;\n            }\n            if (Object.keys(newPart).length === 0) {\n              newPart.text = '';\n            }\n            aggregatedResponse.candidates[candidateIndex].content.parts.push(\n              newPart as GeminiPart\n            );\n          }\n        }\n      }\n      candidateIndex++;\n    }\n    if (response.usageMetadata) {\n      aggregatedResponse.usageMetadata = response.usageMetadata;\n    }\n  }\n  return aggregatedResponse;\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGenkitClientHeader } from './common';\n\nexport type PredictMethod = 'predict' | 'predictLongRunning';\n\nexport interface Operation {\n  name: string;\n  done?: boolean;\n  error?: {\n    message: string;\n  };\n  response?: {\n    generateVideoResponse: {\n      generatedSamples: { video: { uri: string } }[];\n    };\n  };\n}\n\nfunction predictEndpoint(options: {\n  apiVersion: string;\n  model: string;\n  apiKey: string;\n  method: PredictMethod;\n}) {\n  return `https://generativelanguage.googleapis.com/${options.apiVersion}/models/${options.model}:${options.method}?key=${options.apiKey}`;\n}\n\nfunction opCheckEndpoint(options: {\n  apiVersion: string;\n  operation: string;\n  apiKey: string;\n}) {\n  return `https://generativelanguage.googleapis.com/${options.apiVersion}/${options.operation}?key=${options.apiKey}`;\n}\n\nexport type PredictClient<I = unknown, R = unknown, P = unknown> = (\n  instances: I[],\n  parameters: P\n) => Promise<R>;\n\nexport function predictModel<I = unknown, R = unknown, P = unknown>(\n  model: string,\n  apiKey: string,\n  method: PredictMethod\n): PredictClient<I, R, P> {\n  return async (instances: I[], parameters: P): Promise<R> => {\n    const fetch = (await import('node-fetch')).default;\n\n    const req = {\n      instances,\n      parameters,\n    };\n\n    const response = await fetch(\n      predictEndpoint({\n        model,\n        apiVersion: 'v1beta',\n        apiKey,\n        method,\n      }),\n      {\n        method: 'POST',\n        body: JSON.stringify(req),\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Goog-Api-Client': getGenkitClientHeader(),\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        `Error from Gemini AI predict: HTTP ${\n          response.status\n        }: ${await response.text()}`\n      );\n    }\n\n    return (await response.json()) as R;\n  };\n}\n\nexport async function checkOp(\n  operation: string,\n  apiKey: string\n): Promise<Operation> {\n  const fetch = (await import('node-fetch')).default;\n\n  const response = await fetch(\n    opCheckEndpoint({\n      apiVersion: 'v1beta',\n      operation,\n      apiKey,\n    }),\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Goog-Api-Client': getGenkitClientHeader(),\n      },\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(\n      `Error from operation API: HTTP ${\n        response.status\n      }: ${await response.text()}`\n    );\n  }\n\n  return (await response.json()) as Operation;\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenkitError, MessageData, z, type Genkit } from 'genkit';\nimport {\n  getBasicUsageStats,\n  modelRef,\n  type GenerateRequest,\n  type ModelAction,\n  type ModelInfo,\n  type ModelReference,\n} from 'genkit/model';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport { predictModel } from './predict.js';\n\nexport type KNOWN_IMAGEN_MODELS = 'imagen-3.0-generate-002';\n\n/**\n * See https://ai.google.dev/gemini-api/docs/image-generation#imagen-model\n */\nexport const ImagenConfigSchema = z\n  .object({\n    numberOfImages: z\n      .number()\n      .describe(\n        'The number of images to generate, from 1 to 4 (inclusive). The default is 1.'\n      )\n      .optional(),\n    aspectRatio: z\n      .enum(['1:1', '9:16', '16:9', '3:4', '4:3'])\n      .describe('Desired aspect ratio of the output image.')\n      .optional(),\n    personGeneration: z\n      .enum(['dont_allow', 'allow_adult', 'allow_all'])\n      .describe(\n        'Control if/how images of people will be generated by the model.'\n      )\n      .optional(),\n  })\n  .passthrough();\n\ninterface ImagenParameters {\n  sampleCount?: number;\n  aspectRatio?: string;\n  personGeneration?: string;\n}\n\nfunction toParameters(\n  request: GenerateRequest<typeof ImagenConfigSchema>\n): ImagenParameters {\n  const out = {\n    sampleCount: request.config?.numberOfImages ?? 1,\n    ...request?.config,\n  };\n\n  for (const k in out) {\n    if (!out[k]) delete out[k];\n  }\n\n  return out;\n}\n\nfunction extractText(request: GenerateRequest) {\n  return request.messages\n    .at(-1)!\n    .content.map((c) => c.text || '')\n    .join('');\n}\n\nfunction extractBaseImage(request: GenerateRequest): string | undefined {\n  return request.messages\n    .at(-1)\n    ?.content.find((p) => !!p.media)\n    ?.media?.url.split(',')[1];\n}\n\ninterface ImagenPrediction {\n  predictions: { bytesBase64Encoded: string; mimeType: string }[];\n}\n\ninterface ImagenInstance {\n  prompt: string;\n  image?: { bytesBase64Encoded: string };\n  mask?: { image?: { bytesBase64Encoded: string } };\n}\n\nexport const GENERIC_IMAGEN_INFO = {\n  label: `Google AI - Generic Imagen`,\n  supports: {\n    media: true,\n    multiturn: false,\n    tools: false,\n    systemRole: false,\n    output: ['media'],\n  },\n} as ModelInfo;\n\nexport function defineImagenModel(\n  ai: Genkit,\n  name: string,\n  apiKey?: string | false\n): ModelAction {\n  if (apiKey !== false) {\n    apiKey = apiKey || getApiKeyFromEnvVar();\n    if (!apiKey) {\n      throw new GenkitError({\n        status: 'FAILED_PRECONDITION',\n        message:\n          'Please pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai',\n      });\n    }\n  }\n  const modelName = `googleai/${name}`;\n  const model: ModelReference<z.ZodTypeAny> = modelRef({\n    name: modelName,\n    info: {\n      ...GENERIC_IMAGEN_INFO,\n      label: `Google AI - ${name}`,\n    },\n    configSchema: ImagenConfigSchema,\n  });\n\n  return ai.defineModel(\n    {\n      name: modelName,\n      ...model.info,\n      configSchema: ImagenConfigSchema,\n    },\n    async (request) => {\n      const instance: ImagenInstance = {\n        prompt: extractText(request),\n      };\n      const baseImage = extractBaseImage(request);\n      if (baseImage) {\n        instance.image = { bytesBase64Encoded: baseImage };\n      }\n\n      const predictClient = predictModel<\n        ImagenInstance,\n        ImagenPrediction,\n        ImagenParameters\n      >(model.version || name, apiKey as string, 'predict');\n      const response = await predictClient([instance], toParameters(request));\n\n      if (!response.predictions || response.predictions.length == 0) {\n        throw new Error(\n          'Model returned no predictions. Possibly due to content filters.'\n        );\n      }\n\n      const message = {\n        role: 'model',\n        content: [],\n      } as MessageData;\n\n      response.predictions.forEach((p, i) => {\n        const b64data = p.bytesBase64Encoded;\n        const mimeType = p.mimeType;\n        message.content.push({\n          media: {\n            url: `data:${mimeType};base64,${b64data}`,\n            contentType: mimeType,\n          },\n        });\n      });\n      return {\n        finishReason: 'stop',\n        message,\n        usage: getBasicUsageStats(request.messages, message),\n        custom: response,\n      };\n    }\n  );\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Gemini  model definition\nexport interface Model {\n  name: string;\n  baseModelId: string;\n  version: string;\n  displayName: string;\n  description: string;\n  inputTokenLimit: number;\n  outputTokenLimit: number;\n  supportedGenerationMethods: string[];\n  temperature: number;\n  maxTemperature: number;\n  topP: number;\n  topK: number;\n}\n\n// Gemini list models response\ninterface ListModelsResponse {\n  models: Model[];\n  nextPageToken?: string;\n}\n\n/**\n * List Gemini models by making an RPC call to the API.\n *\n * https://ai.google.dev/api/models#method:-models.list\n */\nexport async function listModels(\n  baseUrl: string,\n  apiKey: string\n): Promise<Model[]> {\n  // We call the gemini list local models api:\n  const res = await fetch(\n    `${baseUrl}/v1beta/models?pageSize=1000&key=${apiKey}`,\n    {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n  const modelResponse = JSON.parse(await res.text()) as ListModelsResponse;\n  return modelResponse.models;\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  GenerateResponseData,\n  GenkitError,\n  Operation,\n  z,\n  type Genkit,\n} from 'genkit';\nimport {\n  BackgroundModelAction,\n  modelRef,\n  type GenerateRequest,\n  type ModelInfo,\n  type ModelReference,\n} from 'genkit/model';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport { Operation as ApiOperation, checkOp, predictModel } from './predict.js';\n\nexport type KNOWN_VEO_MODELS = 'veo-2.0-generate-001';\n\n/**\n * See https://ai.google.dev/gemini-api/docs/video\n */\nexport const VeoConfigSchema = z\n  .object({\n    // NOTE: Documentation notes numberOfVideos parameter to pick the number of\n    // output videos, but this setting does not seem to work\n    negativePrompt: z.string().optional(),\n    aspectRatio: z\n      .enum(['9:16', '16:9'])\n      .describe('Desired aspect ratio of the output video.')\n      .optional(),\n    personGeneration: z\n      .enum(['dont_allow', 'allow_adult', 'allow_all'])\n      .describe(\n        'Control if/how images of people will be generated by the model.'\n      )\n      .optional(),\n    durationSeconds: z\n      .number()\n      .step(1)\n      .min(5)\n      .max(8)\n      .describe('Length of each output video in seconds, between 5 and 8.')\n      .optional(),\n    enhance_prompt: z\n      .boolean()\n      .describe('Enable or disable the prompt rewriter. Enabled by default.')\n      .optional(),\n  })\n  .passthrough();\n\nfunction extractText(request: GenerateRequest) {\n  return request.messages\n    .at(-1)!\n    .content.map((c) => c.text || '')\n    .join('');\n}\n\ninterface VeoParameters {\n  sampleCount?: number;\n  aspectRatio?: string;\n  personGeneration?: string;\n}\n\nfunction toParameters(\n  request: GenerateRequest<typeof VeoConfigSchema>\n): VeoParameters {\n  const out = {\n    ...request?.config,\n  };\n\n  for (const k in out) {\n    if (!out[k]) delete out[k];\n  }\n\n  return out;\n}\n\nfunction extractImage(request: GenerateRequest): VeoImage | undefined {\n  const media = request.messages.at(-1)?.content.find((p) => !!p.media)?.media;\n  if (media) {\n    const img = media?.url.split(',')[1];\n    return {\n      bytesBase64Encoded: img,\n      mimeType: media.contentType!,\n    };\n  }\n  return undefined;\n}\n\ninterface VeoImage {\n  bytesBase64Encoded: string;\n  mimeType: string;\n}\n\ninterface VeoInstance {\n  prompt: string;\n  image?: VeoImage;\n}\n\nexport const GENERIC_VEO_INFO = {\n  label: `Google AI - Generic Veo`,\n  supports: {\n    media: true,\n    multiturn: false,\n    tools: false,\n    systemRole: false,\n    output: ['media'],\n    longRunning: true,\n  },\n} as ModelInfo;\n\nexport function defineVeoModel(\n  ai: Genkit,\n  name: string,\n  apiKey?: string | false\n): BackgroundModelAction<typeof VeoConfigSchema> {\n  if (apiKey !== false) {\n    apiKey = apiKey || getApiKeyFromEnvVar();\n    if (!apiKey) {\n      throw new GenkitError({\n        status: 'FAILED_PRECONDITION',\n        message:\n          'Please pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.\\n' +\n          'For more details see https://genkit.dev/docs/plugins/google-genai',\n      });\n    }\n  }\n  const modelName = `googleai/${name}`;\n  const model: ModelReference<z.ZodTypeAny> = modelRef({\n    name: modelName,\n    info: {\n      ...GENERIC_VEO_INFO,\n      label: `Google AI - ${name}`,\n    },\n    configSchema: VeoConfigSchema,\n  });\n\n  return ai.defineBackgroundModel({\n    name: modelName,\n    ...model.info,\n    configSchema: VeoConfigSchema,\n    async start(request) {\n      const instance: VeoInstance = {\n        prompt: extractText(request),\n      };\n      const image = extractImage(request);\n      if (image) {\n        instance.image = image;\n      }\n\n      const predictClient = predictModel<\n        VeoInstance,\n        ApiOperation,\n        VeoParameters\n      >(model.version || name, apiKey as string, 'predictLongRunning');\n      const response = await predictClient([instance], toParameters(request));\n\n      return toGenkitOp(response);\n    },\n    async check(operation) {\n      const newOp = await checkOp(operation.id, apiKey as string);\n      return toGenkitOp(newOp);\n    },\n  });\n}\n\nfunction toGenkitOp(apiOp: ApiOperation): Operation<GenerateResponseData> {\n  const res = { id: apiOp.name } as Operation<GenerateResponseData>;\n  if (apiOp.done !== undefined) {\n    res.done = apiOp.done;\n  }\n\n  if (apiOp.error) {\n    res.error = { message: apiOp.error.message };\n  }\n\n  if (\n    apiOp.response &&\n    apiOp.response.generateVideoResponse &&\n    apiOp.response.generateVideoResponse.generatedSamples\n  ) {\n    res.output = {\n      finishReason: 'stop',\n      raw: apiOp.response,\n      message: {\n        role: 'model',\n        content: apiOp.response.generateVideoResponse.generatedSamples.map(\n          (s) => {\n            return {\n              media: {\n                url: s.video.uri,\n              },\n            };\n          }\n        ),\n      },\n    };\n  }\n\n  return res;\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\n\nconst loggerKey = '__genkit_logger';\n\nconst _defaultLogger = {\n  shouldLog(targetLevel: string) {\n    return LOG_LEVELS.indexOf(this.level) <= LOG_LEVELS.indexOf(targetLevel);\n  },\n  debug(...args: any) {\n    this.shouldLog('debug') && console.debug(...args);\n  },\n  info(...args: any) {\n    this.shouldLog('info') && console.info(...args);\n  },\n  warn(...args: any) {\n    this.shouldLog('warn') && console.warn(...args);\n  },\n  error(...args: any) {\n    this.shouldLog('error') && console.error(...args);\n  },\n  level: 'info',\n};\n\nfunction getLogger() {\n  if (!global[loggerKey]) {\n    global[loggerKey] = _defaultLogger;\n  }\n  return global[loggerKey];\n}\n\nclass Logger {\n  readonly defaultLogger = _defaultLogger;\n\n  init(fn: any) {\n    global[loggerKey] = fn;\n  }\n\n  info(...args: any) {\n    // eslint-disable-next-line prefer-spread\n    getLogger().info.apply(getLogger(), args);\n  }\n  debug(...args: any) {\n    // eslint-disable-next-line prefer-spread\n    getLogger().debug.apply(getLogger(), args);\n  }\n  error(...args: any) {\n    // eslint-disable-next-line prefer-spread\n    getLogger().error.apply(getLogger(), args);\n  }\n  warn(...args: any) {\n    // eslint-disable-next-line prefer-spread\n    getLogger().warn.apply(getLogger(), args);\n  }\n\n  setLogLevel(level: 'error' | 'warn' | 'info' | 'debug') {\n    getLogger().level = level;\n  }\n\n  logStructured(msg: string, metadata: any) {\n    getLogger().info(msg, metadata);\n  }\n\n  logStructuredError(msg: string, metadata: any) {\n    getLogger().error(msg, metadata);\n  }\n}\n\n/**\n * Genkit logger.\n *\n * ```ts\n * import { logger } from 'genkit/logging';\n *\n * logger.setLogLevel('debug');\n * ```\n */\nexport const logger = new Logger();\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ActionFnArg,\n  BackgroundAction,\n  GenkitError,\n  Operation,\n  OperationSchema,\n  action,\n  backgroundAction,\n  defineAction,\n  registerBackgroundAction,\n  z,\n  type Action,\n  type ActionMetadata,\n  type ActionParams,\n  type SimpleMiddleware,\n  type StreamingCallback,\n} from '@genkit-ai/core';\nimport { logger } from '@genkit-ai/core/logging';\nimport type { Registry } from '@genkit-ai/core/registry';\nimport { toJsonSchema } from '@genkit-ai/core/schema';\nimport { performance } from 'node:perf_hooks';\nimport {\n  CustomPartSchema,\n  DataPartSchema,\n  MediaPartSchema,\n  TextPartSchema,\n  ToolRequestPartSchema,\n  ToolResponsePartSchema,\n  type CustomPart,\n  type DataPart,\n  type MediaPart,\n  type TextPart,\n  type ToolRequestPart,\n  type ToolResponsePart,\n} from './document.js';\nimport {\n  CandidateData,\n  GenerateRequest,\n  GenerateRequestSchema,\n  GenerateResponseChunkData,\n  GenerateResponseChunkSchema,\n  GenerateResponseData,\n  GenerateResponseSchema,\n  GenerationUsage,\n  MessageData,\n  ModelInfo,\n  Part,\n} from './model-types.js';\nimport {\n  augmentWithContext,\n  simulateConstrainedGeneration,\n} from './model/middleware.js';\nexport { defineGenerateAction } from './generate/action.js';\nexport * from './model-types.js';\nexport {\n  CustomPartSchema,\n  DataPartSchema,\n  MediaPartSchema,\n  TextPartSchema,\n  ToolRequestPartSchema,\n  ToolResponsePartSchema,\n  simulateConstrainedGeneration,\n  type CustomPart,\n  type DataPart,\n  type MediaPart,\n  type TextPart,\n  type ToolRequestPart,\n  type ToolResponsePart,\n};\n\nexport type ModelAction<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n> = Action<\n  typeof GenerateRequestSchema,\n  typeof GenerateResponseSchema,\n  typeof GenerateResponseChunkSchema\n> & {\n  __configSchema: CustomOptionsSchema;\n};\n\nexport type BackgroundModelAction<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n> = BackgroundAction<\n  typeof GenerateRequestSchema,\n  typeof GenerateResponseSchema\n> & {\n  __configSchema: CustomOptionsSchema;\n};\n\nexport type ModelMiddleware = SimpleMiddleware<\n  z.infer<typeof GenerateRequestSchema>,\n  z.infer<typeof GenerateResponseSchema>\n>;\n\nexport type DefineModelOptions<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n> = {\n  name: string;\n  /** Known version names for this model, e.g. `gemini-1.0-pro-001`. */\n  versions?: string[];\n  /** Capabilities this model supports. */\n  supports?: ModelInfo['supports'];\n  /** Custom options schema for this model. */\n  configSchema?: CustomOptionsSchema;\n  /** Descriptive name for this model e.g. 'Google AI - Gemini Pro'. */\n  label?: string;\n  /** Middleware to be used with this model. */\n  use?: ModelMiddleware[];\n};\n\nexport function model<CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny>(\n  options: DefineModelOptions<CustomOptionsSchema>,\n  runner: (\n    request: GenerateRequest<CustomOptionsSchema>,\n    options: ActionFnArg<GenerateResponseChunkData>\n  ) => Promise<GenerateResponseData>\n): ModelAction<CustomOptionsSchema> {\n  const act = action(modelActionOptions(options), (input, ctx) => {\n    const startTimeMs = performance.now();\n    return runner(input, ctx).then((response) => {\n      const timedResponse = {\n        ...response,\n        latencyMs: performance.now() - startTimeMs,\n      };\n      return timedResponse;\n    });\n  });\n  Object.assign(act, {\n    __configSchema: options.configSchema || z.unknown(),\n  });\n  return act as ModelAction<CustomOptionsSchema>;\n}\n\nfunction modelActionOptions<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: DefineModelOptions<CustomOptionsSchema>\n): ActionParams<typeof GenerateRequestSchema, typeof GenerateResponseSchema> {\n  const label = options.label || options.name;\n  const middleware = getModelMiddleware(options);\n  return {\n    actionType: 'model',\n    name: options.name,\n    description: label,\n    inputSchema: GenerateRequestSchema,\n    outputSchema: GenerateResponseSchema,\n    metadata: {\n      model: {\n        label,\n        customOptions: options.configSchema\n          ? toJsonSchema({ schema: options.configSchema })\n          : undefined,\n        versions: options.versions,\n        supports: options.supports,\n      },\n    },\n    use: middleware,\n  };\n}\n\n/**\n * Defines a new model and adds it to the registry.\n */\nexport function defineModel<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  options: {\n    apiVersion: 'v2';\n  } & DefineModelOptions<CustomOptionsSchema>,\n  runner: (\n    request: GenerateRequest<CustomOptionsSchema>,\n    options: ActionFnArg<GenerateResponseChunkData>\n  ) => Promise<GenerateResponseData>\n): ModelAction<CustomOptionsSchema>;\n\n/**\n * Defines a new model and adds it to the registry.\n */\nexport function defineModel<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  options: DefineModelOptions<CustomOptionsSchema>,\n  runner: (\n    request: GenerateRequest<CustomOptionsSchema>,\n    streamingCallback?: StreamingCallback<GenerateResponseChunkData>\n  ) => Promise<GenerateResponseData>\n): ModelAction<CustomOptionsSchema>;\n\nexport function defineModel<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  options: any,\n  runner: (\n    request: GenerateRequest<CustomOptionsSchema>,\n    options: any\n  ) => Promise<GenerateResponseData>\n): ModelAction<CustomOptionsSchema> {\n  const act = defineAction(\n    registry,\n    modelActionOptions(options),\n    (input, ctx) => {\n      const startTimeMs = performance.now();\n      const secondParam =\n        options.apiVersion === 'v2'\n          ? ctx\n          : ctx.streamingRequested\n            ? ctx.sendChunk\n            : undefined;\n      return runner(input, secondParam).then((response) => {\n        const timedResponse = {\n          ...response,\n          latencyMs: performance.now() - startTimeMs,\n        };\n        return timedResponse;\n      });\n    }\n  );\n  Object.assign(act, {\n    __configSchema: options.configSchema || z.unknown(),\n  });\n  return act as ModelAction<CustomOptionsSchema>;\n}\n\nexport type DefineBackgroundModelOptions<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n> = DefineModelOptions<CustomOptionsSchema> & {\n  start: (\n    request: GenerateRequest<CustomOptionsSchema>\n  ) => Promise<Operation<GenerateResponseData>>;\n  check: (\n    operation: Operation<GenerateResponseData>\n  ) => Promise<Operation<GenerateResponseData>>;\n  cancel?: (\n    operation: Operation<GenerateResponseData>\n  ) => Promise<Operation<GenerateResponseData>>;\n};\n\n/**\n * Defines a new model that runs in the background.\n */\nexport function defineBackgroundModel<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  options: DefineBackgroundModelOptions<CustomOptionsSchema>\n): BackgroundModelAction<CustomOptionsSchema> {\n  const act = backgroundModel(options);\n  registerBackgroundAction(registry, act);\n  return act;\n}\n/**\n * Defines a new model that runs in the background.\n */\nexport function backgroundModel<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: DefineBackgroundModelOptions<CustomOptionsSchema>\n): BackgroundModelAction<CustomOptionsSchema> {\n  const label = options.label || options.name;\n  const middleware = getModelMiddleware(options);\n  const act = backgroundAction({\n    actionType: 'background-model',\n    name: options.name,\n    description: label,\n    inputSchema: GenerateRequestSchema,\n    outputSchema: GenerateResponseSchema,\n    metadata: {\n      model: {\n        label,\n        customOptions: options.configSchema\n          ? toJsonSchema({ schema: options.configSchema })\n          : undefined,\n        versions: options.versions,\n        supports: options.supports,\n      },\n    },\n    use: middleware,\n    async start(request) {\n      const startTimeMs = performance.now();\n      const response = await options.start(request);\n      Object.assign(response, {\n        latencyMs: performance.now() - startTimeMs,\n      });\n      return response;\n    },\n    async check(op) {\n      return options.check(op);\n    },\n    cancel: options.cancel\n      ? async (op) => {\n          if (!options.cancel) {\n            throw new GenkitError({\n              status: 'UNIMPLEMENTED',\n              message: 'cancel not implemented',\n            });\n          }\n          return options.cancel(op);\n        }\n      : undefined,\n  }) as BackgroundModelAction<CustomOptionsSchema>;\n  Object.assign(act, {\n    __configSchema: options.configSchema || z.unknown(),\n  });\n  return act;\n}\n\nfunction getModelMiddleware(options: {\n  use?: ModelMiddleware[];\n  name: string;\n  supports?: ModelInfo['supports'];\n}) {\n  const middleware: ModelMiddleware[] = options.use || [];\n  if (!options?.supports?.context) middleware.push(augmentWithContext());\n  const constratedSimulator = simulateConstrainedGeneration();\n  middleware.push((req, next) => {\n    if (\n      !options?.supports?.constrained ||\n      options?.supports?.constrained === 'none' ||\n      (options?.supports?.constrained === 'no-tools' &&\n        (req.tools?.length ?? 0) > 0)\n    ) {\n      return constratedSimulator(req, next);\n    }\n    return next(req);\n  });\n\n  return middleware;\n}\n\nexport interface ModelReference<CustomOptions extends z.ZodTypeAny> {\n  name: string;\n  configSchema?: CustomOptions;\n  info?: ModelInfo;\n  version?: string;\n  config?: z.infer<CustomOptions>;\n\n  withConfig(cfg: z.infer<CustomOptions>): ModelReference<CustomOptions>;\n  withVersion(version: string): ModelReference<CustomOptions>;\n}\n\n/**\n * Packages model information into ActionMetadata object.\n */\nexport function modelActionMetadata({\n  name,\n  info,\n  configSchema,\n  background,\n}: {\n  name: string;\n  info?: ModelInfo;\n  configSchema?: z.ZodTypeAny;\n  background?: boolean;\n}): ActionMetadata {\n  return {\n    actionType: background ? 'background-model' : 'model',\n    name: name,\n    inputJsonSchema: toJsonSchema({ schema: GenerateRequestSchema }),\n    outputJsonSchema: background\n      ? toJsonSchema({ schema: OperationSchema })\n      : toJsonSchema({ schema: GenerateResponseSchema }),\n    metadata: {\n      model: {\n        ...info,\n        customOptions: configSchema\n          ? toJsonSchema({ schema: configSchema })\n          : undefined,\n      },\n    },\n  } as ActionMetadata;\n}\n\n/** Cretes a model reference. */\nexport function modelRef<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: Omit<\n    ModelReference<CustomOptionsSchema>,\n    'withConfig' | 'withVersion'\n  > & {\n    namespace?: string;\n  }\n): ModelReference<CustomOptionsSchema> {\n  let name = options.name;\n  if (options.namespace && !name.startsWith(options.namespace + '/')) {\n    name = `${options.namespace}/${name}`;\n  }\n  const ref: Partial<ModelReference<CustomOptionsSchema>> = {\n    ...options,\n    name,\n  };\n  ref.withConfig = (\n    cfg: z.infer<CustomOptionsSchema>\n  ): ModelReference<CustomOptionsSchema> => {\n    return modelRef({\n      ...options,\n      name,\n      config: cfg,\n    });\n  };\n  ref.withVersion = (version: string): ModelReference<CustomOptionsSchema> => {\n    return modelRef({\n      ...options,\n      name,\n      version,\n    });\n  };\n  return ref as ModelReference<CustomOptionsSchema>;\n}\n\n/** Container for counting usage stats for a single input/output {Part} */\ntype PartCounts = {\n  characters: number;\n  images: number;\n  videos: number;\n  audio: number;\n};\n\n/**\n * Calculates basic usage statistics from the given model inputs and outputs.\n */\nexport function getBasicUsageStats(\n  input: MessageData[],\n  response: MessageData | CandidateData[]\n): GenerationUsage {\n  const inputCounts = getPartCounts(input.flatMap((md) => md.content));\n  const outputCounts = getPartCounts(\n    Array.isArray(response)\n      ? response.flatMap((c) => c.message.content)\n      : response.content\n  );\n  return {\n    inputCharacters: inputCounts.characters,\n    inputImages: inputCounts.images,\n    inputVideos: inputCounts.videos,\n    inputAudioFiles: inputCounts.audio,\n    outputCharacters: outputCounts.characters,\n    outputImages: outputCounts.images,\n    outputVideos: outputCounts.videos,\n    outputAudioFiles: outputCounts.audio,\n  };\n}\n\nfunction getPartCounts(parts: Part[]): PartCounts {\n  return parts.reduce(\n    (counts, part) => {\n      const isImage =\n        part.media?.contentType?.startsWith('image') ||\n        part.media?.url?.startsWith('data:image');\n      const isVideo =\n        part.media?.contentType?.startsWith('video') ||\n        part.media?.url?.startsWith('data:video');\n      const isAudio =\n        part.media?.contentType?.startsWith('audio') ||\n        part.media?.url?.startsWith('data:audio');\n      return {\n        characters: counts.characters + (part.text?.length || 0),\n        images: counts.images + (isImage ? 1 : 0),\n        videos: counts.videos + (isVideo ? 1 : 0),\n        audio: counts.audio + (isAudio ? 1 : 0),\n      };\n    },\n    { characters: 0, images: 0, videos: 0, audio: 0 }\n  );\n}\n\nexport type ModelArgument<CustomOptions extends z.ZodTypeAny = z.ZodTypeAny> =\n  | ModelAction<CustomOptions>\n  | ModelReference<CustomOptions>\n  | string;\n\nexport interface ResolvedModel<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  modelAction: ModelAction;\n  config?: z.infer<CustomOptions>;\n  version?: string;\n}\n\nexport async function resolveModel<C extends z.ZodTypeAny = z.ZodTypeAny>(\n  registry: Registry,\n  model: ModelArgument<C> | undefined,\n  options?: { warnDeprecated?: boolean }\n): Promise<ResolvedModel<C>> {\n  let out: ResolvedModel<C>;\n  let modelId: string;\n\n  if (!model) {\n    model = await registry.lookupValue('defaultModel', 'defaultModel');\n  }\n  if (!model) {\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: 'Must supply a `model` to `generate()` calls.',\n    });\n  }\n  if (typeof model === 'string') {\n    modelId = model;\n    out = { modelAction: await lookupModel(registry, model) };\n  } else if (model.hasOwnProperty('__action')) {\n    modelId = (model as ModelAction).__action.name;\n    out = { modelAction: model as ModelAction };\n  } else {\n    const ref = model as ModelReference<any>;\n    modelId = ref.name;\n    out = {\n      modelAction: await lookupModel(registry, ref.name),\n      config: {\n        ...ref.config,\n      },\n      version: ref.version,\n    };\n  }\n\n  if (!out.modelAction) {\n    throw new GenkitError({\n      status: 'NOT_FOUND',\n      message: `Model '${modelId}' not found`,\n    });\n  }\n\n  if (\n    options?.warnDeprecated &&\n    out.modelAction.__action.metadata?.model?.stage === 'deprecated'\n  ) {\n    logger.warn(\n      `Model '${out.modelAction.__action.name}' is deprecated and may be removed in a future release.`\n    );\n  }\n\n  return out;\n}\n\nasync function lookupModel(\n  registry: Registry,\n  model: string\n): Promise<ModelAction> {\n  return (\n    (await registry.lookupAction(`/model/${model}`)) ||\n    (await registry.lookupAction(`/background-model/${model}`))\n  );\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from './__codegen/version.js';\n\n/**\n * Genkit library version.\n */\nexport const GENKIT_VERSION = version;\n\n/**\n * Genkit client header for API calls.\n */\nexport const GENKIT_CLIENT_HEADER = `genkit-node/${GENKIT_VERSION} gl-node/${process.versions.node}`;\nexport const GENKIT_REFLECTION_API_SPEC_VERSION = 1;\n\nexport { z } from 'zod';\nexport * from './action.js';\nexport { getAsyncContext } from './async-context.js';\nexport {\n  OperationSchema,\n  backgroundAction,\n  defineBackgroundAction,\n  isBackgroundAction,\n  registerBackgroundAction,\n  type BackgroundAction,\n  type BackgroundActionFnArg,\n  type BackgroundActionParams,\n  type BackgroundActionRunOptions,\n  type Operation,\n} from './background-action.js';\nexport {\n  apiKey,\n  getContext,\n  runWithContext,\n  type ActionContext,\n  type ApiKeyContext,\n  type ContextProvider,\n  type RequestData,\n} from './context.js';\nexport {\n  GenkitError,\n  UnstableApiError,\n  UserFacingError,\n  assertUnstable,\n  getCallableJSON,\n  getHttpStatus,\n  type StatusName,\n} from './error.js';\nexport {\n  defineFlow,\n  flow,\n  run,\n  type Flow,\n  type FlowConfig,\n  type FlowFn,\n  type FlowSideChannel,\n} from './flow.js';\nexport * from './plugin.js';\nexport * from './reflection.js';\nexport { defineJsonSchema, defineSchema, type JSONSchema } from './schema.js';\nexport * from './telemetryTypes.js';\nexport * from './utils.js';\n\nconst clientHeaderGlobalKey = '__genkit_ClientHeader';\n\n/** Additional attribution information to include in the x-goog-api-client header. */\nexport function getClientHeader() {\n  if (global[clientHeaderGlobalKey]) {\n    return GENKIT_CLIENT_HEADER + ' ' + global[clientHeaderGlobalKey];\n  }\n  return GENKIT_CLIENT_HEADER;\n}\n\n/** Sets additional attribution information to include in the x-goog-api-client header. */\nexport function setClientHeader(header: string) {\n  global[clientHeaderGlobalKey] = header;\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Ajv, { type ErrorObject, type JSONSchemaType } from 'ajv';\nimport addFormats from 'ajv-formats';\nimport { z } from 'zod';\nimport zodToJsonSchema from 'zod-to-json-schema';\nimport { GenkitError } from './error.js';\nimport type { Registry } from './registry.js';\nconst ajv = new Ajv();\naddFormats(ajv);\n\nexport { z }; // provide a consistent zod to use throughout genkit\n\n/**\n * JSON schema.\n */\nexport type JSONSchema = JSONSchemaType<any> | any;\n\nconst jsonSchemas = new WeakMap<z.ZodTypeAny, JSONSchema>();\nconst validators = new WeakMap<JSONSchema, ReturnType<typeof ajv.compile>>();\n\n/**\n * Wrapper object for various ways schema can be provided.\n */\nexport interface ProvidedSchema {\n  jsonSchema?: JSONSchema;\n  schema?: z.ZodTypeAny;\n}\n\n/**\n * Schema validation error.\n */\nexport class ValidationError extends GenkitError {\n  constructor({\n    data,\n    errors,\n    schema,\n  }: {\n    data: any;\n    errors: ValidationErrorDetail[];\n    schema: JSONSchema;\n  }) {\n    super({\n      status: 'INVALID_ARGUMENT',\n      message: `Schema validation failed. Parse Errors:\\n\\n${errors.map((e) => `- ${e.path}: ${e.message}`).join('\\n')}\\n\\nProvided data:\\n\\n${JSON.stringify(data, null, 2)}\\n\\nRequired JSON schema:\\n\\n${JSON.stringify(schema, null, 2)}`,\n      detail: { errors, schema },\n    });\n  }\n}\n\n/**\n * Converts a Zod schema into a JSON schema, utilizing an in-memory cache for known objects.\n * @param options Provide a json schema and/or zod schema. JSON schema has priority.\n * @returns A JSON schema.\n */\nexport function toJsonSchema({\n  jsonSchema,\n  schema,\n}: ProvidedSchema): JSONSchema | undefined {\n  // if neither jsonSchema or schema is present return undefined\n  if (!jsonSchema && !schema) return null;\n  if (jsonSchema) return jsonSchema;\n  if (jsonSchemas.has(schema!)) return jsonSchemas.get(schema!)!;\n  const outSchema = zodToJsonSchema(schema!, {\n    $refStrategy: 'none',\n    removeAdditionalStrategy: 'strict',\n  });\n  jsonSchemas.set(schema!, outSchema as JSONSchema);\n  return outSchema as JSONSchema;\n}\n\n/**\n * Schema validation error details.\n */\nexport interface ValidationErrorDetail {\n  path: string;\n  message: string;\n}\n\nfunction toErrorDetail(error: ErrorObject): ValidationErrorDetail {\n  return {\n    path: error.instancePath.substring(1).replace(/\\//g, '.') || '(root)',\n    message: error.message!,\n  };\n}\n\n/**\n * Validation response.\n */\nexport type ValidationResponse =\n  | { valid: true; errors: never }\n  | { valid: false; errors: ErrorObject[] };\n\n/**\n * Validates the provided data against the provided schema.\n */\nexport function validateSchema(\n  data: unknown,\n  options: ProvidedSchema\n): { valid: boolean; errors?: any[]; schema: JSONSchema } {\n  const toValidate = toJsonSchema(options);\n  if (!toValidate) {\n    return { valid: true, schema: toValidate };\n  }\n  const validator = validators.get(toValidate) || ajv.compile(toValidate);\n  const valid = validator(data) as boolean;\n  const errors = validator.errors?.map((e) => e);\n  return { valid, errors: errors?.map(toErrorDetail), schema: toValidate };\n}\n\n/**\n * Parses raw data object against the provided schema.\n */\nexport function parseSchema<T = unknown>(\n  data: unknown,\n  options: ProvidedSchema\n): T {\n  const { valid, errors, schema } = validateSchema(data, options);\n  if (!valid) throw new ValidationError({ data, errors: errors!, schema });\n  return data as T;\n}\n\n/**\n * Registers provided schema as a named schema object in the Genkit registry.\n *\n * @hidden\n */\nexport function defineSchema<T extends z.ZodTypeAny>(\n  registry: Registry,\n  name: string,\n  schema: T\n): T {\n  registry.registerSchema(name, { schema });\n  return schema;\n}\n\n/**\n * Registers provided JSON schema as a named schema object in the Genkit registry.\n *\n * @hidden\n */\nexport function defineJsonSchema(\n  registry: Registry,\n  name: string,\n  jsonSchema: JSONSchema\n) {\n  registry.registerSchema(name, { jsonSchema });\n  return jsonSchema;\n}\n", "export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const jsonDescription = (jsonSchema, def) => {\n    if (def.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(def.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    allowedAdditionalProperties: true,\n    rejectedAdditionalProperties: false,\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n    openAiAnyTypeName: \"OpenAiAnyType\"\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n", "import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        flags: { hasReferencedOpenAiAnyType: false },\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n", "export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n", "export const getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\n", "import { getRelativePath } from \"../getRelativePath.js\";\nexport function parseAnyDef(refs) {\n    if (refs.target !== \"openAi\") {\n        return {};\n    }\n    const anyDefinitionPath = [\n        ...refs.basePath,\n        refs.definitionPath,\n        refs.openAiAnyTypeName,\n    ];\n    refs.flags.hasReferencedOpenAiAnyType = true;\n    return {\n        $ref: refs.$refStrategy === \"relative\"\n            ? getRelativePath(anyDefinitionPath, refs.currentPath)\n            : anyDefinitionPath.join(\"/\"),\n    };\n}\n", "import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n", "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n", "export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n", "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n", "import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n", "import { parseDef } from \"../parseDef.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : parseAnyDef(refs);\n}\n", "export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\n", "import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n", "export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n", "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n", "import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? parseAnyDef(refs),\n            }), {}),\n            additionalProperties: refs.rejectedAdditionalProperties,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n", "import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || parseAnyDef(refs);\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || parseAnyDef(refs);\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n", "export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n", "import { parseAnyDef } from \"./any.js\";\nexport function parseNeverDef(refs) {\n    return refs.target === \"openAi\"\n        ? undefined\n        : {\n            not: parseAnyDef({\n                ...refs,\n                currentPath: [...refs.currentPath, \"not\"],\n            }),\n        };\n}\n", "export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n", "import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n", "import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        properties: {},\n    };\n    const required = [];\n    const shape = def.shape();\n    for (const propName in shape) {\n        let propDef = shape[propName];\n        if (propDef === undefined || propDef._def === undefined) {\n            continue;\n        }\n        let propOptional = safeIsOptional(propDef);\n        if (propOptional && forceOptionalIntoNullable) {\n            if (propDef._def.typeName === \"ZodOptional\") {\n                propDef = propDef._def.innerType;\n            }\n            if (!propDef.isNullable()) {\n                propDef = propDef.nullable();\n            }\n            propOptional = false;\n        }\n        const parsedDef = parseDef(propDef._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", propName],\n            propertyPath: [...refs.currentPath, \"properties\", propName],\n        });\n        if (parsedDef === undefined) {\n            continue;\n        }\n        result.properties[propName] = parsedDef;\n        if (!propOptional) {\n            required.push(propName);\n        }\n    }\n    if (required.length) {\n        result.required = required;\n    }\n    const additionalProperties = decideAdditionalProperties(def, refs);\n    if (additionalProperties !== undefined) {\n        result.additionalProperties = additionalProperties;\n    }\n    return result;\n}\nfunction decideAdditionalProperties(def, refs) {\n    if (def.catchall._def.typeName !== \"ZodNever\") {\n        return parseDef(def.catchall._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        });\n    }\n    switch (def.unknownKeys) {\n        case \"passthrough\":\n            return refs.allowedAdditionalProperties;\n        case \"strict\":\n            return refs.rejectedAdditionalProperties;\n        case \"strip\":\n            return refs.removeAdditionalStrategy === \"strict\"\n                ? refs.allowedAdditionalProperties\n                : refs.rejectedAdditionalProperties;\n    }\n}\nfunction safeIsOptional(schema) {\n    try {\n        return schema.isOptional();\n    }\n    catch {\n        return true;\n    }\n}\n", "import { parseDef } from \"../parseDef.js\";\nimport { parseAnyDef } from \"./any.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: parseAnyDef(refs),\n                },\n                innerSchema,\n            ],\n        }\n        : parseAnyDef(refs);\n};\n", "import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n", "import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n", "import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n", "import { parseAnyDef } from \"./any.js\";\nexport function parseUndefinedDef(refs) {\n    return {\n        not: parseAnyDef(refs),\n    };\n}\n", "import { parseAnyDef } from \"./any.js\";\nexport function parseUnknownDef(refs) {\n    return parseAnyDef(refs);\n}\n", "import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n", "import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nexport const selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef(refs);\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef(refs);\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef(refs);\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef(refs);\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\n", "import { ignoreOverride } from \"./Options.js\";\nimport { selectParser } from \"./selectParser.js\";\nimport { getRelativePath } from \"./getRelativePath.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchemaOrGetter = selectParser(def, def.typeName, refs);\n    // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n    const jsonSchema = typeof jsonSchemaOrGetter === \"function\"\n        ? parseDef(jsonSchemaOrGetter(), refs)\n        : jsonSchemaOrGetter;\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    if (refs.postProcess) {\n        const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n        newItem.jsonSchema = jsonSchema;\n        return postProcessResult;\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return parseAnyDef(refs);\n            }\n            return refs.$refStrategy === \"seen\" ? parseAnyDef(refs) : undefined;\n        }\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n", "import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    let definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? parseAnyDef(refs),\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? parseAnyDef(refs);\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    if (refs.flags.hasReferencedOpenAiAnyType) {\n        if (!definitions) {\n            definitions = {};\n        }\n        if (!definitions[refs.openAiAnyTypeName]) {\n            definitions[refs.openAiAnyTypeName] = {\n                // Skipping \"object\" as no properties can be defined and additionalProperties must be \"false\"\n                type: [\"string\", \"number\", \"integer\", \"boolean\", \"array\", \"null\"],\n                items: {\n                    $ref: refs.$refStrategy === \"relative\"\n                        ? \"1\"\n                        : [\n                            ...refs.basePath,\n                            refs.definitionPath,\n                            refs.openAiAnyTypeName,\n                        ].join(\"/\"),\n                },\n            };\n        }\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n", "export * from \"./Options.js\";\nexport * from \"./Refs.js\";\nexport * from \"./errorMessages.js\";\nexport * from \"./getRelativePath.js\";\nexport * from \"./parseDef.js\";\nexport * from \"./parseTypes.js\";\nexport * from \"./parsers/any.js\";\nexport * from \"./parsers/array.js\";\nexport * from \"./parsers/bigint.js\";\nexport * from \"./parsers/boolean.js\";\nexport * from \"./parsers/branded.js\";\nexport * from \"./parsers/catch.js\";\nexport * from \"./parsers/date.js\";\nexport * from \"./parsers/default.js\";\nexport * from \"./parsers/effects.js\";\nexport * from \"./parsers/enum.js\";\nexport * from \"./parsers/intersection.js\";\nexport * from \"./parsers/literal.js\";\nexport * from \"./parsers/map.js\";\nexport * from \"./parsers/nativeEnum.js\";\nexport * from \"./parsers/never.js\";\nexport * from \"./parsers/null.js\";\nexport * from \"./parsers/nullable.js\";\nexport * from \"./parsers/number.js\";\nexport * from \"./parsers/object.js\";\nexport * from \"./parsers/optional.js\";\nexport * from \"./parsers/pipeline.js\";\nexport * from \"./parsers/promise.js\";\nexport * from \"./parsers/readonly.js\";\nexport * from \"./parsers/record.js\";\nexport * from \"./parsers/set.js\";\nexport * from \"./parsers/string.js\";\nexport * from \"./parsers/tuple.js\";\nexport * from \"./parsers/undefined.js\";\nexport * from \"./parsers/union.js\";\nexport * from \"./parsers/unknown.js\";\nexport * from \"./selectParser.js\";\nexport * from \"./zodToJsonSchema.js\";\nimport { zodToJsonSchema } from \"./zodToJsonSchema.js\";\nexport default zodToJsonSchema;\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  action,\n  defineAction,\n  z,\n  type Action,\n  type ActionFnArg,\n  type ActionMetadata,\n  type ActionParams,\n} from '@genkit-ai/core';\nimport type { Registry } from '@genkit-ai/core/registry';\nimport { toJsonSchema } from '@genkit-ai/core/schema';\nimport { Document, DocumentDataSchema, type DocumentData } from './document.js';\n\n/**\n * A batch (array) of embeddings.\n */\nexport type EmbeddingBatch = { embedding: number[] }[];\n\n/**\n * EmbeddingSchema includes the embedding and also metadata so you know\n * which of multiple embeddings corresponds to which part of a document.\n */\nexport const EmbeddingSchema = z.object({\n  embedding: z.array(z.number()),\n  metadata: z.record(z.string(), z.unknown()).optional(),\n});\nexport type Embedding = z.infer<typeof EmbeddingSchema>;\n\n/**\n * A function used for embedder definition, encapsulates embedder implementation.\n */\nexport type EmbedderFn<EmbedderOptions extends z.ZodTypeAny> = (\n  input: Document[],\n  embedderOpts?: z.infer<EmbedderOptions>\n) => Promise<EmbedResponse>;\n\n/**\n * Zod schema of an embed request.\n */\nconst EmbedRequestSchema = z.object({\n  input: z.array(DocumentDataSchema),\n  options: z.any().optional(),\n});\n\nexport interface EmbedRequest<O = any> {\n  input: Document[];\n  options?: O;\n}\n\n/**\n * Zod schema of an embed response.\n */\nconst EmbedResponseSchema = z.object({\n  embeddings: z.array(EmbeddingSchema),\n  // TODO: stats, etc.\n});\ntype EmbedResponse = z.infer<typeof EmbedResponseSchema>;\n\n/**\n * Embedder action -- a subtype of {@link Action} with input/output types for embedders.\n */\nexport type EmbedderAction<CustomOptions extends z.ZodTypeAny = z.ZodTypeAny> =\n  Action<typeof EmbedRequestSchema, typeof EmbedResponseSchema> & {\n    __configSchema?: CustomOptions;\n  };\n\n/**\n * Options of an `embed` function.\n */\nexport interface EmbedderParams<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  embedder: EmbedderArgument<CustomOptions>;\n  content: string | DocumentData;\n  metadata?: Record<string, unknown>;\n  options?: z.infer<CustomOptions>;\n}\n\nfunction withMetadata<CustomOptions extends z.ZodTypeAny>(\n  embedder: Action<typeof EmbedRequestSchema, typeof EmbedResponseSchema>,\n  configSchema?: CustomOptions\n): EmbedderAction<CustomOptions> {\n  const withMeta = embedder as EmbedderAction<CustomOptions>;\n  withMeta.__configSchema = configSchema;\n  return withMeta;\n}\n\nexport interface EmbedderOptions<ConfigSchema extends z.ZodTypeAny> {\n  name: string;\n  configSchema?: ConfigSchema;\n  info?: EmbedderInfo;\n}\n\n/**\n * Creates embedder model for the provided {@link EmbedderFn} model implementation.\n *\n * Unlike `defineEmbedder` this function does not register the embedder in the reigistry.\n */\nexport function embedder<ConfigSchema extends z.ZodTypeAny = z.ZodTypeAny>(\n  options: EmbedderOptions<ConfigSchema>,\n  runner: (\n    input: EmbedRequest<z.infer<ConfigSchema>>,\n    opts: ActionFnArg<any>\n  ) => Promise<EmbedResponse>\n) {\n  const embedder = action(embedderActionOptions(options), (i, opts) =>\n    runner(\n      {\n        input: i.input.map((dd) => new Document(dd)),\n        options: i.options,\n      },\n      opts\n    )\n  );\n  const ewm = withMetadata(\n    embedder as Action<typeof EmbedRequestSchema, typeof EmbedResponseSchema>,\n    options.configSchema\n  );\n  return ewm;\n}\n\nfunction embedderActionOptions<\n  ConfigSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: EmbedderOptions<ConfigSchema>\n): ActionParams<typeof EmbedRequestSchema, typeof EmbedResponseSchema> {\n  return {\n    actionType: 'embedder',\n    name: options.name,\n    inputSchema: EmbedRequestSchema,\n    outputSchema: EmbedResponseSchema,\n    metadata: {\n      type: 'embedder',\n      info: options.info,\n      embedder: {\n        customOptions: options.configSchema\n          ? toJsonSchema({ schema: options.configSchema })\n          : undefined,\n      },\n    },\n  };\n}\n\n/**\n * Creates embedder model for the provided {@link EmbedderFn} model implementation.\n */\nexport function defineEmbedder<\n  ConfigSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  options: EmbedderOptions<ConfigSchema>,\n  runner: EmbedderFn<ConfigSchema>\n) {\n  const embedder = defineAction(registry, embedderActionOptions(options), (i) =>\n    runner(\n      i.input.map((dd) => new Document(dd)),\n      i.options\n    )\n  );\n  const ewm = withMetadata(\n    embedder as Action<typeof EmbedRequestSchema, typeof EmbedResponseSchema>,\n    options.configSchema\n  );\n  return ewm;\n}\n\n/**\n * A union type representing all the types that can refer to an embedder.\n */\nexport type EmbedderArgument<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> = string | EmbedderAction<CustomOptions> | EmbedderReference<CustomOptions>;\n\n/**\n * A veneer for interacting with embedder models.\n */\nexport async function embed<CustomOptions extends z.ZodTypeAny = z.ZodTypeAny>(\n  registry: Registry,\n  params: EmbedderParams<CustomOptions>\n): Promise<Embedding[]> {\n  const embedder = await resolveEmbedder(registry, params);\n  if (!embedder.embedderAction) {\n    let embedderId: string;\n    if (typeof params.embedder === 'string') {\n      embedderId = params.embedder;\n    } else if ((params.embedder as EmbedderAction)?.__action?.name) {\n      embedderId = (params.embedder as EmbedderAction).__action.name;\n    } else {\n      embedderId = (params.embedder as EmbedderReference<any>).name;\n    }\n    throw new Error(`Unable to resolve embedder ${embedderId}`);\n  }\n  const response = await embedder.embedderAction({\n    input:\n      typeof params.content === 'string'\n        ? [Document.fromText(params.content, params.metadata)]\n        : [params.content],\n    options: {\n      version: embedder.version,\n      ...embedder.config,\n      ...params.options,\n    },\n  });\n  return response.embeddings;\n}\n\ninterface ResolvedEmbedder<CustomOptions extends z.ZodTypeAny = z.ZodTypeAny> {\n  embedderAction: EmbedderAction<CustomOptions>;\n  config?: z.infer<CustomOptions>;\n  version?: string;\n}\n\nasync function resolveEmbedder<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  params: EmbedderParams<CustomOptions>\n): Promise<ResolvedEmbedder<CustomOptions>> {\n  if (typeof params.embedder === 'string') {\n    return {\n      embedderAction: await registry.lookupAction(\n        `/embedder/${params.embedder}`\n      ),\n    };\n  } else if (Object.hasOwnProperty.call(params.embedder, '__action')) {\n    return {\n      embedderAction: params.embedder as EmbedderAction<CustomOptions>,\n    };\n  } else if (Object.hasOwnProperty.call(params.embedder, 'name')) {\n    const ref = params.embedder as EmbedderReference<any>;\n    return {\n      embedderAction: await registry.lookupAction(\n        `/embedder/${(params.embedder as EmbedderReference).name}`\n      ),\n      config: {\n        ...ref.config,\n      },\n      version: ref.version,\n    };\n  }\n  throw new Error(`failed to resolve embedder ${params.embedder}`);\n}\n\n/**\n * A veneer for interacting with embedder models in bulk.\n */\nexport async function embedMany<\n  ConfigSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  params: {\n    embedder: EmbedderArgument<ConfigSchema>;\n    content: string[] | DocumentData[];\n    metadata?: Record<string, unknown>;\n    options?: z.infer<ConfigSchema>;\n  }\n): Promise<EmbeddingBatch> {\n  let embedder: EmbedderAction<ConfigSchema>;\n  if (typeof params.embedder === 'string') {\n    embedder = await registry.lookupAction(`/embedder/${params.embedder}`);\n  } else if (Object.hasOwnProperty.call(params.embedder, 'info')) {\n    embedder = await registry.lookupAction(\n      `/embedder/${(params.embedder as EmbedderReference).name}`\n    );\n  } else {\n    embedder = params.embedder as EmbedderAction<ConfigSchema>;\n  }\n  if (!embedder) {\n    throw new Error('Unable to utilize the provided embedder');\n  }\n  const response = await embedder({\n    input: params.content.map((i) =>\n      typeof i === 'string' ? Document.fromText(i, params.metadata) : i\n    ),\n    options: params.options,\n  });\n  return response.embeddings;\n}\n\n/**\n * Zod schema of embedder info object.\n */\nexport const EmbedderInfoSchema = z.object({\n  /** Friendly label for this model (e.g. \"Google AI - Gemini Pro\") */\n  label: z.string().optional(),\n  /** Supported model capabilities. */\n  supports: z\n    .object({\n      /** Model can input this type of data. */\n      input: z.array(z.enum(['text', 'image', 'video'])).optional(),\n      /** Model can support multiple languages */\n      multilingual: z.boolean().optional(),\n    })\n    .optional(),\n  /** Embedding dimension */\n  dimensions: z.number().optional(),\n});\nexport type EmbedderInfo = z.infer<typeof EmbedderInfoSchema>;\n\n/**\n * A reference object that can used to resolve an embedder instance. Include additional type information\n * about the specific embedder, e.g. custom config options schema.\n */\nexport interface EmbedderReference<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  name: string;\n  configSchema?: CustomOptions;\n  info?: EmbedderInfo;\n  config?: z.infer<CustomOptions>;\n  version?: string;\n}\n\n/**\n * Helper method to configure a {@link EmbedderReference} to a plugin.\n */\nexport function embedderRef<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: EmbedderReference<CustomOptionsSchema> & {\n    namespace?: string;\n  }\n): EmbedderReference<CustomOptionsSchema> {\n  let name = options.name;\n  if (options.namespace && !name.startsWith(options.namespace + '/')) {\n    name = `${options.namespace}/${name}`;\n  }\n  return { ...options, name };\n}\n\n/**\n * Packages embedder information into ActionMetadata object.\n */\nexport function embedderActionMetadata({\n  name,\n  info,\n  configSchema,\n}: {\n  name: string;\n  info?: EmbedderInfo;\n  configSchema?: z.ZodTypeAny;\n}): ActionMetadata {\n  return {\n    actionType: 'embedder',\n    name: name,\n    inputJsonSchema: toJsonSchema({ schema: EmbedRequestSchema }),\n    outputJsonSchema: toJsonSchema({ schema: EmbedResponseSchema }),\n    metadata: {\n      embedder: {\n        ...info,\n        customOptions: configSchema\n          ? toJsonSchema({ schema: configSchema })\n          : undefined,\n      },\n    },\n  } as ActionMetadata;\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenkitError } from './error.js';\nimport { logger } from './logging.js';\nimport type { TelemetryConfig } from './telemetryTypes.js';\n\nexport * from './tracing/exporter.js';\nexport * from './tracing/instrumentation.js';\nexport * from './tracing/types.js';\n\nconst instrumentationKey = '__GENKIT_TELEMETRY_INSTRUMENTED';\nconst telemetryProviderKey = '__GENKIT_TELEMETRY_PROVIDER';\n\n/**\n * @hidden\n */\nexport async function ensureBasicTelemetryInstrumentation() {\n  await checkFirebaseMonitoringAutoInit();\n\n  if (global[instrumentationKey]) {\n    return await global[instrumentationKey];\n  }\n\n  await enableTelemetry({});\n}\n\n/**\n * Checks to see if the customer is using Firebase Genkit Monitoring\n * auto initialization via environment variable by attempting to resolve\n * the firebase plugin.\n *\n * Enables Firebase Genkit Monitoring if the plugin is installed and warns\n * if it hasn't been installed.\n */\nasync function checkFirebaseMonitoringAutoInit() {\n  if (\n    !global[instrumentationKey] &&\n    process.env.ENABLE_FIREBASE_MONITORING === 'true'\n  ) {\n    try {\n      const importModule = new Function(\n        'moduleName',\n        'return import(moduleName)'\n      );\n      const firebaseModule = await importModule('@genkit-ai/firebase');\n\n      firebaseModule.enableFirebaseTelemetry();\n    } catch (e) {\n      logger.warn(\n        \"It looks like you're trying to enable firebase monitoring, but \" +\n          \"haven't installed the firebase plugin. Please run \" +\n          '`npm i --save @genkit-ai/firebase` and redeploy.'\n      );\n    }\n  }\n}\n\nexport interface TelemetryProvider {\n  enableTelemetry(\n    telemetryConfig: TelemetryConfig | Promise<TelemetryConfig>\n  ): Promise<void>;\n  flushTracing(): Promise<void>;\n}\n\nfunction getTelemetryProvider(): TelemetryProvider {\n  if (global[telemetryProviderKey]) {\n    return global[telemetryProviderKey];\n  }\n  throw new GenkitError({\n    status: 'FAILED_PRECONDITION',\n    message: 'TelemetryProvider is not initialized.',\n  });\n}\nexport function setTelemetryProvider(provider: TelemetryProvider) {\n  if (global[telemetryProviderKey]) return;\n  global[telemetryProviderKey] = provider;\n}\n\n/**\n * Enables tracing and metrics open telemetry configuration.\n */\nexport async function enableTelemetry(\n  telemetryConfig: TelemetryConfig | Promise<TelemetryConfig>\n) {\n  global[instrumentationKey] =\n    telemetryConfig instanceof Promise ? telemetryConfig : Promise.resolve();\n  return getTelemetryProvider().enableTelemetry(telemetryConfig);\n}\n\n/**\n * Flushes all configured span processors.\n *\n * @hidden\n */\nexport async function flushTracing() {\n  return getTelemetryProvider().flushTracing();\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { action, z, type Action } from '@genkit-ai/core';\nimport { logger } from '@genkit-ai/core/logging';\nimport type { Registry } from '@genkit-ai/core/registry';\nimport { toJsonSchema } from '@genkit-ai/core/schema';\nimport { SPAN_TYPE_ATTR, runInNewSpan } from '@genkit-ai/core/tracing';\nimport { randomUUID } from 'crypto';\n\nexport const ATTR_PREFIX = 'genkit';\nexport const SPAN_STATE_ATTR = ATTR_PREFIX + ':state';\n\nexport const BaseDataPointSchema = z.object({\n  input: z.unknown(),\n  output: z.unknown().optional(),\n  context: z.array(z.unknown()).optional(),\n  reference: z.unknown().optional(),\n  testCaseId: z.string().optional(),\n  traceIds: z.array(z.string()).optional(),\n});\n\n// DataPoint that is to be used for actions. This needs testCaseId to be present.\nexport const BaseEvalDataPointSchema = BaseDataPointSchema.extend({\n  testCaseId: z.string(),\n});\nexport type BaseEvalDataPoint = z.infer<typeof BaseEvalDataPointSchema>;\n\nconst EvalStatusEnumSchema = z.enum(['UNKNOWN', 'PASS', 'FAIL']);\n\n/** Enum that indicates if an evaluation has passed or failed */\nexport enum EvalStatusEnum {\n  UNKNOWN = 'UNKNOWN',\n  PASS = 'PASS',\n  FAIL = 'FAIL',\n}\n\nexport const ScoreSchema = z.object({\n  id: z\n    .string()\n    .describe(\n      'Optional ID to differentiate different scores if applying in a single evaluation'\n    )\n    .optional(),\n  score: z.union([z.number(), z.string(), z.boolean()]).optional(),\n  status: EvalStatusEnumSchema.optional(),\n  error: z.string().optional(),\n  details: z\n    .object({\n      reasoning: z.string().optional(),\n    })\n    .passthrough()\n    .optional(),\n});\n\n// Update genkit-tools/src/utils/evals.ts if you change this value\nexport const EVALUATOR_METADATA_KEY_DISPLAY_NAME = 'evaluatorDisplayName';\nexport const EVALUATOR_METADATA_KEY_DEFINITION = 'evaluatorDefinition';\nexport const EVALUATOR_METADATA_KEY_IS_BILLED = 'evaluatorIsBilled';\n\nexport type Score = z.infer<typeof ScoreSchema>;\nexport type BaseDataPoint = z.infer<typeof BaseDataPointSchema>;\nexport type Dataset<\n  DataPoint extends typeof BaseDataPointSchema = typeof BaseDataPointSchema,\n> = Array<z.infer<DataPoint>>;\n\nexport const EvalResponseSchema = z.object({\n  sampleIndex: z.number().optional(),\n  testCaseId: z.string(),\n  traceId: z.string().optional(),\n  spanId: z.string().optional(),\n  evaluation: z.union([ScoreSchema, z.array(ScoreSchema)]),\n});\nexport type EvalResponse = z.infer<typeof EvalResponseSchema>;\n\nexport const EvalResponsesSchema = z.array(EvalResponseSchema);\nexport type EvalResponses = z.infer<typeof EvalResponsesSchema>;\n\nexport type EvaluatorFn<\n  EvalDataPoint extends\n    typeof BaseEvalDataPointSchema = typeof BaseEvalDataPointSchema,\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> = (\n  input: z.infer<EvalDataPoint>,\n  evaluatorOptions?: z.infer<CustomOptions>\n) => Promise<EvalResponse>;\n\nexport type EvaluatorAction<\n  DataPoint extends typeof BaseDataPointSchema = typeof BaseDataPointSchema,\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> = Action<typeof EvalRequestSchema, typeof EvalResponsesSchema> & {\n  __dataPointType?: DataPoint;\n  __configSchema?: CustomOptions;\n};\n\nfunction withMetadata<\n  DataPoint extends typeof BaseDataPointSchema = typeof BaseDataPointSchema,\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  evaluator: Action<typeof EvalRequestSchema, typeof EvalResponsesSchema>,\n  dataPointType?: DataPoint,\n  configSchema?: CustomOptions\n): EvaluatorAction<DataPoint, CustomOptions> {\n  const withMeta = evaluator as EvaluatorAction<DataPoint, CustomOptions>;\n  withMeta.__dataPointType = dataPointType;\n  withMeta.__configSchema = configSchema;\n  return withMeta;\n}\n\nconst EvalRequestSchema = z.object({\n  dataset: z.array(BaseDataPointSchema),\n  evalRunId: z.string(),\n  options: z.unknown(),\n});\n\nexport interface EvaluatorParams<\n  DataPoint extends typeof BaseDataPointSchema = typeof BaseDataPointSchema,\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  evaluator: EvaluatorArgument<DataPoint, CustomOptions>;\n  dataset: Dataset<DataPoint>;\n  evalRunId?: string;\n  options?: z.infer<CustomOptions>;\n}\n\nexport interface EvaluatorOptions<\n  DataPoint extends typeof BaseDataPointSchema,\n  EvaluatorOpts extends z.ZodTypeAny,\n> {\n  name: string;\n  displayName: string;\n  definition: string;\n  dataPointType?: DataPoint;\n  configSchema?: EvaluatorOpts;\n  isBilled?: boolean;\n}\n\n/**\n * Creates evaluator action for the provided {@link EvaluatorFn} implementation.\n */\nexport function defineEvaluator<\n  DataPoint extends typeof BaseDataPointSchema = typeof BaseDataPointSchema,\n  EvalDataPoint extends\n    typeof BaseEvalDataPointSchema = typeof BaseEvalDataPointSchema,\n  EvaluatorOpts extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  options: EvaluatorOptions<DataPoint, EvaluatorOpts>,\n  runner: EvaluatorFn<EvalDataPoint, EvaluatorOpts>\n): EvaluatorAction {\n  const e = evaluator(options, runner);\n\n  registry.registerAction('evaluator', e);\n\n  return e;\n}\n\n/**\n * Creates evaluator action for the provided {@link EvaluatorFn} implementation.\n */\nexport function evaluator<\n  DataPoint extends typeof BaseDataPointSchema = typeof BaseDataPointSchema,\n  EvalDataPoint extends\n    typeof BaseEvalDataPointSchema = typeof BaseEvalDataPointSchema,\n  EvaluatorOpts extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: EvaluatorOptions<DataPoint, EvaluatorOpts>,\n  runner: EvaluatorFn<EvalDataPoint, EvaluatorOpts>\n): EvaluatorAction {\n  const evalMetadata = {};\n  evalMetadata[EVALUATOR_METADATA_KEY_IS_BILLED] =\n    options.isBilled == undefined ? true : options.isBilled;\n  evalMetadata[EVALUATOR_METADATA_KEY_DISPLAY_NAME] = options.displayName;\n  evalMetadata[EVALUATOR_METADATA_KEY_DEFINITION] = options.definition;\n  if (options.configSchema) {\n    evalMetadata['customOptions'] = toJsonSchema({\n      schema: options.configSchema,\n    });\n  }\n  const evaluator = action(\n    {\n      actionType: 'evaluator',\n      name: options.name,\n      inputSchema: EvalRequestSchema.extend({\n        dataset: options.dataPointType\n          ? z.array(options.dataPointType)\n          : z.array(BaseDataPointSchema),\n        options: options.configSchema ?? z.unknown(),\n        evalRunId: z.string(),\n        batchSize: z.number().optional(),\n      }),\n      outputSchema: EvalResponsesSchema,\n      metadata: {\n        type: 'evaluator',\n        evaluator: evalMetadata,\n      },\n    },\n    async (i) => {\n      const evalResponses: EvalResponses = [];\n      // This also populates missing testCaseIds\n      const batches = getBatchedArray(i.dataset, i.batchSize);\n\n      for (let batchIndex = 0; batchIndex < batches.length; batchIndex++) {\n        const batch = batches[batchIndex];\n        try {\n          await runInNewSpan(\n            {\n              metadata: {\n                name: i.batchSize\n                  ? `Batch ${batchIndex}`\n                  : `Test Case ${batch[0].testCaseId}`,\n                metadata: { 'evaluator:evalRunId': i.evalRunId },\n              },\n              labels: {\n                [SPAN_TYPE_ATTR]: 'evaluator',\n              },\n            },\n            async (metadata, otSpan) => {\n              const spanId = otSpan.spanContext().spanId;\n              const traceId = otSpan.spanContext().traceId;\n              const evalRunPromises = batch.map((d, index) => {\n                const sampleIndex = i.batchSize\n                  ? i.batchSize * batchIndex + index\n                  : batchIndex;\n                const datapoint = d as BaseEvalDataPoint;\n                metadata.input = {\n                  input: datapoint.input,\n                  output: datapoint.output,\n                  context: datapoint.context,\n                };\n                const evalOutputPromise = runner(datapoint, i.options)\n                  .then((result) => ({\n                    ...result,\n                    traceId,\n                    spanId,\n                    sampleIndex,\n                  }))\n                  .catch((error) => {\n                    return {\n                      sampleIndex,\n                      spanId,\n                      traceId,\n                      testCaseId: datapoint.testCaseId,\n                      evaluation: {\n                        error: `Evaluation of test case ${datapoint.testCaseId} failed: \\n${error}`,\n                      },\n                    };\n                  });\n                return evalOutputPromise;\n              });\n\n              const allResults = await Promise.all(evalRunPromises);\n              metadata.output =\n                allResults.length === 1 ? allResults[0] : allResults;\n              allResults.map((result) => {\n                evalResponses.push(result);\n              });\n            }\n          );\n        } catch (e) {\n          logger.error(\n            `Evaluation of batch ${batchIndex} failed: \\n${(e as Error).stack}`\n          );\n          continue;\n        }\n      }\n      return evalResponses;\n    }\n  );\n  const ewm = withMetadata(\n    evaluator as any as Action<\n      typeof EvalRequestSchema,\n      typeof EvalResponsesSchema\n    >,\n    options.dataPointType,\n    options.configSchema\n  );\n  return ewm;\n}\n\nexport type EvaluatorArgument<\n  DataPoint extends typeof BaseDataPointSchema = typeof BaseDataPointSchema,\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> =\n  | string\n  | EvaluatorAction<DataPoint, CustomOptions>\n  | EvaluatorReference<CustomOptions>;\n\n/**\n * A veneer for interacting with evaluators.\n */\nexport async function evaluate<\n  DataPoint extends typeof BaseDataPointSchema = typeof BaseDataPointSchema,\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  params: EvaluatorParams<DataPoint, CustomOptions>\n): Promise<EvalResponses> {\n  let evaluator: EvaluatorAction<DataPoint, CustomOptions>;\n  if (typeof params.evaluator === 'string') {\n    evaluator = await registry.lookupAction(`/evaluator/${params.evaluator}`);\n  } else if (Object.hasOwnProperty.call(params.evaluator, 'info')) {\n    evaluator = await registry.lookupAction(\n      `/evaluator/${params.evaluator.name}`\n    );\n  } else {\n    evaluator = params.evaluator as EvaluatorAction<DataPoint, CustomOptions>;\n  }\n  if (!evaluator) {\n    throw new Error('Unable to utilize the provided evaluator');\n  }\n  return (await evaluator({\n    dataset: params.dataset,\n    options: params.options,\n    evalRunId: params.evalRunId ?? randomUUID(),\n  })) as EvalResponses;\n}\n\nexport const EvaluatorInfoSchema = z.object({\n  /** Friendly label for this evaluator */\n  label: z.string().optional(),\n  metrics: z.array(z.string()),\n});\nexport type EvaluatorInfo = z.infer<typeof EvaluatorInfoSchema>;\n\nexport interface EvaluatorReference<CustomOptions extends z.ZodTypeAny> {\n  name: string;\n  configSchema?: CustomOptions;\n  info?: EvaluatorInfo;\n}\n\n/**\n * Helper method to configure a {@link EvaluatorReference} to a plugin.\n */\nexport function evaluatorRef<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: EvaluatorReference<CustomOptionsSchema>\n): EvaluatorReference<CustomOptionsSchema> {\n  return { ...options };\n}\n\n/**\n * Helper method to generated batched array. Also ensures each testCase has a\n * testCaseId\n */\nfunction getBatchedArray<T extends { testCaseId?: string }>(\n  arr: T[],\n  batchSize?: number\n): T[][] {\n  let size: number;\n  if (!batchSize) {\n    size = 1;\n  } else {\n    size = batchSize;\n  }\n\n  const batches: T[][] = [];\n  for (var i = 0; i < arr.length; i += size) {\n    batches.push(\n      arr.slice(i, i + size).map((d) => ({\n        ...d,\n        testCaseId: d.testCaseId ?? randomUUID(),\n      }))\n    );\n  }\n\n  return batches;\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { action, z, type Action } from '@genkit-ai/core';\nimport type { Registry } from '@genkit-ai/core/registry';\nimport { toJsonSchema } from '@genkit-ai/core/schema';\nimport { PartSchema, type Part } from './document.js';\nimport {\n  Document,\n  DocumentDataSchema,\n  type DocumentData,\n} from './retriever.js';\n\nexport type RerankerFn<RerankerOptions extends z.ZodTypeAny> = (\n  query: Document,\n  documents: Document[],\n  queryOpts: z.infer<RerankerOptions>\n) => Promise<RerankerResponse>;\n\n/**\n * Zod schema for a reranked document metadata.\n */\nexport const RankedDocumentMetadataSchema = z\n  .object({\n    score: z.number(), // Enforces that 'score' must be a number\n  })\n  .passthrough(); // Allows other properties in 'metadata' with any type\n\nexport const RankedDocumentDataSchema = z.object({\n  content: z.array(PartSchema),\n  metadata: RankedDocumentMetadataSchema,\n});\n\nexport type RankedDocumentData = z.infer<typeof RankedDocumentDataSchema>;\n\nexport class RankedDocument extends Document implements RankedDocumentData {\n  content: Part[];\n  metadata: { score: number } & Record<string, any>;\n\n  constructor(data: RankedDocumentData) {\n    super(data);\n    this.content = data.content;\n    this.metadata = data.metadata;\n  }\n  /**\n   * Returns the score of the document.\n   * @returns The score of the document.\n   */\n  score(): number {\n    return this.metadata.score;\n  }\n}\n\nconst RerankerRequestSchema = z.object({\n  query: DocumentDataSchema,\n  documents: z.array(DocumentDataSchema),\n  options: z.any().optional(),\n});\n\nconst RerankerResponseSchema = z.object({\n  documents: z.array(RankedDocumentDataSchema),\n});\ntype RerankerResponse = z.infer<typeof RerankerResponseSchema>;\n\nexport const RerankerInfoSchema = z.object({\n  label: z.string().optional(),\n  /** Supported model capabilities. */\n  supports: z\n    .object({\n      /** Model can process media as part of the prompt (multimodal input). */\n      media: z.boolean().optional(),\n    })\n    .optional(),\n});\nexport type RerankerInfo = z.infer<typeof RerankerInfoSchema>;\n\nexport type RerankerAction<CustomOptions extends z.ZodTypeAny = z.ZodTypeAny> =\n  Action<typeof RerankerRequestSchema, typeof RerankerResponseSchema> & {\n    __configSchema?: CustomOptions;\n  };\n\nfunction rerankerWithMetadata<\n  RerankerOptions extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  reranker: Action<typeof RerankerRequestSchema, typeof RerankerResponseSchema>,\n  configSchema?: RerankerOptions\n): RerankerAction<RerankerOptions> {\n  const withMeta = reranker as RerankerAction<RerankerOptions>;\n  withMeta.__configSchema = configSchema;\n  return withMeta;\n}\n\n/**\n *  Creates a reranker action for the provided {@link RerankerFn} implementation and registers it in the registry.\n */\nexport function defineReranker<OptionsType extends z.ZodTypeAny = z.ZodTypeAny>(\n  registry: Registry,\n  options: {\n    name: string;\n    configSchema?: OptionsType;\n    info?: RerankerInfo;\n  },\n  runner: RerankerFn<OptionsType>\n): RerankerAction<OptionsType> {\n  const act = reranker(options, runner);\n\n  registry.registerAction('reranker', act);\n\n  return act;\n}\n\n/**\n *  Creates a reranker action for the provided {@link RerankerFn} implementation.\n */\nexport function reranker<OptionsType extends z.ZodTypeAny = z.ZodTypeAny>(\n  options: {\n    name: string;\n    configSchema?: OptionsType;\n    info?: RerankerInfo;\n  },\n  runner: RerankerFn<OptionsType>\n): RerankerAction<OptionsType> {\n  const reranker = action(\n    {\n      actionType: 'reranker',\n      name: options.name,\n      inputSchema: options.configSchema\n        ? RerankerRequestSchema.extend({\n            options: options.configSchema.optional(),\n          })\n        : RerankerRequestSchema,\n      outputSchema: RerankerResponseSchema,\n      metadata: {\n        type: 'reranker',\n        info: options.info,\n        reranker: {\n          customOptions: options.configSchema\n            ? toJsonSchema({ schema: options.configSchema })\n            : undefined,\n        },\n      },\n    },\n    (i) =>\n      runner(\n        new Document(i.query),\n        i.documents.map((d) => new Document(d)),\n        i.options\n      )\n  );\n  const rwm = rerankerWithMetadata(\n    reranker as Action<\n      typeof RerankerRequestSchema,\n      typeof RerankerResponseSchema\n    >,\n    options.configSchema\n  );\n  return rwm;\n}\n\nexport interface RerankerParams<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  reranker: RerankerArgument<CustomOptions>;\n  query: string | DocumentData;\n  documents: DocumentData[];\n  options?: z.infer<CustomOptions>;\n}\n\nexport type RerankerArgument<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> = RerankerAction<CustomOptions> | RerankerReference<CustomOptions> | string;\n\n/**\n * Reranks documents from a {@link RerankerArgument} based on the provided query.\n */\nexport async function rerank<CustomOptions extends z.ZodTypeAny>(\n  registry: Registry,\n  params: RerankerParams<CustomOptions>\n): Promise<Array<RankedDocument>> {\n  let reranker: RerankerAction<CustomOptions>;\n  if (typeof params.reranker === 'string') {\n    reranker = await registry.lookupAction(`/reranker/${params.reranker}`);\n  } else if (Object.hasOwnProperty.call(params.reranker, 'info')) {\n    reranker = await registry.lookupAction(`/reranker/${params.reranker.name}`);\n  } else {\n    reranker = params.reranker as RerankerAction<CustomOptions>;\n  }\n  if (!reranker) {\n    throw new Error('Unable to resolve the reranker');\n  }\n  const response = await reranker({\n    query:\n      typeof params.query === 'string'\n        ? Document.fromText(params.query)\n        : params.query,\n    documents: params.documents,\n    options: params.options,\n  });\n\n  return response.documents.map((d) => new RankedDocument(d));\n}\n\nexport const CommonRerankerOptionsSchema = z.object({\n  k: z.number().describe('Number of documents to rerank').optional(),\n});\n\nexport interface RerankerReference<CustomOptions extends z.ZodTypeAny> {\n  name: string;\n  configSchema?: CustomOptions;\n  info?: RerankerInfo;\n}\n\n/**\n * Helper method to configure a {@link RerankerReference} to a plugin.\n */\nexport function rerankerRef<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: RerankerReference<CustomOptionsSchema>\n): RerankerReference<CustomOptionsSchema> {\n  return { ...options };\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenkitError, action, z, type Action } from '@genkit-ai/core';\nimport type { Registry } from '@genkit-ai/core/registry';\nimport { toJsonSchema } from '@genkit-ai/core/schema';\nimport { Document, DocumentDataSchema, type DocumentData } from './document.js';\nimport type { EmbedderInfo } from './embedder.js';\n\nexport {\n  Document,\n  DocumentDataSchema,\n  type DocumentData,\n  type MediaPart,\n  type Part,\n  type TextPart,\n} from './document.js';\n\n/**\n * Retriever implementation function signature.\n */\nexport type RetrieverFn<RetrieverOptions extends z.ZodTypeAny> = (\n  query: Document,\n  queryOpts: z.infer<RetrieverOptions>\n) => Promise<RetrieverResponse>;\n\n/**\n * Indexer implementation function signature.\n */\nexport type IndexerFn<IndexerOptions extends z.ZodTypeAny> = (\n  docs: Array<Document>,\n  indexerOpts: z.infer<IndexerOptions>\n) => Promise<void>;\n\nconst RetrieverRequestSchema = z.object({\n  query: DocumentDataSchema,\n  options: z.any().optional(),\n});\n\nconst RetrieverResponseSchema = z.object({\n  documents: z.array(DocumentDataSchema),\n  // TODO: stats, etc.\n});\ntype RetrieverResponse = z.infer<typeof RetrieverResponseSchema>;\n\nconst IndexerRequestSchema = z.object({\n  documents: z.array(DocumentDataSchema),\n  options: z.any().optional(),\n});\n\n/**\n * Zod schema of retriever info metadata.\n */\nexport const RetrieverInfoSchema = z.object({\n  label: z.string().optional(),\n  /** Supported model capabilities. */\n  supports: z\n    .object({\n      /** Model can process media as part of the prompt (multimodal input). */\n      media: z.boolean().optional(),\n    })\n    .optional(),\n});\nexport type RetrieverInfo = z.infer<typeof RetrieverInfoSchema>;\n\n/**\n * A retriever action type.\n */\nexport type RetrieverAction<CustomOptions extends z.ZodTypeAny = z.ZodTypeAny> =\n  Action<typeof RetrieverRequestSchema, typeof RetrieverResponseSchema> & {\n    __configSchema?: CustomOptions;\n  };\n\n/**\n * An indexer action type.\n */\nexport type IndexerAction<IndexerOptions extends z.ZodTypeAny = z.ZodTypeAny> =\n  Action<typeof IndexerRequestSchema, z.ZodVoid> & {\n    __configSchema?: IndexerOptions;\n  };\n\nfunction retrieverWithMetadata<\n  RetrieverOptions extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  retriever: Action<\n    typeof RetrieverRequestSchema,\n    typeof RetrieverResponseSchema\n  >,\n  configSchema?: RetrieverOptions\n): RetrieverAction<RetrieverOptions> {\n  const withMeta = retriever as RetrieverAction<RetrieverOptions>;\n  withMeta.__configSchema = configSchema;\n  return withMeta;\n}\n\nfunction indexerWithMetadata<\n  IndexerOptions extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  indexer: Action<typeof IndexerRequestSchema, z.ZodVoid>,\n  configSchema?: IndexerOptions\n): IndexerAction<IndexerOptions> {\n  const withMeta = indexer as IndexerAction<IndexerOptions>;\n  withMeta.__configSchema = configSchema;\n  return withMeta;\n}\n\n/**\n *  Creates a retriever action for the provided {@link RetrieverFn} implementation.\n */\nexport function defineRetriever<\n  OptionsType extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  registry: Registry,\n  options: {\n    name: string;\n    configSchema?: OptionsType;\n    info?: RetrieverInfo;\n  },\n  runner: RetrieverFn<OptionsType>\n): RetrieverAction<OptionsType> {\n  const r = retriever(options, runner);\n  registry.registerAction('retriever', r);\n  return r;\n}\n\n/**\n *  Creates a retriever action for the provided {@link RetrieverFn} implementation.\n */\nexport function retriever<OptionsType extends z.ZodTypeAny = z.ZodTypeAny>(\n  options: {\n    name: string;\n    configSchema?: OptionsType;\n    info?: RetrieverInfo;\n  },\n  runner: RetrieverFn<OptionsType>\n): RetrieverAction<OptionsType> {\n  const retriever = action(\n    {\n      actionType: 'retriever',\n      name: options.name,\n      inputSchema: options.configSchema\n        ? RetrieverRequestSchema.extend({\n            options: options.configSchema.optional(),\n          })\n        : RetrieverRequestSchema,\n      outputSchema: RetrieverResponseSchema,\n      metadata: {\n        type: 'retriever',\n        info: options.info,\n        retriever: {\n          customOptions: options.configSchema\n            ? toJsonSchema({ schema: options.configSchema })\n            : undefined,\n        },\n      },\n    },\n    (i) => runner(new Document(i.query), i.options)\n  );\n  const rwm = retrieverWithMetadata(\n    retriever as Action<\n      typeof RetrieverRequestSchema,\n      typeof RetrieverResponseSchema\n    >,\n    options.configSchema\n  );\n  return rwm;\n}\n\n/**\n *  Creates an indexer action for the provided {@link IndexerFn} implementation.\n */\nexport function defineIndexer<IndexerOptions extends z.ZodTypeAny>(\n  registry: Registry,\n  options: {\n    name: string;\n    embedderInfo?: EmbedderInfo;\n    configSchema?: IndexerOptions;\n  },\n  runner: IndexerFn<IndexerOptions>\n): IndexerAction<IndexerOptions> {\n  const r = indexer(options, runner);\n  registry.registerAction('indexer', r);\n  return r;\n}\n\n/**\n *  Creates an indexer action for the provided {@link IndexerFn} implementation.\n */\nexport function indexer<IndexerOptions extends z.ZodTypeAny>(\n  options: {\n    name: string;\n    embedderInfo?: EmbedderInfo;\n    configSchema?: IndexerOptions;\n  },\n  runner: IndexerFn<IndexerOptions>\n): IndexerAction<IndexerOptions> {\n  const indexer = action(\n    {\n      actionType: 'indexer',\n      name: options.name,\n      inputSchema: options.configSchema\n        ? IndexerRequestSchema.extend({\n            options: options.configSchema.optional(),\n          })\n        : IndexerRequestSchema,\n      outputSchema: z.void(),\n      metadata: {\n        type: 'indexer',\n        embedderInfo: options.embedderInfo,\n        indexer: {\n          customOptions: options.configSchema\n            ? toJsonSchema({ schema: options.configSchema })\n            : undefined,\n        },\n      },\n    },\n    (i) =>\n      runner(\n        i.documents.map((dd) => new Document(dd)),\n        i.options\n      )\n  );\n  const iwm = indexerWithMetadata(\n    indexer as Action<typeof IndexerRequestSchema, z.ZodVoid>,\n    options.configSchema\n  );\n  return iwm;\n}\n\nexport interface RetrieverParams<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  retriever: RetrieverArgument<CustomOptions>;\n  query: string | DocumentData;\n  options?: z.infer<CustomOptions>;\n}\n\n/**\n * A type that can be used to pass a retriever as an argument, either using a reference or an action.\n */\nexport type RetrieverArgument<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> = RetrieverAction<CustomOptions> | RetrieverReference<CustomOptions> | string;\n\n/**\n * Retrieves documents from a {@link RetrieverArgument} based on the provided query.\n */\nexport async function retrieve<CustomOptions extends z.ZodTypeAny>(\n  registry: Registry,\n  params: RetrieverParams<CustomOptions>\n): Promise<Array<Document>> {\n  let retriever: RetrieverAction<CustomOptions>;\n  if (typeof params.retriever === 'string') {\n    retriever = await registry.lookupAction(`/retriever/${params.retriever}`);\n  } else if (Object.hasOwnProperty.call(params.retriever, 'info')) {\n    retriever = await registry.lookupAction(\n      `/retriever/${params.retriever.name}`\n    );\n  } else {\n    retriever = params.retriever as RetrieverAction<CustomOptions>;\n  }\n  if (!retriever) {\n    throw new Error('Unable to resolve the retriever');\n  }\n  const response = await retriever({\n    query:\n      typeof params.query === 'string'\n        ? Document.fromText(params.query)\n        : params.query,\n    options: params.options,\n  });\n\n  return response.documents.map((d) => new Document(d));\n}\n\n/**\n * A type that can be used to pass an indexer as an argument, either using a reference or an action.\n */\nexport type IndexerArgument<CustomOptions extends z.ZodTypeAny = z.ZodTypeAny> =\n  IndexerReference<CustomOptions> | IndexerAction<CustomOptions> | string;\n\n/**\n * Options passed to the index function.\n */\nexport interface IndexerParams<\n  CustomOptions extends z.ZodTypeAny = z.ZodTypeAny,\n> {\n  indexer: IndexerArgument<CustomOptions>;\n  documents: Array<DocumentData>;\n  options?: z.infer<CustomOptions>;\n}\n\n/**\n * Indexes documents using a {@link IndexerArgument}.\n */\nexport async function index<CustomOptions extends z.ZodTypeAny>(\n  registry: Registry,\n  params: IndexerParams<CustomOptions>\n): Promise<void> {\n  let indexer: IndexerAction<CustomOptions>;\n  if (typeof params.indexer === 'string') {\n    indexer = await registry.lookupAction(`/indexer/${params.indexer}`);\n  } else if (Object.hasOwnProperty.call(params.indexer, 'info')) {\n    indexer = await registry.lookupAction(`/indexer/${params.indexer.name}`);\n  } else {\n    indexer = params.indexer as IndexerAction<CustomOptions>;\n  }\n  if (!indexer) {\n    throw new Error('Unable to utilize the provided indexer');\n  }\n  return await indexer({\n    documents: params.documents,\n    options: params.options,\n  });\n}\n\n/**\n * Zod schema of common retriever options.\n */\nexport const CommonRetrieverOptionsSchema = z.object({\n  k: z.number().describe('Number of documents to retrieve').optional(),\n});\n\n/**\n * A retriver reference object.\n */\nexport interface RetrieverReference<CustomOptions extends z.ZodTypeAny> {\n  name: string;\n  configSchema?: CustomOptions;\n  info?: RetrieverInfo;\n}\n\n/**\n * Helper method to configure a {@link RetrieverReference} to a plugin.\n */\nexport function retrieverRef<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: RetrieverReference<CustomOptionsSchema>\n): RetrieverReference<CustomOptionsSchema> {\n  return { ...options };\n}\n\n// Reuse the same schema for both indexers and retrievers -- for now.\nexport const IndexerInfoSchema = RetrieverInfoSchema;\n\n/**\n * Indexer metadata.\n */\nexport type IndexerInfo = z.infer<typeof IndexerInfoSchema>;\n\nexport interface IndexerReference<CustomOptions extends z.ZodTypeAny> {\n  name: string;\n  configSchema?: CustomOptions;\n  info?: IndexerInfo;\n}\n\n/**\n * Helper method to configure a {@link IndexerReference} to a plugin.\n */\nexport function indexerRef<\n  CustomOptionsSchema extends z.ZodTypeAny = z.ZodTypeAny,\n>(\n  options: IndexerReference<CustomOptionsSchema>\n): IndexerReference<CustomOptionsSchema> {\n  return { ...options };\n}\n\nfunction itemToDocument<R>(\n  item: any,\n  options: SimpleRetrieverOptions\n): Document {\n  if (!item)\n    throw new GenkitError({\n      status: 'INVALID_ARGUMENT',\n      message: `Items returned from simple retriever must be non-null.`,\n    });\n  if (typeof item === 'string') return Document.fromText(item);\n  if (typeof options.content === 'function') {\n    const transformed = options.content(item);\n    return typeof transformed === 'string'\n      ? Document.fromText(transformed)\n      : new Document({ content: transformed });\n  }\n  if (typeof options.content === 'string' && typeof item === 'object')\n    return Document.fromText(item[options.content]);\n  throw new GenkitError({\n    status: 'INVALID_ARGUMENT',\n    message: `Cannot convert item to document without content option. Item: ${JSON.stringify(item)}`,\n  });\n}\n\nfunction itemToMetadata(\n  item: any,\n  options: SimpleRetrieverOptions\n): Document['metadata'] {\n  if (typeof item === 'string') return undefined;\n  if (Array.isArray(options.metadata) && typeof item === 'object') {\n    const out: Record<string, any> = {};\n    options.metadata.forEach((key) => (out[key] = item[key]));\n    return out;\n  }\n  if (typeof options.metadata === 'function') return options.metadata(item);\n  if (!options.metadata && typeof item === 'object') {\n    const out = { ...item };\n    if (typeof options.content === 'string') delete out[options.content];\n    return out;\n  }\n  throw new GenkitError({\n    status: 'INVALID_ARGUMENT',\n    message: `Unable to extract metadata from item with supplied options. Item: ${JSON.stringify(item)}`,\n  });\n}\n\n/**\n * Simple retriever options.\n */\nexport interface SimpleRetrieverOptions<\n  C extends z.ZodTypeAny = z.ZodTypeAny,\n  R = any,\n> {\n  /** The name of the retriever you're creating. */\n  name: string;\n  /** A Zod schema containing any configuration info available beyond the query. */\n  configSchema?: C;\n  /**\n   * Specifies how to extract content from the returned items.\n   *\n   * - If a string, specifies the key of the returned item to extract as content.\n   * - If a function, allows you to extract content as text or a document part.\n   **/\n  content?: string | ((item: R) => Document['content'] | string);\n  /**\n   * Specifies how to extract metadata from the returned items.\n   *\n   * - If an array of strings, specifies list of keys to extract from returned objects.\n   * - If a function, allows you to use custom behavior to extract metadata from returned items.\n   */\n  metadata?: string[] | ((item: R) => Document['metadata']);\n}\n\n/**\n * defineSimpleRetriever makes it easy to map existing data into documents that\n * can be used for prompt augmentation.\n *\n * @param options Configuration options for the retriever.\n * @param handler A function that queries a datastore and returns items from which to extract documents.\n * @returns A Genkit retriever.\n */\nexport function defineSimpleRetriever<\n  C extends z.ZodTypeAny = z.ZodTypeAny,\n  R = any,\n>(\n  registry: Registry,\n  options: SimpleRetrieverOptions<C, R>,\n  handler: (query: Document, config: z.infer<C>) => Promise<R[]>\n) {\n  return defineRetriever(\n    registry,\n    {\n      name: options.name,\n      configSchema: options.configSchema,\n    },\n    async (query, config) => {\n      const result = await handler(query, config);\n      return {\n        documents: result.map((item) => {\n          const doc = itemToDocument(item, options);\n          if (typeof item !== 'string')\n            doc.metadata = itemToMetadata(item, options);\n          return doc;\n        }),\n      };\n    }\n  );\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Action, ActionMetadata, BackgroundAction } from '@genkit-ai/core';\nimport type { Genkit } from './genkit.js';\nimport type { ActionType } from './registry.js';\nexport { embedder, embedderActionMetadata } from '@genkit-ai/ai/embedder';\nexport { evaluator } from '@genkit-ai/ai/evaluator';\nexport {\n  backgroundModel,\n  model,\n  modelActionMetadata,\n} from '@genkit-ai/ai/model';\nexport { reranker } from '@genkit-ai/ai/reranker';\nexport { indexer, retriever } from '@genkit-ai/ai/retriever';\n\nexport interface PluginProvider {\n  name: string;\n  initializer: () => void | Promise<void>;\n  resolver?: (action: ActionType, target: string) => Promise<void>;\n  listActions?: () => Promise<ActionMetadata[]>;\n}\n\nexport type ResolvableAction = Action | BackgroundAction;\n\nexport interface GenkitPluginV2 {\n  version: 'v2';\n  name: string;\n  init?: () => ResolvableAction[] | Promise<ResolvableAction[]>;\n  resolve?: (\n    actionType: ActionType,\n    name: string\n  ) => ResolvableAction | undefined | Promise<ResolvableAction | undefined>;\n  list?: () => ActionMetadata[] | Promise<ActionMetadata[]>;\n}\n\nexport type GenkitPlugin = (genkit: Genkit) => PluginProvider;\n\nexport type PluginInit = (genkit: Genkit) => void | Promise<void>;\n\nexport type PluginActionResolver = (\n  genkit: Genkit,\n  action: ActionType,\n  target: string\n) => Promise<void>;\n\n/**\n * Defines a Genkit plugin.\n */\nexport function genkitPlugin<T extends PluginInit>(\n  pluginName: string,\n  initFn: T,\n  resolveFn?: PluginActionResolver,\n  listActionsFn?: () => Promise<ActionMetadata[]>\n): GenkitPlugin {\n  return (genkit: Genkit) => ({\n    name: pluginName,\n    initializer: async () => {\n      await initFn(genkit);\n    },\n    resolver: async (action: ActionType, target: string): Promise<void> => {\n      if (resolveFn) {\n        return await resolveFn(genkit, action, target);\n      }\n    },\n    listActions: async (): Promise<ActionMetadata[]> => {\n      if (listActionsFn) {\n        return await listActionsFn();\n      }\n      return [];\n    },\n  });\n}\n\nexport function genkitPluginV2(\n  options: Omit<GenkitPluginV2, 'version'>\n): GenkitPluginV2 {\n  return { ...options, version: 'v2' };\n}\n\nexport function isPluginV2(plugin: unknown): plugin is GenkitPluginV2 {\n  return (plugin as GenkitPluginV2).version === 'v2';\n}\n", "/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  embedderActionMetadata,\n  embedderRef,\n  modelActionMetadata,\n  type ActionMetadata,\n  type EmbedderReference,\n  type Genkit,\n  type ModelReference,\n  type z,\n} from 'genkit';\nimport { logger } from 'genkit/logging';\nimport { modelRef } from 'genkit/model';\nimport { genkitPlugin, type GenkitPlugin } from 'genkit/plugin';\nimport type { ActionType } from 'genkit/registry';\nimport { getApiKeyFromEnvVar } from './common.js';\nimport {\n  SUPPORTED_MODELS as EMBEDDER_MODELS,\n  GeminiEmbeddingConfigSchema,\n  defineGoogleAIEmbedder,\n  geminiEmbedding001,\n  textEmbedding004,\n  textEmbeddingGecko001,\n  type GeminiEmbeddingConfig,\n} from './embedder.js';\nimport {\n  GeminiConfigSchema,\n  SUPPORTED_GEMINI_MODELS,\n  defineGoogleAIModel,\n  gemini,\n  gemini10Pro,\n  gemini15Flash,\n  gemini15Flash8b,\n  gemini15Pro,\n  gemini20Flash,\n  gemini20FlashExp,\n  gemini20FlashLite,\n  gemini20ProExp0205,\n  gemini25FlashLite,\n  gemini25FlashPreview0417,\n  gemini25ProExp0325,\n  gemini25ProPreview0325,\n  type GeminiConfig,\n  type GeminiVersionString,\n} from './gemini.js';\nimport {\n  GENERIC_IMAGEN_INFO,\n  ImagenConfigSchema,\n  defineImagenModel,\n  type KNOWN_IMAGEN_MODELS,\n} from './imagen.js';\nimport { listModels } from './list-models.js';\nimport {\n  GENERIC_VEO_INFO,\n  KNOWN_VEO_MODELS,\n  VeoConfigSchema,\n  defineVeoModel,\n} from './veo.js';\nexport {\n  gemini,\n  gemini10Pro,\n  gemini15Flash,\n  gemini15Flash8b,\n  gemini15Pro,\n  gemini20Flash,\n  gemini20FlashExp,\n  gemini20FlashLite,\n  gemini20ProExp0205,\n  gemini25FlashLite,\n  gemini25FlashPreview0417,\n  gemini25ProExp0325,\n  gemini25ProPreview0325,\n  geminiEmbedding001,\n  textEmbedding004,\n  textEmbeddingGecko001,\n  type GeminiConfig,\n  type GeminiVersionString,\n};\n\nexport interface PluginOptions {\n  /**\n   * Provide the API key to use to authenticate with the Gemini API. By\n   * default, an API key must be provided explicitly here or through the\n   * `GEMINI_API_KEY` or `GOOGLE_API_KEY` environment variables.\n   *\n   * If `false` is explicitly passed, the plugin will be configured to\n   * expect an `apiKey` option to be provided to the model config at\n   * call time.\n   **/\n  apiKey?: string | false;\n  apiVersion?: string | string[];\n  baseUrl?: string;\n  models?: (\n    | ModelReference</** @ignore */ typeof GeminiConfigSchema>\n    | string\n  )[];\n  experimental_debugTraces?: boolean;\n}\n\nasync function initializer(ai: Genkit, options?: PluginOptions) {\n  let apiVersions = ['v1'];\n\n  if (options?.apiVersion) {\n    if (Array.isArray(options?.apiVersion)) {\n      apiVersions = options?.apiVersion;\n    } else {\n      apiVersions = [options?.apiVersion];\n    }\n  }\n\n  if (apiVersions.includes('v1beta')) {\n    Object.keys(SUPPORTED_GEMINI_MODELS).forEach((name) =>\n      defineGoogleAIModel({\n        ai,\n        name,\n        apiKey: options?.apiKey,\n        apiVersion: 'v1beta',\n        baseUrl: options?.baseUrl,\n        debugTraces: options?.experimental_debugTraces,\n      })\n    );\n  }\n  if (apiVersions.includes('v1')) {\n    Object.keys(SUPPORTED_GEMINI_MODELS).forEach((name) =>\n      defineGoogleAIModel({\n        ai,\n        name,\n        apiKey: options?.apiKey,\n        apiVersion: undefined,\n        baseUrl: options?.baseUrl,\n        debugTraces: options?.experimental_debugTraces,\n      })\n    );\n    Object.keys(EMBEDDER_MODELS).forEach((name) =>\n      defineGoogleAIEmbedder(ai, name, { apiKey: options?.apiKey })\n    );\n  }\n\n  if (options?.models) {\n    for (const modelOrRef of options?.models) {\n      const modelName =\n        typeof modelOrRef === 'string'\n          ? modelOrRef\n          : // strip out the `googleai/` prefix\n            modelOrRef.name.split('/')[1];\n      const modelRef =\n        typeof modelOrRef === 'string' ? gemini(modelOrRef) : modelOrRef;\n      defineGoogleAIModel({\n        ai,\n        name: modelName,\n        apiKey: options?.apiKey,\n        baseUrl: options?.baseUrl,\n        info: {\n          ...modelRef.info,\n          label: `Google AI - ${modelName}`,\n        },\n        debugTraces: options?.experimental_debugTraces,\n      });\n    }\n  }\n}\n\nasync function resolver(\n  ai: Genkit,\n  actionType: ActionType,\n  actionName: string,\n  options?: PluginOptions\n) {\n  if (actionType === 'embedder') {\n    resolveEmbedder(ai, actionName, options);\n  } else if (actionName.startsWith('veo')) {\n    // we do it this way because the request may come in for\n    // action type 'model' and action name 'veo-...'. That case should\n    // be a noop. It's just the order or model lookup.\n    if (actionType === 'background-model') {\n      defineVeoModel(ai, actionName, options?.apiKey);\n    }\n  } else if (actionType === 'model') {\n    resolveModel(ai, actionName, options);\n  }\n}\n\nfunction resolveModel(ai: Genkit, actionName: string, options?: PluginOptions) {\n  if (actionName.startsWith('imagen')) {\n    defineImagenModel(ai, actionName, options?.apiKey);\n    return;\n  }\n\n  const modelRef = gemini(actionName);\n  defineGoogleAIModel({\n    ai,\n    name: modelRef.name,\n    apiKey: options?.apiKey,\n    baseUrl: options?.baseUrl,\n    info: {\n      ...modelRef.info,\n      label: `Google AI - ${actionName}`,\n    },\n    debugTraces: options?.experimental_debugTraces,\n  });\n}\n\nfunction resolveEmbedder(\n  ai: Genkit,\n  actionName: string,\n  options?: PluginOptions\n) {\n  defineGoogleAIEmbedder(ai, `googleai/${actionName}`, {\n    apiKey: options?.apiKey,\n  });\n}\n\nasync function listActions(options?: PluginOptions): Promise<ActionMetadata[]> {\n  const apiKey = options?.apiKey || getApiKeyFromEnvVar();\n  if (!apiKey) {\n    // If API key is not configured we don't want to error, just return empty.\n    // In practice it will never actually reach this point without the API key,\n    // plugin initializer will fail before that.\n    logger.error(\n      'Pass in the API key or set the GEMINI_API_KEY or GOOGLE_API_KEY environment variable.'\n    );\n    return [];\n  }\n\n  const models = await listModels(\n    options?.baseUrl || 'https://generativelanguage.googleapis.com',\n    apiKey\n  );\n\n  return [\n    // Imagen\n    ...models\n      .filter(\n        (m) =>\n          m.supportedGenerationMethods.includes('predict') &&\n          m.name.includes('imagen')\n      )\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const name = m.name.split('/').at(-1)!;\n\n        return modelActionMetadata({\n          name: `googleai/${name}`,\n          info: { ...GENERIC_IMAGEN_INFO },\n          configSchema: ImagenConfigSchema,\n        });\n      }),\n    // Veo\n    ...models\n      .filter(\n        (m) =>\n          m.supportedGenerationMethods.includes('predictLongRunning') &&\n          m.name.includes('veo')\n      )\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const name = m.name.split('/').at(-1)!;\n\n        return modelActionMetadata({\n          name: `googleai/${name}`,\n          info: { ...GENERIC_VEO_INFO },\n          configSchema: VeoConfigSchema,\n          background: true,\n        });\n      }),\n    // Models\n    ...models\n      .filter((m) => m.supportedGenerationMethods.includes('generateContent'))\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const ref = gemini(\n          m.name.startsWith('models/')\n            ? m.name.substring('models/'.length)\n            : m.name\n        );\n\n        return modelActionMetadata({\n          name: ref.name,\n          info: ref.info,\n          configSchema: GeminiConfigSchema,\n        });\n      }),\n    // Embedders\n    ...models\n      .filter((m) => m.supportedGenerationMethods.includes('embedContent'))\n      // Filter out deprecated\n      .filter((m) => !m.description || !m.description.includes('deprecated'))\n      .map((m) => {\n        const name =\n          'googleai/' +\n          (m.name.startsWith('models/')\n            ? m.name.substring('models/'.length)\n            : m.name);\n\n        return embedderActionMetadata({\n          name,\n          configSchema: GeminiEmbeddingConfigSchema,\n          info: {\n            dimensions: 768,\n            label: `Google Gen AI - ${name}`,\n            supports: {\n              input: ['text'],\n            },\n          },\n        });\n      }),\n  ];\n}\n\n/**\n * Google Gemini Developer API plugin.\n */\nexport function googleAIPlugin(options?: PluginOptions): GenkitPlugin {\n  let listActionsCache;\n  return genkitPlugin(\n    'googleai',\n    async (ai: Genkit) => await initializer(ai, options),\n    async (ai: Genkit, actionType: ActionType, actionName: string) =>\n      await resolver(ai, actionType, actionName, options),\n    async () => {\n      if (listActionsCache) return listActionsCache;\n      listActionsCache = await listActions(options);\n      return listActionsCache;\n    }\n  );\n}\n\nexport type GoogleAIPlugin = {\n  (params?: PluginOptions): GenkitPlugin;\n  model(\n    name: keyof typeof SUPPORTED_GEMINI_MODELS | (`gemini-${string}` & {}),\n    config?: z.infer<typeof GeminiConfigSchema>\n  ): ModelReference<typeof GeminiConfigSchema>;\n  model(\n    name: KNOWN_IMAGEN_MODELS | (`imagen${string}` & {}),\n    config?: z.infer<typeof ImagenConfigSchema>\n  ): ModelReference<typeof ImagenConfigSchema>;\n  model(\n    name: KNOWN_VEO_MODELS | (`veo${string}` & {}),\n    config?: z.infer<typeof VeoConfigSchema>\n  ): ModelReference<typeof VeoConfigSchema>;\n  model(name: string, config?: any): ModelReference<z.ZodTypeAny>;\n  embedder(\n    name: string,\n    config?: GeminiEmbeddingConfig\n  ): EmbedderReference<typeof GeminiEmbeddingConfigSchema>;\n};\n\n/**\n * Google Gemini Developer API plugin.\n */\nexport const googleAI = googleAIPlugin as GoogleAIPlugin;\n// provide generic implementation for the model function overloads.\n(googleAI as any).model = (\n  name: string,\n  config?: any\n): ModelReference<z.ZodTypeAny> => {\n  if (name.startsWith('imagen')) {\n    return modelRef({\n      name: `googleai/${name}`,\n      config,\n      configSchema: ImagenConfigSchema,\n    });\n  }\n  if (name.startsWith('veo')) {\n    return modelRef({\n      name: `googleai/${name}`,\n      config,\n      configSchema: VeoConfigSchema,\n    });\n  }\n  return modelRef({\n    name: `googleai/${name}`,\n    config,\n    configSchema: GeminiConfigSchema,\n  });\n};\ngoogleAI.embedder = (\n  name: string,\n  config?: GeminiEmbeddingConfig\n): EmbedderReference<typeof GeminiEmbeddingConfigSchema> => {\n  return embedderRef({\n    name: `googleai/${name}`,\n    config,\n    configSchema: GeminiEmbeddingConfigSchema,\n  });\n};\n\nexport default googleAI;\n"],
  "mappings": "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",
  "names": ["__export", "import_genkit", "__reExport", "__export", "getApiKeyFromEnvVar", "import_genkit", "__toESM", "process", "defaultGetClientHeader", "require_dist", "Task", "model", "apiKey", "_a", "__export", "import_embedder", "__export", "GeminiEmbeddingConfigSchema", "defineGoogleAIEmbedder", "geminiEmbedding001", "textEmbedding004", "textEmbeddingGecko001", "import_genkit", "import_embedder", "import_common", "apiKey", "embedder", "model_exports", "__export", "import_model", "__export", "import_middleware", "Task", "RpcTask", "apiKey", "HarmCategory", "HarmBlockThreshold", "HarmProbability", "BlockReason", "FinishReason", "TaskType", "DynamicRetrievalMode", "__export", "__export", "import_genkit", "__export", "import_crypto", "__toESM", "import_genkit", "crypto", "_a", "__export", "import_genkit", "import_logging", "apiKey", "__export", "GeminiConfigSchema", "SUPPORTED_GEMINI_MODELS", "defineGoogleAIModel", "gemini", "gemini10Pro", "gemini15Flash", "gemini15Flash8b", "gemini15Pro", "gemini20Flash", "gemini20FlashExp", "gemini20FlashLite", "gemini20ProExp0205", "gemini25FlashLite", "gemini25FlashPreview0417", "gemini25ProExp0325", "gemini25ProPreview0325", "import_genkit", "import_model", "import_middleware", "import_tracing", "import_common", "version", "model", "apiKey", "_b", "_a", "__export", "import_common", "model", "apiKey", "fetch", "__export", "GENERIC_IMAGEN_INFO", "ImagenConfigSchema", "defineImagenModel", "import_genkit", "import_model", "import_common", "apiKey", "model", "__export", "listModels", "apiKey", "__export", "GENERIC_VEO_INFO", "VeoConfigSchema", "defineVeoModel", "import_genkit", "import_model", "import_common", "apiKey", "model", "getBasicUsageStats", "modelRef", "lib_exports", "lib_exports", "types", "x", "base", "name", "schema", "import_error", "Ajv", "addFormats", "_a", "modelRef", "version", "getBasicUsageStats", "model", "import_document", "EmbedderInfoSchema", "import_error", "import_logging", "EvalStatusEnum", "import_document", "import_document", "genkit", "action", "import_embedder", "EMBEDDER_MODELS", "modelRef", "resolveModel", "apiKey"]
}
